{
  "file": "sorting-algorithms-heapsort.dart",
  "functions": [
    {
      "name": "heapSort",
      "source": "void heapSort(List a) {\n  int count = a.length;\n\n  // first place 'a' in max-heap order\n  heapify(a, count);\n\n  int end = count - 1;\n  while (end > 0) {\n    // swap the root (maximum value) of the heap with the\n    // last element of the heap\n    int tmp = a[end];\n    a[end] = a[0];\n    a[0] = tmp;\n\n    // put the heap back in max-heap order\n    siftDown(a, 0, end - 1);\n\n    // decrement the size of the heap so that the previous\n    // max value will stay in its proper place\n    end--;\n  }\n}",
      "assembly": "Dump of assembler code for function heapSort:\n   0x000000000008a36c <+0>:\tpush   rbp\n   0x000000000008a36d <+1>:\tmov    rbp,rsp\n   0x000000000008a370 <+4>:\tsub    rsp,0x10\n   0x000000000008a374 <+8>:\tmov    rax,rdi\n   0x000000000008a377 <+11>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x000000000008a37b <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a37f <+19>:\tjbe    0x8a555 <heapSort+489>\n   0x000000000008a385 <+25>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a389 <+29>:\tsar    rcx,1\n   0x000000000008a38c <+32>:\tmov    rdi,rax\n   0x000000000008a38f <+35>:\tmov    rsi,rcx\n   0x000000000008a392 <+38>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a396 <+42>:\tcall   0x8a594 <heapify>\n   0x000000000008a39b <+47>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a39f <+51>:\tsub    rcx,0x1\n   0x000000000008a3a3 <+55>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a3a7 <+59>:\tmov    rdi,QWORD PTR [rsi+0xf]\n   0x000000000008a3ab <+63>:\tsar    rdi,1\n   0x000000000008a3ae <+66>:\tmov    r8,QWORD PTR [rsi+0x17]\n   0x000000000008a3b2 <+70>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3b6 <+74>:\tjbe    0x8a561 <heapSort+501>\n   0x000000000008a3bc <+80>:\tcmp    rcx,0x0\n   0x000000000008a3c0 <+84>:\tjle    0x8a54c <heapSort+480>\n   0x000000000008a3c6 <+90>:\tmov    rax,rdi\n   0x000000000008a3c9 <+93>:\tmov    rbx,rcx\n   0x000000000008a3cc <+96>:\tcmp    rbx,rax\n   0x000000000008a3cf <+99>:\tjae    0x8a56d <heapSort+513>\n   0x000000000008a3d5 <+105>:\tmov    rsi,QWORD PTR [r8+rcx*8+0x17]\n   0x000000000008a3da <+110>:\tmov    rax,rdi\n   0x000000000008a3dd <+113>:\txor    ebx,ebx\n   0x000000000008a3df <+115>:\tcmp    rbx,rax\n   0x000000000008a3e2 <+118>:\tjae    0x8a572 <heapSort+518>\n   0x000000000008a3e8 <+124>:\tmov    rax,QWORD PTR [r8+0x17]\n   0x000000000008a3ec <+128>:\tmov    rdx,r8\n   0x000000000008a3ef <+131>:\tlea    r13,[rdx+rcx*8+0x17]\n   0x000000000008a3f4 <+136>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a3f8 <+140>:\ttest   al,0x1\n   0x000000000008a3fa <+142>:\tje     0x8a413 <heapSort+167>\n   0x000000000008a3fc <+144>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a400 <+148>:\tshr    r11d,0x2\n   0x000000000008a404 <+152>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a408 <+156>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a40c <+160>:\tje     0x8a413 <heapSort+167>\n   0x000000000008a40e <+162>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a413 <+167>:\tmov    rdx,r8\n   0x000000000008a416 <+170>:\tmov    rax,rsi\n   0x000000000008a419 <+173>:\tlea    r13,[rdx+0x17]\n   0x000000000008a41d <+177>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a421 <+181>:\ttest   al,0x1\n   0x000000000008a423 <+183>:\tje     0x8a43c <heapSort+208>\n   0x000000000008a425 <+185>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a429 <+189>:\tshr    r11d,0x2\n   0x000000000008a42d <+193>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a431 <+197>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a435 <+201>:\tje     0x8a43c <heapSort+208>\n   0x000000000008a437 <+203>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a43c <+208>:\tsub    rcx,0x1\n   0x000000000008a440 <+212>:\txor    esi,esi\n   0x000000000008a442 <+214>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a446 <+218>:\tjbe    0x8a577 <heapSort+523>\n   0x000000000008a44c <+224>:\tmov    r9,rsi\n   0x000000000008a44f <+227>:\tshl    r9,1\n   0x000000000008a452 <+230>:\tadd    r9,0x1\n   0x000000000008a456 <+234>:\tcmp    r9,rcx\n   0x000000000008a459 <+237>:\tjg     0x8a3b2 <heapSort+70>\n   0x000000000008a45f <+243>:\tmov    rdx,r9\n   0x000000000008a462 <+246>:\tadd    rdx,0x1\n   0x000000000008a466 <+250>:\tcmp    rdx,rcx\n   0x000000000008a469 <+253>:\tjg     0x8a4b7 <heapSort+331>\n   0x000000000008a46f <+259>:\tmov    rax,rdi\n   0x000000000008a472 <+262>:\tmov    rbx,r9\n   0x000000000008a475 <+265>:\tcmp    rbx,rax\n   0x000000000008a478 <+268>:\tjae    0x8a583 <heapSort+535>\n   0x000000000008a47e <+274>:\tmov    r10,QWORD PTR [r8+r9*8+0x17]\n   0x000000000008a483 <+279>:\tmov    rax,rdi\n   0x000000000008a486 <+282>:\tmov    rbx,rdx\n   0x000000000008a489 <+285>:\tcmp    rbx,rax\n   0x000000000008a48c <+288>:\tjae    0x8a588 <heapSort+540>\n   0x000000000008a492 <+294>:\tmov    r12,QWORD PTR [r8+rdx*8+0x17]\n   0x000000000008a497 <+299>:\tsar    r10,1\n   0x000000000008a49a <+302>:\tjae    0x8a4a1 <heapSort+309>\n   0x000000000008a49c <+304>:\tmov    r10,QWORD PTR [r10+r10*1+0x8]\n   0x000000000008a4a1 <+309>:\tsar    r12,1\n   0x000000000008a4a4 <+312>:\tjae    0x8a4ab <heapSort+319>\n   0x000000000008a4a6 <+314>:\tmov    r12,QWORD PTR [r12+r12*1+0x8]\n   0x000000000008a4ab <+319>:\tcmp    r10,r12\n   0x000000000008a4ae <+322>:\tjge    0x8a4b7 <heapSort+331>\n   0x000000000008a4b4 <+328>:\tmov    r9,rdx\n   0x000000000008a4b7 <+331>:\tmov    r10,QWORD PTR [r8+rsi*8+0x17]\n   0x000000000008a4bc <+336>:\tmov    rax,rdi\n   0x000000000008a4bf <+339>:\tmov    rbx,r9\n   0x000000000008a4c2 <+342>:\tcmp    rbx,rax\n   0x000000000008a4c5 <+345>:\tjae    0x8a58d <heapSort+545>\n   0x000000000008a4cb <+351>:\tmov    rax,QWORD PTR [r8+r9*8+0x17]\n   0x000000000008a4d0 <+356>:\tmov    rbx,r10\n   0x000000000008a4d3 <+359>:\tsar    rbx,1\n   0x000000000008a4d6 <+362>:\tjae    0x8a4dd <heapSort+369>\n   0x000000000008a4d8 <+364>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a4dd <+369>:\tmov    r12,rax\n   0x000000000008a4e0 <+372>:\tsar    r12,1\n   0x000000000008a4e3 <+375>:\tjae    0x8a4ea <heapSort+382>\n   0x000000000008a4e5 <+377>:\tmov    r12,QWORD PTR [r12+r12*1+0x8]\n   0x000000000008a4ea <+382>:\tcmp    rbx,r12\n   0x000000000008a4ed <+385>:\tjge    0x8a3b2 <heapSort+70>\n   0x000000000008a4f3 <+391>:\tmov    rdx,r8\n   0x000000000008a4f6 <+394>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008a4fb <+399>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a4ff <+403>:\ttest   al,0x1\n   0x000000000008a501 <+405>:\tje     0x8a51a <heapSort+430>\n   0x000000000008a503 <+407>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a507 <+411>:\tshr    r11d,0x2\n   0x000000000008a50b <+415>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a50f <+419>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a513 <+423>:\tje     0x8a51a <heapSort+430>\n   0x000000000008a515 <+425>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a51a <+430>:\tmov    rdx,r8\n   0x000000000008a51d <+433>:\tmov    rax,r10\n   0x000000000008a520 <+436>:\tlea    r13,[rdx+r9*8+0x17]\n   0x000000000008a525 <+441>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a529 <+445>:\ttest   al,0x1\n   0x000000000008a52b <+447>:\tje     0x8a544 <heapSort+472>\n   0x000000000008a52d <+449>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a531 <+453>:\tshr    r11d,0x2\n   0x000000000008a535 <+457>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a539 <+461>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a53d <+465>:\tje     0x8a544 <heapSort+472>\n   0x000000000008a53f <+467>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a544 <+472>:\tmov    rsi,r9\n   0x000000000008a547 <+475>:\tjmp    0x8a442 <heapSort+214>\n   0x000000000008a54c <+480>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a550 <+484>:\tmov    rsp,rbp\n   0x000000000008a553 <+487>:\tpop    rbp\n   0x000000000008a554 <+488>:\tret\n   0x000000000008a555 <+489>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a55c <+496>:\tjmp    0x8a385 <heapSort+25>\n   0x000000000008a561 <+501>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a568 <+508>:\tjmp    0x8a3bc <heapSort+80>\n   0x000000000008a56d <+513>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a572 <+518>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a577 <+523>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a57e <+530>:\tjmp    0x8a44c <heapSort+224>\n   0x000000000008a583 <+535>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a588 <+540>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a58d <+545>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "heapify",
      "source": "void heapify(List a, int count) {\n  // start is assigned the index in 'a' of the last parent node\n  int start = ((count - 2)/2).toInt(); // binary heap\n\n  while (start >= 0) {\n    // sift down the node at index 'start' to the proper place\n    // such that all nodes below the 'start' index are in heap\n    // order\n    siftDown(a, start, count - 1);\n    start--;\n  }\n}",
      "assembly": "Dump of assembler code for function heapify:\n   0x000000000008a594 <+0>:\tpush   rbp\n   0x000000000008a595 <+1>:\tmov    rbp,rsp\n   0x000000000008a598 <+4>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a5a1 <+13>:\tmov    rcx,rsi\n   0x000000000008a5a4 <+16>:\tsub    rcx,0x2\n   0x000000000008a5a8 <+20>:\txorps  xmm1,xmm1\n   0x000000000008a5ab <+23>:\tcvtsi2sd xmm1,rcx\n   0x000000000008a5b0 <+28>:\tdivsd  xmm1,xmm0\n   0x000000000008a5b4 <+32>:\tcvttsd2si rcx,xmm1\n   0x000000000008a5b9 <+37>:\tmov    r8,rcx\n   0x000000000008a5bc <+40>:\tshl    r8,1\n   0x000000000008a5bf <+43>:\tjo     0x8a72c <heapify+408>\n   0x000000000008a5c5 <+49>:\tadd    rcx,rcx\n   0x000000000008a5c8 <+52>:\tsar    rcx,1\n   0x000000000008a5cb <+55>:\tjae    0x8a5d2 <heapify+62>\n   0x000000000008a5cd <+57>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a5d2 <+62>:\tsub    rsi,0x1\n   0x000000000008a5d6 <+66>:\tmov    r8,QWORD PTR [rdi+0xf]\n   0x000000000008a5da <+70>:\tmov    r9,r8\n   0x000000000008a5dd <+73>:\tsar    r9,1\n   0x000000000008a5e0 <+76>:\tmov    r10,QWORD PTR [rdi+0x17]\n   0x000000000008a5e4 <+80>:\tsar    r8,1\n   0x000000000008a5e7 <+83>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a5eb <+87>:\tjbe    0x8a75b <heapify+455>\n   0x000000000008a5f1 <+93>:\tcmp    rcx,0x0\n   0x000000000008a5f5 <+97>:\tjl     0x8a723 <heapify+399>\n   0x000000000008a5fb <+103>:\tmov    rdi,rcx\n   0x000000000008a5fe <+106>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a602 <+110>:\tjbe    0x8a767 <heapify+467>\n   0x000000000008a608 <+116>:\tmov    r12,rdi\n   0x000000000008a60b <+119>:\tshl    r12,1\n   0x000000000008a60e <+122>:\tadd    r12,0x1\n   0x000000000008a612 <+126>:\tcmp    r12,rsi\n   0x000000000008a615 <+129>:\tjg     0x8a71a <heapify+390>\n   0x000000000008a61b <+135>:\tmov    rdx,r12\n   0x000000000008a61e <+138>:\tadd    rdx,0x1\n   0x000000000008a622 <+142>:\tcmp    rdx,rsi\n   0x000000000008a625 <+145>:\tjg     0x8a673 <heapify+223>\n   0x000000000008a62b <+151>:\tmov    rax,r8\n   0x000000000008a62e <+154>:\tmov    rbx,r12\n   0x000000000008a631 <+157>:\tcmp    rbx,rax\n   0x000000000008a634 <+160>:\tjae    0x8a773 <heapify+479>\n   0x000000000008a63a <+166>:\tmov    r13,QWORD PTR [r10+r12*8+0x17]\n   0x000000000008a63f <+171>:\tmov    rax,r8\n   0x000000000008a642 <+174>:\tmov    rbx,rdx\n   0x000000000008a645 <+177>:\tcmp    rbx,rax\n   0x000000000008a648 <+180>:\tjae    0x8a778 <heapify+484>\n   0x000000000008a64e <+186>:\tmov    rax,QWORD PTR [r10+rdx*8+0x17]\n   0x000000000008a653 <+191>:\tsar    r13,1\n   0x000000000008a656 <+194>:\tjae    0x8a65d <heapify+201>\n   0x000000000008a658 <+196>:\tmov    r13,QWORD PTR [r13+r13*1+0x8]\n   0x000000000008a65d <+201>:\tsar    rax,1\n   0x000000000008a660 <+204>:\tjae    0x8a667 <heapify+211>\n   0x000000000008a662 <+206>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008a667 <+211>:\tcmp    r13,rax\n   0x000000000008a66a <+214>:\tjge    0x8a673 <heapify+223>\n   0x000000000008a670 <+220>:\tmov    r12,rdx\n   0x000000000008a673 <+223>:\tmov    rax,r9\n   0x000000000008a676 <+226>:\tmov    rbx,rdi\n   0x000000000008a679 <+229>:\tcmp    rbx,rax\n   0x000000000008a67c <+232>:\tjae    0x8a77d <heapify+489>\n   0x000000000008a682 <+238>:\tmov    r13,QWORD PTR [r10+rdi*8+0x17]\n   0x000000000008a687 <+243>:\tmov    rax,r9\n   0x000000000008a68a <+246>:\tmov    rbx,r12\n   0x000000000008a68d <+249>:\tcmp    rbx,rax\n   0x000000000008a690 <+252>:\tjae    0x8a782 <heapify+494>\n   0x000000000008a696 <+258>:\tmov    rax,QWORD PTR [r10+r12*8+0x17]\n   0x000000000008a69b <+263>:\tmov    rbx,r13\n   0x000000000008a69e <+266>:\tsar    rbx,1\n   0x000000000008a6a1 <+269>:\tjae    0x8a6a8 <heapify+276>\n   0x000000000008a6a3 <+271>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a6a8 <+276>:\tmov    rdx,rax\n   0x000000000008a6ab <+279>:\tsar    rdx,1\n   0x000000000008a6ae <+282>:\tjae    0x8a6b5 <heapify+289>\n   0x000000000008a6b0 <+284>:\tmov    rdx,QWORD PTR [rdx+rdx*1+0x8]\n   0x000000000008a6b5 <+289>:\tcmp    rbx,rdx\n   0x000000000008a6b8 <+292>:\tjge    0x8a71a <heapify+390>\n   0x000000000008a6be <+298>:\tmov    rdx,r10\n   0x000000000008a6c1 <+301>:\tmov    rbx,r13\n   0x000000000008a6c4 <+304>:\tlea    r13,[rdx+rdi*8+0x17]\n   0x000000000008a6c9 <+309>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a6cd <+313>:\ttest   al,0x1\n   0x000000000008a6cf <+315>:\tje     0x8a6e8 <heapify+340>\n   0x000000000008a6d1 <+317>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a6d5 <+321>:\tshr    r11d,0x2\n   0x000000000008a6d9 <+325>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a6dd <+329>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a6e1 <+333>:\tje     0x8a6e8 <heapify+340>\n   0x000000000008a6e3 <+335>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a6e8 <+340>:\tmov    rdx,r10\n   0x000000000008a6eb <+343>:\tmov    rax,rbx\n   0x000000000008a6ee <+346>:\tlea    r13,[rdx+r12*8+0x17]\n   0x000000000008a6f3 <+351>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a6f7 <+355>:\ttest   al,0x1\n   0x000000000008a6f9 <+357>:\tje     0x8a712 <heapify+382>\n   0x000000000008a6fb <+359>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a6ff <+363>:\tshr    r11d,0x2\n   0x000000000008a703 <+367>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a707 <+371>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a70b <+375>:\tje     0x8a712 <heapify+382>\n   0x000000000008a70d <+377>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a712 <+382>:\tmov    rdi,r12\n   0x000000000008a715 <+385>:\tjmp    0x8a5fe <heapify+106>\n   0x000000000008a71a <+390>:\tsub    rcx,0x1\n   0x000000000008a71e <+394>:\tjmp    0x8a5e7 <heapify+83>\n   0x000000000008a723 <+399>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a727 <+403>:\tmov    rsp,rbp\n   0x000000000008a72a <+406>:\tpop    rbp\n   0x000000000008a72b <+407>:\tret\n   0x000000000008a72c <+408>:\tsub    rsp,0x10\n   0x000000000008a730 <+412>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x000000000008a734 <+416>:\tpush   rdi\n   0x000000000008a735 <+417>:\tpush   rsi\n   0x000000000008a736 <+418>:\tmovaps xmm0,xmm1\n   0x000000000008a739 <+421>:\tmov    eax,0x4a\n   0x000000000008a73e <+426>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a745 <+433>:\tcall   QWORD PTR [r11+0x7]\n   0x000000000008a749 <+437>:\tmov    rcx,rax\n   0x000000000008a74c <+440>:\tpop    rsi\n   0x000000000008a74d <+441>:\tpop    rdi\n   0x000000000008a74e <+442>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x000000000008a752 <+446>:\tadd    rsp,0x10\n   0x000000000008a756 <+450>:\tjmp    0x8a5c8 <heapify+52>\n   0x000000000008a75b <+455>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a762 <+462>:\tjmp    0x8a5f1 <heapify+93>\n   0x000000000008a767 <+467>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a76e <+474>:\tjmp    0x8a608 <heapify+116>\n   0x000000000008a773 <+479>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a778 <+484>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a77d <+489>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a782 <+494>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  var arr=[1,5,2,7,3,9,4,6,8];\n  print(\"Before sort\");\n  arr.forEach((var i)=>print(\"$i\"));\n  heapSort(arr);\n  print(\"After sort\");\n  arr.forEach((var i)=>print(\"$i\"));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x20\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a33d <main+489>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x000000000008a16d <+25>:\tmov    r10d,0x12\n   0x000000000008a173 <+31>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a178 <+36>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a184 <+48>:\tmov    QWORD PTR [rax+0x1f],0xa\n   0x000000000008a18c <+56>:\tmov    QWORD PTR [rax+0x27],0x4\n   0x000000000008a194 <+64>:\tmov    QWORD PTR [rax+0x2f],0xe\n   0x000000000008a19c <+72>:\tmov    QWORD PTR [rax+0x37],0x6\n   0x000000000008a1a4 <+80>:\tmov    QWORD PTR [rax+0x3f],0x12\n   0x000000000008a1ac <+88>:\tmov    QWORD PTR [rax+0x47],0x8\n   0x000000000008a1b4 <+96>:\tmov    QWORD PTR [rax+0x4f],0xc\n   0x000000000008a1bc <+104>:\tmov    QWORD PTR [rax+0x57],0x10\n   0x000000000008a1c4 <+112>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a1cb <+119>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a1d0 <+124>:\tmov    rcx,rax\n   0x000000000008a1d3 <+127>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1d7 <+131>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a1db <+135>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a1df <+139>:\tmov    QWORD PTR [rcx+0xf],0x12\n   0x000000000008a1e7 <+147>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a1ee <+154>:\tcall   0x8a7c0 <printToConsole>\n   0x000000000008a1f3 <+159>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a1f7 <+163>:\tmov    rcx,QWORD PTR [rdi+0xf]\n   0x000000000008a1fb <+167>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a1ff <+171>:\tmov    rax,rcx\n   0x000000000008a202 <+174>:\tsar    rax,1\n   0x000000000008a205 <+177>:\txor    edx,edx\n   0x000000000008a207 <+179>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008a20b <+183>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a20f <+187>:\tjbe    0x8a349 <main+501>\n   0x000000000008a215 <+193>:\tcmp    rdx,rax\n   0x000000000008a218 <+196>:\tjge    0x8a26f <main+283>\n   0x000000000008a21e <+202>:\tmov    rbx,rdx\n   0x000000000008a221 <+205>:\tcmp    rbx,rax\n   0x000000000008a224 <+208>:\tjae    0x8a355 <main+513>\n   0x000000000008a22a <+214>:\tmov    rax,QWORD PTR [rdi+0x17]\n   0x000000000008a22e <+218>:\tmov    rbx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a233 <+223>:\tmov    QWORD PTR [rsp],rbx\n   0x000000000008a237 <+227>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a23c <+232>:\tmov    rdi,rax\n   0x000000000008a23f <+235>:\tcall   0x8a788 <print>\n   0x000000000008a244 <+240>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a248 <+244>:\tmov    rbx,QWORD PTR [rcx+0xf]\n   0x000000000008a24c <+248>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a250 <+252>:\tcmp    rbx,rsi\n   0x000000000008a253 <+255>:\tjne    0x8a308 <main+436>\n   0x000000000008a259 <+261>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008a25d <+265>:\tadd    rdx,0x1\n   0x000000000008a261 <+269>:\tsar    rbx,1\n   0x000000000008a264 <+272>:\tmov    rax,rbx\n   0x000000000008a267 <+275>:\tmov    rdi,rcx\n   0x000000000008a26a <+278>:\tmov    rcx,rsi\n   0x000000000008a26d <+281>:\tjmp    0x8a207 <main+179>\n   0x000000000008a26f <+283>:\tmov    rcx,rdi\n   0x000000000008a272 <+286>:\tmov    rdi,rcx\n   0x000000000008a275 <+289>:\tcall   0x8a36c <heapSort>\n   0x000000000008a27a <+294>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a281 <+301>:\tcall   0x8a7c0 <printToConsole>\n   0x000000000008a286 <+306>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a28a <+310>:\tmov    rdx,QWORD PTR [rcx+0xf]\n   0x000000000008a28e <+314>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a292 <+318>:\tmov    rax,rdx\n   0x000000000008a295 <+321>:\tsar    rax,1\n   0x000000000008a298 <+324>:\txor    esi,esi\n   0x000000000008a29a <+326>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a29e <+330>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2a2 <+334>:\tjbe    0x8a35a <main+518>\n   0x000000000008a2a8 <+340>:\tcmp    rsi,rax\n   0x000000000008a2ab <+343>:\tjge    0x8a2ff <main+427>\n   0x000000000008a2b1 <+349>:\tmov    rbx,rsi\n   0x000000000008a2b4 <+352>:\tcmp    rbx,rax\n   0x000000000008a2b7 <+355>:\tjae    0x8a366 <main+530>\n   0x000000000008a2bd <+361>:\tmov    rax,QWORD PTR [rcx+0x17]\n   0x000000000008a2c1 <+365>:\tmov    rbx,QWORD PTR [rax+rsi*8+0x17]\n   0x000000000008a2c6 <+370>:\tmov    QWORD PTR [rsp],rbx\n   0x000000000008a2ca <+374>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a2cf <+379>:\tmov    rdi,rax\n   0x000000000008a2d2 <+382>:\tcall   0x8a788 <print>\n   0x000000000008a2d7 <+387>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a2db <+391>:\tmov    rdx,QWORD PTR [rcx+0xf]\n   0x000000000008a2df <+395>:\tmov    rbx,QWORD PTR [rbp-0x8]\n   0x000000000008a2e3 <+399>:\tcmp    rdx,rbx\n   0x000000000008a2e6 <+402>:\tjne    0x8a321 <main+461>\n   0x000000000008a2ec <+408>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a2f0 <+412>:\tadd    rsi,0x1\n   0x000000000008a2f4 <+416>:\tsar    rdx,1\n   0x000000000008a2f7 <+419>:\tmov    rax,rdx\n   0x000000000008a2fa <+422>:\tmov    rdx,rbx\n   0x000000000008a2fd <+425>:\tjmp    0x8a29a <main+326>\n   0x000000000008a2ff <+427>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a303 <+431>:\tmov    rsp,rbp\n   0x000000000008a306 <+434>:\tpop    rbp\n   0x000000000008a307 <+435>:\tret\n   0x000000000008a308 <+436>:\tcall   0x53570 <new ConcurrentModificationError>\n   0x000000000008a30d <+441>:\tmov    rcx,rax\n   0x000000000008a310 <+444>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a314 <+448>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008a318 <+452>:\tmov    rax,rcx\n   0x000000000008a31b <+455>:\tcall   0x83264 <stub _iso_stub_ThrowStub>\n   0x000000000008a320 <+460>:\tint3\n   0x000000000008a321 <+461>:\tmov    rax,rcx\n   0x000000000008a324 <+464>:\tcall   0x53570 <new ConcurrentModificationError>\n   0x000000000008a329 <+469>:\tmov    rcx,rax\n   0x000000000008a32c <+472>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a330 <+476>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008a334 <+480>:\tmov    rax,rcx\n   0x000000000008a337 <+483>:\tcall   0x83264 <stub _iso_stub_ThrowStub>\n   0x000000000008a33c <+488>:\tint3\n   0x000000000008a33d <+489>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a344 <+496>:\tjmp    0x8a166 <main+18>\n   0x000000000008a349 <+501>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a350 <+508>:\tjmp    0x8a215 <main+193>\n   0x000000000008a355 <+513>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a35a <+518>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a361 <+525>:\tjmp    0x8a2a8 <main+340>\n   0x000000000008a366 <+530>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sum-digits-of-an-integer.dart",
  "functions": [
    {
      "name": "sumDigits",
      "source": "num sumDigits(var number, var nBase) {\n  if (number < 0) number = -number; // convert negative numbers to positive\n  if (nBase < 2) nBase = 2;         // nBase can't be less than 2\n  num sum = 0;\n  while (number > 0) {\n    sum += number % nBase;\n    number ~/= nBase;\n  }\n  return sum;\n}",
      "assembly": "Dump of assembler code for function sumDigits:\n   0x000000000008a9dc <+0>:\tpush   rbp\n   0x000000000008a9dd <+1>:\tmov    rbp,rsp\n   0x000000000008a9e0 <+4>:\tsub    rsp,0x30\n   0x000000000008a9e4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a9e8 <+12>:\tjbe    0x8ab1a <sumDigits+318>\n   0x000000000008a9ee <+18>:\tcmp    rdi,0x0\n   0x000000000008a9f2 <+22>:\tjge    0x8aa06 <sumDigits+42>\n   0x000000000008a9f8 <+28>:\tmov    rax,rdi\n   0x000000000008a9fb <+31>:\tneg    rax\n   0x000000000008a9fe <+34>:\tmov    rcx,rax\n   0x000000000008aa01 <+37>:\tjmp    0x8aa09 <sumDigits+45>\n   0x000000000008aa06 <+42>:\tmov    rcx,rdi\n   0x000000000008aa09 <+45>:\tcmp    rsi,0x2\n   0x000000000008aa0d <+49>:\tjge    0x8aa1d <sumDigits+65>\n   0x000000000008aa13 <+55>:\tmov    edx,0x2\n   0x000000000008aa18 <+60>:\tjmp    0x8aa20 <sumDigits+68>\n   0x000000000008aa1d <+65>:\tmov    rdx,rsi\n   0x000000000008aa20 <+68>:\tmov    rax,rcx\n   0x000000000008aa23 <+71>:\tadd    rax,rax\n   0x000000000008aa26 <+74>:\tjno    0x8aa35 <sumDigits+89>\n   0x000000000008aa2c <+80>:\tcall   0x85568 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008aa31 <+85>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008aa35 <+89>:\tmov    rcx,rdx\n   0x000000000008aa38 <+92>:\tadd    rcx,rcx\n   0x000000000008aa3b <+95>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008aa3f <+99>:\tmov    rdx,rax\n   0x000000000008aa42 <+102>:\txor    eax,eax\n   0x000000000008aa44 <+104>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008aa48 <+108>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008aa4c <+112>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008aa50 <+116>:\tjbe    0x8ab26 <sumDigits+330>\n   0x000000000008aa56 <+122>:\tmov    QWORD PTR [rsp+0x8],rdx\n   0x000000000008aa5b <+127>:\tmov    QWORD PTR [rsp],0x0\n   0x000000000008aa63 <+135>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008aa68 <+140>:\tmov    rcx,QWORD PTR [r15+0x1827]\n   0x000000000008aa6f <+147>:\tmov    rbx,QWORD PTR [r15+0x182f]\n   0x000000000008aa76 <+154>:\tcall   rcx\n   0x000000000008aa78 <+156>:\ttest   al,0x10\n   0x000000000008aa7a <+158>:\tjne    0x8ab11 <sumDigits+309>\n   0x000000000008aa80 <+164>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008aa84 <+168>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008aa88 <+172>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008aa8d <+177>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008aa91 <+181>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008aa95 <+185>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008aa9a <+190>:\tmov    rcx,QWORD PTR [r15+0x1837]\n   0x000000000008aaa1 <+197>:\tmov    rbx,QWORD PTR [r15+0x183f]\n   0x000000000008aaa8 <+204>:\tcall   rcx\n   0x000000000008aaaa <+206>:\tmov    rcx,rax\n   0x000000000008aaad <+209>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008aab1 <+213>:\ttest   al,0x1\n   0x000000000008aab3 <+215>:\tmov    edx,0x3c\n   0x000000000008aab8 <+220>:\tje     0x8aac0 <sumDigits+228>\n   0x000000000008aaba <+222>:\tmov    edx,DWORD PTR [rax-0x1]\n   0x000000000008aabd <+225>:\tshr    edx,0xc\n   0x000000000008aac0 <+228>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008aac5 <+233>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008aac9 <+237>:\tmov    rcx,rdx\n   0x000000000008aacc <+240>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008aad0 <+244>:\tcall   QWORD PTR [rax+rcx*8-0x60]\n   0x000000000008aad4 <+248>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008aad8 <+252>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008aadc <+256>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008aae1 <+261>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008aae5 <+265>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008aae9 <+269>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008aaee <+274>:\tmov    rcx,QWORD PTR [r15+0x1847]\n   0x000000000008aaf5 <+281>:\tmov    rbx,QWORD PTR [r15+0x184f]\n   0x000000000008aafc <+288>:\tcall   rcx\n   0x000000000008aafe <+290>:\tmov    rcx,rax\n   0x000000000008ab01 <+293>:\tmov    rdx,rcx\n   0x000000000008ab04 <+296>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008ab08 <+300>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008ab0c <+304>:\tjmp    0x8aa44 <sumDigits+104>\n   0x000000000008ab11 <+309>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008ab15 <+313>:\tmov    rsp,rbp\n   0x000000000008ab18 <+316>:\tpop    rbp\n   0x000000000008ab19 <+317>:\tret\n   0x000000000008ab1a <+318>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab21 <+325>:\tjmp    0x8a9ee <sumDigits+18>\n   0x000000000008ab26 <+330>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab2d <+337>:\tjmp    0x8aa56 <sumDigits+122>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print('The sums of the digits are:\\n');\n  print('1    base 10 : ${sumDigits(1, 10)}');\n  print('1234 base 10 : ${sumDigits(1234, 10)}');\n  print('fe   base 16 : ${sumDigits(0xfe, 16)}');\n  print('f0e  base 16 : ${sumDigits(0xf0e, 16)}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a7cc <+0>:\tpush   rbp\n   0x000000000008a7cd <+1>:\tmov    rbp,rsp\n   0x000000000008a7d0 <+4>:\tsub    rsp,0x10\n   0x000000000008a7d4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a7d8 <+12>:\tjbe    0x8a997 <main+459>\n   0x000000000008a7de <+18>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a7e5 <+25>:\tcall   0x8ab34 <printToConsole>\n   0x000000000008a7ea <+30>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a7ee <+34>:\tmov    r10d,0x4\n   0x000000000008a7f4 <+40>:\tcall   0x852e4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a7f9 <+45>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a7fd <+49>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a804 <+56>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a808 <+60>:\tmov    edi,0x1\n   0x000000000008a80d <+65>:\tmov    esi,0xa\n   0x000000000008a812 <+70>:\tcall   0x8a9dc <sumDigits>\n   0x000000000008a817 <+75>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a81b <+79>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a81f <+83>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a823 <+87>:\ttest   al,0x1\n   0x000000000008a825 <+89>:\tje     0x8a83e <main+114>\n   0x000000000008a827 <+91>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a82b <+95>:\tshr    r11d,0x2\n   0x000000000008a82f <+99>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a833 <+103>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a837 <+107>:\tje     0x8a83e <main+114>\n   0x000000000008a839 <+109>:\tcall   0x838fc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a83e <+114>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a842 <+118>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a846 <+122>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a84b <+127>:\tmov    rdi,rax\n   0x000000000008a84e <+130>:\tcall   0x8a9a4 <print>\n   0x000000000008a853 <+135>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a857 <+139>:\tmov    r10d,0x4\n   0x000000000008a85d <+145>:\tcall   0x852e4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a862 <+150>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a866 <+154>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a86d <+161>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a871 <+165>:\tmov    edi,0x4d2\n   0x000000000008a876 <+170>:\tmov    esi,0xa\n   0x000000000008a87b <+175>:\tcall   0x8a9dc <sumDigits>\n   0x000000000008a880 <+180>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a884 <+184>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a888 <+188>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a88c <+192>:\ttest   al,0x1\n   0x000000000008a88e <+194>:\tje     0x8a8a7 <main+219>\n   0x000000000008a890 <+196>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a894 <+200>:\tshr    r11d,0x2\n   0x000000000008a898 <+204>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a89c <+208>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a8a0 <+212>:\tje     0x8a8a7 <main+219>\n   0x000000000008a8a2 <+214>:\tcall   0x838fc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a8a7 <+219>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a8ab <+223>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a8af <+227>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a8b4 <+232>:\tmov    rdi,rax\n   0x000000000008a8b7 <+235>:\tcall   0x8a9a4 <print>\n   0x000000000008a8bc <+240>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a8c0 <+244>:\tmov    r10d,0x4\n   0x000000000008a8c6 <+250>:\tcall   0x852e4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a8cb <+255>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a8cf <+259>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a8d6 <+266>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a8da <+270>:\tmov    edi,0xfe\n   0x000000000008a8df <+275>:\tmov    esi,0x10\n   0x000000000008a8e4 <+280>:\tcall   0x8a9dc <sumDigits>\n   0x000000000008a8e9 <+285>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a8ed <+289>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a8f1 <+293>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a8f5 <+297>:\ttest   al,0x1\n   0x000000000008a8f7 <+299>:\tje     0x8a910 <main+324>\n   0x000000000008a8f9 <+301>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a8fd <+305>:\tshr    r11d,0x2\n   0x000000000008a901 <+309>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a905 <+313>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a909 <+317>:\tje     0x8a910 <main+324>\n   0x000000000008a90b <+319>:\tcall   0x838fc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a910 <+324>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a914 <+328>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a918 <+332>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a91d <+337>:\tmov    rdi,rax\n   0x000000000008a920 <+340>:\tcall   0x8a9a4 <print>\n   0x000000000008a925 <+345>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a929 <+349>:\tmov    r10d,0x4\n   0x000000000008a92f <+355>:\tcall   0x852e4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a934 <+360>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a938 <+364>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a93f <+371>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a943 <+375>:\tmov    edi,0xf0e\n   0x000000000008a948 <+380>:\tmov    esi,0x10\n   0x000000000008a94d <+385>:\tcall   0x8a9dc <sumDigits>\n   0x000000000008a952 <+390>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a956 <+394>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a95a <+398>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a95e <+402>:\ttest   al,0x1\n   0x000000000008a960 <+404>:\tje     0x8a979 <main+429>\n   0x000000000008a962 <+406>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a966 <+410>:\tshr    r11d,0x2\n   0x000000000008a96a <+414>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a96e <+418>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a972 <+422>:\tje     0x8a979 <main+429>\n   0x000000000008a974 <+424>:\tcall   0x838fc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a979 <+429>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a97d <+433>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a981 <+437>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a986 <+442>:\tmov    rdi,rax\n   0x000000000008a989 <+445>:\tcall   0x8a9a4 <print>\n   0x000000000008a98e <+450>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a992 <+454>:\tmov    rsp,rbp\n   0x000000000008a995 <+457>:\tpop    rbp\n   0x000000000008a996 <+458>:\tret\n   0x000000000008a997 <+459>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a99e <+466>:\tjmp    0x8a7de <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "associative-array-creation.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n\tvar rosettaCode = { // Type is inferred to be Map<String, String>\n\t\t'task': 'Associative Array Creation'\n\t};\n\n\trosettaCode['language'] = 'Dart';\n\n\t// The update function can be used to update a key using a callback\n\trosettaCode.update( 'is fun',  // Key to update\n\t\t(value) => \"i don't know\", // New value to use if key is present\n\t\tifAbsent: () => 'yes!' // Value to use if key is absent\n\t);\n\t\n\tassert( rosettaCode.toString() == '{task: Associative Array Creation, language: Dart, is fun: yes!}');\n\t\n\t// If we type the Map with dynamic keys and values, it is like a JavaScript object\n\tMap<dynamic, dynamic> jsObject = {\n\t\t'key': 'value',\n\t\t1: 2,\n\t\t1.5: [ 'more', 'stuff' ],\n\t\t#doStuff: () => print('doing stuff!') // #doStuff is a symbol, only one instance of this exists in the program. Would be :doStuff in Ruby\n\t};\n\n\tprint( jsObject['key'] );\n\tprint( jsObject[1] );\n\t\n\tfor ( var value in jsObject[1.5] )\n\t\tprint('item: $value');\n\n\tjsObject[ #doStuff ](); // Calling the function\n\t\n\tprint('\\nKey types:');\n\tjsObject.keys.forEach( (key) => print( key.runtimeType ) );\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x28\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a4cc <main+888>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0x4\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a180 <+44>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a187 <+51>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a18b <+55>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a192 <+62>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a197 <+67>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a19b <+71>:\tcall   0x65e6c <new Map._fromLiteral>\n   0x000000000008a1a0 <+76>:\tmov    rdi,rax\n   0x000000000008a1a3 <+79>:\tmov    rsi,QWORD PTR [r15+0x180f]\n   0x000000000008a1aa <+86>:\tmov    rdx,QWORD PTR [r15+0x1817]\n   0x000000000008a1b1 <+93>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a1b5 <+97>:\tcall   0x575f4 <_LinkedHashMapMixin.[]=>\n   0x000000000008a1ba <+102>:\tmov    rbx,QWORD PTR [r15+0x181f]\n   0x000000000008a1c1 <+109>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a1c5 <+113>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a1ca <+118>:\tmov    rbx,QWORD PTR [r15+0x1827]\n   0x000000000008a1d1 <+125>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a1d5 <+129>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a1d9 <+133>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a1de <+138>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a1e2 <+142>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a1e6 <+146>:\tmov    rbx,rax\n   0x000000000008a1e9 <+149>:\tmov    rsi,QWORD PTR [r15+0x182f]\n   0x000000000008a1f0 <+156>:\tcall   0x8a654 <MapBase.update>\n   0x000000000008a1f5 <+161>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1f9 <+165>:\tmov    r10d,0x10\n   0x000000000008a1ff <+171>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a204 <+176>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a208 <+180>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a20f <+187>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a213 <+191>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a21a <+198>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a21e <+202>:\tmov    QWORD PTR [rax+0x27],0x2\n   0x000000000008a226 <+210>:\tmov    QWORD PTR [rax+0x2f],0x4\n   0x000000000008a22e <+218>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x000000000008a235 <+225>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000008a239 <+229>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a23d <+233>:\tmov    r10d,0x4\n   0x000000000008a243 <+239>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a248 <+244>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a24c <+248>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008a253 <+255>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a257 <+259>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x000000000008a25e <+266>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a262 <+270>:\tmov    rdx,QWORD PTR [r15+0xaf]\n   0x000000000008a269 <+277>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a26e <+282>:\tmov    rcx,rax\n   0x000000000008a271 <+285>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a275 <+289>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a279 <+293>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008a281 <+301>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a285 <+305>:\tmov    QWORD PTR [rax+0x3f],rcx\n   0x000000000008a289 <+309>:\tmov    r11,QWORD PTR [r15+0x185f]\n   0x000000000008a290 <+316>:\tmov    QWORD PTR [rax+0x47],r11\n   0x000000000008a294 <+320>:\tmov    rbx,QWORD PTR [r15+0x1867]\n   0x000000000008a29b <+327>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a29f <+331>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a2a4 <+336>:\tmov    rcx,rax\n   0x000000000008a2a7 <+339>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a2ab <+343>:\tmov    QWORD PTR [rax+0x4f],rcx\n   0x000000000008a2af <+347>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a2b3 <+351>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a2b8 <+356>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a2bc <+360>:\tcall   0x65e6c <new Map._fromLiteral>\n   0x000000000008a2c1 <+365>:\tmov    rdi,rax\n   0x000000000008a2c4 <+368>:\tmov    rsi,QWORD PTR [r15+0x1837]\n   0x000000000008a2cb <+375>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a2cf <+379>:\tcall   0x6d330 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008a2d4 <+384>:\tmov    rcx,rax\n   0x000000000008a2d7 <+387>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a2db <+391>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a2df <+395>:\tcmp    rdx,rcx\n   0x000000000008a2e2 <+398>:\tjne    0x8a2f1 <main+413>\n   0x000000000008a2e8 <+404>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a2ec <+408>:\tjmp    0x8a2f4 <main+416>\n   0x000000000008a2f1 <+413>:\tmov    rdi,rcx\n   0x000000000008a2f4 <+416>:\tcall   0x8a61c <print>\n   0x000000000008a2f9 <+421>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a2fd <+425>:\tmov    esi,0x2\n   0x000000000008a302 <+430>:\tcall   0x6d330 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008a307 <+435>:\tmov    rcx,rax\n   0x000000000008a30a <+438>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a30e <+442>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a312 <+446>:\tcmp    rdx,rcx\n   0x000000000008a315 <+449>:\tjne    0x8a324 <main+464>\n   0x000000000008a31b <+455>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a31f <+459>:\tjmp    0x8a327 <main+467>\n   0x000000000008a324 <+464>:\tmov    rdi,rcx\n   0x000000000008a327 <+467>:\tcall   0x8a61c <print>\n   0x000000000008a32c <+472>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a330 <+476>:\tmov    rsi,QWORD PTR [r15+0x1847]\n   0x000000000008a337 <+483>:\tcall   0x6d330 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008a33c <+488>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a340 <+492>:\tmov    rcx,QWORD PTR [rdi+0x17]\n   0x000000000008a344 <+496>:\tcmp    rcx,rax\n   0x000000000008a347 <+499>:\tjne    0x8a356 <main+514>\n   0x000000000008a34d <+505>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a351 <+509>:\tjmp    0x8a359 <main+517>\n   0x000000000008a356 <+514>:\tmov    rbx,rax\n   0x000000000008a359 <+517>:\tmov    rax,rbx\n   0x000000000008a35c <+520>:\tmov    QWORD PTR [rbp-0x10],rbx\n   0x000000000008a360 <+524>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a364 <+528>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a368 <+532>:\ttest   al,0x1\n   0x000000000008a36a <+534>:\tmov    esi,0x3c\n   0x000000000008a36f <+539>:\tje     0x8a377 <main+547>\n   0x000000000008a371 <+541>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a374 <+544>:\tshr    esi,0xc\n   0x000000000008a377 <+547>:\tsub    rsi,0x58\n   0x000000000008a37b <+551>:\tcmp    rsi,0x4\n   0x000000000008a37f <+555>:\tjbe    0x8a3c1 <main+621>\n   0x000000000008a385 <+561>:\tsub    rsi,0x18\n   0x000000000008a389 <+565>:\tcmp    rsi,0x37\n   0x000000000008a38d <+569>:\tjbe    0x8a3c1 <main+621>\n   0x000000000008a393 <+575>:\tsub    rsi,0x19e\n   0x000000000008a39a <+582>:\tcmp    rsi,0x12\n   0x000000000008a39e <+586>:\tjbe    0x8a3c1 <main+621>\n   0x000000000008a3a4 <+592>:\tcmp    rsi,0x1a\n   0x000000000008a3a8 <+596>:\tje     0x8a3c1 <main+621>\n   0x000000000008a3ae <+602>:\tmov    rbx,QWORD PTR [r15+0x186f]\n   0x000000000008a3b5 <+609>:\tmov    r9,QWORD PTR [r15+0x1877]\n   0x000000000008a3bc <+616>:\tcall   0x82fa0 <stub _iso_stub_DefaultTypeTestStub>\n   0x000000000008a3c1 <+621>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a3c5 <+625>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x000000000008a3c8 <+628>:\tshr    ecx,0xc\n   0x000000000008a3cb <+631>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3cf <+635>:\tcall   QWORD PTR [rax+rcx*8+0x77a8]\n   0x000000000008a3d6 <+642>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a3da <+646>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3de <+650>:\tjbe    0x8a4d8 <main+900>\n   0x000000000008a3e4 <+656>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a3e7 <+659>:\tshr    ecx,0xc\n   0x000000000008a3ea <+662>:\tmov    rdi,rax\n   0x000000000008a3ed <+665>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3f1 <+669>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a3f4 <+672>:\ttest   al,0x10\n   0x000000000008a3f6 <+674>:\tjne    0x8a44e <main+762>\n   0x000000000008a3fc <+680>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a400 <+684>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a403 <+687>:\tshr    ecx,0xc\n   0x000000000008a406 <+690>:\tmov    rdi,rax\n   0x000000000008a409 <+693>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a40d <+697>:\tcall   QWORD PTR [rax+rcx*8-0x80]\n   0x000000000008a411 <+701>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a415 <+705>:\tmov    r10d,0x4\n   0x000000000008a41b <+711>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a41f <+715>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a424 <+720>:\tmov    r11,QWORD PTR [r15+0x1887]\n   0x000000000008a42b <+727>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a42f <+731>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a433 <+735>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a437 <+739>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a43b <+743>:\tcall   0x5864c <_StringBase._interpolate>\n   0x000000000008a440 <+748>:\tmov    rdi,rax\n   0x000000000008a443 <+751>:\tcall   0x8a5b8 <printToConsole>\n   0x000000000008a448 <+756>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a44c <+760>:\tjmp    0x8a3da <main+646>\n   0x000000000008a44e <+762>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a452 <+766>:\tmov    rdi,rax\n   0x000000000008a455 <+769>:\tmov    rsi,QWORD PTR [r15+0x185f]\n   0x000000000008a45c <+776>:\tcall   0x6d330 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008a461 <+781>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a465 <+785>:\tmov    rcx,QWORD PTR [rdi+0x17]\n   0x000000000008a469 <+789>:\tcmp    rcx,rax\n   0x000000000008a46c <+792>:\tjne    0x8a476 <main+802>\n   0x000000000008a472 <+798>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a476 <+802>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a47a <+806>:\tmov    rdx,QWORD PTR [rsp]\n   0x000000000008a47e <+810>:\tmov    rcx,QWORD PTR [r15+0x188f]\n   0x000000000008a485 <+817>:\tmov    rbx,QWORD PTR [r15+0x1897]\n   0x000000000008a48c <+824>:\tcall   rcx\n   0x000000000008a48e <+826>:\tmov    rdi,QWORD PTR [r15+0x189f]\n   0x000000000008a495 <+833>:\tcall   0x8a5b8 <printToConsole>\n   0x000000000008a49a <+838>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a49e <+842>:\tcall   0x827c8 <_LinkedHashMapMixin.keys>\n   0x000000000008a4a3 <+847>:\tmov    rbx,QWORD PTR [r15+0x18a7]\n   0x000000000008a4aa <+854>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a4ae <+858>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a4b2 <+862>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a4b7 <+867>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4bb <+871>:\tmov    rsi,rax\n   0x000000000008a4be <+874>:\tcall   0x8a4e4 <Iterable.forEach>\n   0x000000000008a4c3 <+879>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a4c7 <+883>:\tmov    rsp,rbp\n   0x000000000008a4ca <+886>:\tpop    rbp\n   0x000000000008a4cb <+887>:\tret\n   0x000000000008a4cc <+888>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4d3 <+895>:\tjmp    0x8a166 <main+18>\n   0x000000000008a4d8 <+900>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4df <+907>:\tjmp    0x8a3e4 <main+656>\nEnd of assembler dump.\n"
    }
  ]
}
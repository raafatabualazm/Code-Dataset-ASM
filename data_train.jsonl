{
  "file": "100-doors-2.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  for(int i=1,s=3;i<=100;i+=s,s+=2)\n    print(\"door $i is open\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x18\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a202 <main+174>\n   0x000000000008a166 <+18>:\tmov    ecx,0x1\n   0x000000000008a16b <+23>:\tmov    eax,0x3\n   0x000000000008a170 <+28>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a174 <+32>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a178 <+36>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a17c <+40>:\tjbe    0x8a20e <main+186>\n   0x000000000008a182 <+46>:\tcmp    rcx,0x64\n   0x000000000008a186 <+50>:\tjg     0x8a1f9 <main+165>\n   0x000000000008a18c <+56>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a190 <+60>:\tmov    r10d,0x6\n   0x000000000008a196 <+66>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a19b <+71>:\tmov    rcx,rax\n   0x000000000008a19e <+74>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a1a5 <+81>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008a1a9 <+85>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a1ad <+89>:\tmov    rax,rdx\n   0x000000000008a1b0 <+92>:\tadd    rax,rax\n   0x000000000008a1b3 <+95>:\tjno    0x8a1c2 <main+110>\n   0x000000000008a1b9 <+101>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1be <+106>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a1c2 <+110>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008a1c6 <+114>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a1cd <+121>:\tmov    QWORD PTR [rcx+0x27],r11\n   0x000000000008a1d1 <+125>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a1d5 <+129>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1da <+134>:\tmov    rdi,rax\n   0x000000000008a1dd <+137>:\tcall   0x8a21c <printToConsole>\n   0x000000000008a1e2 <+142>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a1e6 <+146>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a1ea <+150>:\tadd    rcx,rdx\n   0x000000000008a1ed <+153>:\tadd    rdx,0x2\n   0x000000000008a1f1 <+157>:\tmov    rax,rdx\n   0x000000000008a1f4 <+160>:\tjmp    0x8a170 <main+28>\n   0x000000000008a1f9 <+165>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1fd <+169>:\tmov    rsp,rbp\n   0x000000000008a200 <+172>:\tpop    rbp\n   0x000000000008a201 <+173>:\tret\n   0x000000000008a202 <+174>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a209 <+181>:\tjmp    0x8a166 <main+18>\n   0x000000000008a20e <+186>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a215 <+193>:\tjmp    0x8a182 <main+46>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "100-prisoners.dart",
  "functions": [
    {
      "name": "playRandom",
      "source": "int playRandom(int n) {\n  var rnd = Random();\n  int pardoned = 0;\n  List<int> inDrawer = List<int>.generate(100, (i) => i);\n  List<int> sampler = List<int>.generate(100, (i) => i);\n  for (int round = 0; round < n; round++) {\n    inDrawer.shuffle();\n    bool found = false;\n    for (int prisoner = 0; prisoner < 100; prisoner++) {\n      found = false;\n      sampler.shuffle(rnd);\n      for (int i = 0; i < 50; i++) {\n        int reveal = sampler[i];\n        int card = inDrawer[reveal];\n        if (card == prisoner) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        break;\n      }\n    }\n    if (found) {\n      pardoned++;\n    }\n  }\n  return (pardoned / n * 100).round();\n}",
      "assembly": "Dump of assembler code for function playRandom:\n   0x000000000008ab88 <+0>:\tpush   rbp\n   0x000000000008ab89 <+1>:\tmov    rbp,rsp\n   0x000000000008ab8c <+4>:\tsub    rsp,0x38\n   0x000000000008ab90 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ab94 <+12>:\tjbe    0x8aded <playRandom+613>\n   0x000000000008ab9a <+18>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008ab9e <+22>:\tcall   0x8a84c <new Random>\n   0x000000000008aba3 <+27>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008abaa <+34>:\tmov    esi,0x64\n   0x000000000008abaf <+39>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008abb3 <+43>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008abb8 <+48>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008abbc <+52>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008abc0 <+56>:\tsar    rcx,1\n   0x000000000008abc3 <+59>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008abc7 <+63>:\txor    ebx,ebx\n   0x000000000008abc9 <+65>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008abcd <+69>:\tjbe    0x8adf9 <playRandom+625>\n   0x000000000008abd3 <+75>:\tcmp    rbx,rcx\n   0x000000000008abd6 <+78>:\tjge    0x8abed <playRandom+101>\n   0x000000000008abdc <+84>:\tmov    rsi,rbx\n   0x000000000008abdf <+87>:\tadd    rsi,rsi\n   0x000000000008abe2 <+90>:\tmov    QWORD PTR [rdx+rbx*8+0x17],rsi\n   0x000000000008abe7 <+95>:\tadd    rbx,0x1\n   0x000000000008abeb <+99>:\tjmp    0x8abc9 <playRandom+65>\n   0x000000000008abed <+101>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008abf4 <+108>:\tmov    esi,0x64\n   0x000000000008abf9 <+113>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008abfe <+118>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008ac02 <+122>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008ac06 <+126>:\tsar    rcx,1\n   0x000000000008ac09 <+129>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008ac0d <+133>:\txor    ebx,ebx\n   0x000000000008ac0f <+135>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ac13 <+139>:\tjbe    0x8ae05 <playRandom+637>\n   0x000000000008ac19 <+145>:\tcmp    rbx,rcx\n   0x000000000008ac1c <+148>:\tjge    0x8ac33 <playRandom+171>\n   0x000000000008ac22 <+154>:\tmov    rsi,rbx\n   0x000000000008ac25 <+157>:\tadd    rsi,rsi\n   0x000000000008ac28 <+160>:\tmov    QWORD PTR [rdx+rbx*8+0x17],rsi\n   0x000000000008ac2d <+165>:\tadd    rbx,0x1\n   0x000000000008ac31 <+169>:\tjmp    0x8ac0f <playRandom+135>\n   0x000000000008ac33 <+171>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008ac37 <+175>:\txor    ebx,ebx\n   0x000000000008ac39 <+177>:\txor    edx,edx\n   0x000000000008ac3b <+179>:\tmov    QWORD PTR [rbp-0x18],rbx\n   0x000000000008ac3f <+183>:\tmov    QWORD PTR [rbp-0x20],rdx\n   0x000000000008ac43 <+187>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ac47 <+191>:\tjbe    0x8ae11 <playRandom+649>\n   0x000000000008ac4d <+197>:\tcmp    rdx,0x186a0\n   0x000000000008ac54 <+204>:\tjge    0x8ad97 <playRandom+527>\n   0x000000000008ac5a <+210>:\tmov    rdi,rcx\n   0x000000000008ac5d <+213>:\tmov    r10,QWORD PTR [r15+0x7f]\n   0x000000000008ac61 <+217>:\tcall   0x8a500 <ListBase.shuffle>\n   0x000000000008ac66 <+222>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008ac6a <+226>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008ac6e <+230>:\tmov    rbx,QWORD PTR [r14+0x80]\n   0x000000000008ac75 <+237>:\txor    edx,edx\n   0x000000000008ac77 <+239>:\tmov    QWORD PTR [rbp-0x30],rdx\n   0x000000000008ac7b <+243>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ac7f <+247>:\tjbe    0x8ae1d <playRandom+661>\n   0x000000000008ac85 <+253>:\tcmp    rdx,0x64\n   0x000000000008ac89 <+257>:\tjge    0x8ad5e <playRandom+470>\n   0x000000000008ac8f <+263>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008ac93 <+267>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008ac97 <+271>:\tmov    rdi,rax\n   0x000000000008ac9a <+274>:\tmov    r10,QWORD PTR [r15+0x377]\n   0x000000000008aca1 <+281>:\tcall   0x8a500 <ListBase.shuffle>\n   0x000000000008aca6 <+286>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008acaa <+290>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008acae <+294>:\tmov    rdx,rax\n   0x000000000008acb1 <+297>:\tsar    rdx,1\n   0x000000000008acb4 <+300>:\tmov    rsi,QWORD PTR [rcx+0x17]\n   0x000000000008acb8 <+304>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008acbc <+308>:\tmov    rax,QWORD PTR [rdi+0xf]\n   0x000000000008acc0 <+312>:\tmov    r8,rax\n   0x000000000008acc3 <+315>:\tsar    r8,1\n   0x000000000008acc6 <+318>:\tmov    r9,QWORD PTR [rdi+0x17]\n   0x000000000008acca <+322>:\tmov    r10,QWORD PTR [rbp-0x30]\n   0x000000000008acce <+326>:\txor    r12d,r12d\n   0x000000000008acd1 <+329>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008acd5 <+333>:\tjbe    0x8ae29 <playRandom+673>\n   0x000000000008acdb <+339>:\tcmp    r12,0x32\n   0x000000000008acdf <+343>:\tjge    0x8ad3c <playRandom+436>\n   0x000000000008ace5 <+349>:\tmov    rax,rdx\n   0x000000000008ace8 <+352>:\tmov    rbx,r12\n   0x000000000008aceb <+355>:\tcmp    rbx,rax\n   0x000000000008acee <+358>:\tjae    0x8ae35 <playRandom+685>\n   0x000000000008acf4 <+364>:\tmov    rax,QWORD PTR [rsi+r12*8+0x17]\n   0x000000000008acf9 <+369>:\tmov    r13,rax\n   0x000000000008acfc <+372>:\tsar    r13,1\n   0x000000000008acff <+375>:\tjae    0x8ad06 <playRandom+382>\n   0x000000000008ad01 <+377>:\tmov    r13,QWORD PTR [r13+r13*1+0x8]\n   0x000000000008ad06 <+382>:\tmov    rax,r8\n   0x000000000008ad09 <+385>:\tmov    rbx,r13\n   0x000000000008ad0c <+388>:\tcmp    rbx,rax\n   0x000000000008ad0f <+391>:\tjae    0x8ae3a <playRandom+690>\n   0x000000000008ad15 <+397>:\tmov    rax,QWORD PTR [r9+r13*8+0x17]\n   0x000000000008ad1a <+402>:\tsar    rax,1\n   0x000000000008ad1d <+405>:\tjae    0x8ad24 <playRandom+412>\n   0x000000000008ad1f <+407>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008ad24 <+412>:\tcmp    rax,r10\n   0x000000000008ad27 <+415>:\tje     0x8ad33 <playRandom+427>\n   0x000000000008ad2d <+421>:\tadd    r12,0x1\n   0x000000000008ad31 <+425>:\tjmp    0x8acd1 <playRandom+329>\n   0x000000000008ad33 <+427>:\tmov    rbx,QWORD PTR [r14+0x78]\n   0x000000000008ad37 <+431>:\tjmp    0x8ad43 <playRandom+443>\n   0x000000000008ad3c <+436>:\tmov    rbx,QWORD PTR [r14+0x80]\n   0x000000000008ad43 <+443>:\ttest   bl,0x10\n   0x000000000008ad46 <+446>:\tjne    0x8ad7d <playRandom+501>\n   0x000000000008ad4c <+452>:\tadd    r10,0x1\n   0x000000000008ad50 <+456>:\tmov    rdx,r10\n   0x000000000008ad53 <+459>:\tmov    rax,rcx\n   0x000000000008ad56 <+462>:\tmov    rcx,rdi\n   0x000000000008ad59 <+465>:\tjmp    0x8ac77 <playRandom+239>\n   0x000000000008ad5e <+470>:\tmov    rdi,rcx\n   0x000000000008ad61 <+473>:\tmov    rcx,rax\n   0x000000000008ad64 <+476>:\ttest   bl,0x10\n   0x000000000008ad67 <+479>:\tjne    0x8ad7d <playRandom+501>\n   0x000000000008ad6d <+485>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008ad71 <+489>:\tadd    rax,0x1\n   0x000000000008ad75 <+493>:\tmov    rbx,rax\n   0x000000000008ad78 <+496>:\tjmp    0x8ad81 <playRandom+505>\n   0x000000000008ad7d <+501>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008ad81 <+505>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008ad85 <+509>:\tadd    rax,0x1\n   0x000000000008ad89 <+513>:\tmov    rdx,rax\n   0x000000000008ad8c <+516>:\tmov    rax,rcx\n   0x000000000008ad8f <+519>:\tmov    rcx,rdi\n   0x000000000008ad92 <+522>:\tjmp    0x8ac3b <playRandom+179>\n   0x000000000008ad97 <+527>:\tmov    rax,rbx\n   0x000000000008ad9a <+530>:\tmovsd  xmm1,QWORD PTR [r15+0x1817]\n   0x000000000008ada3 <+539>:\tmovsd  xmm0,QWORD PTR [r15+0x181f]\n   0x000000000008adac <+548>:\txorps  xmm2,xmm2\n   0x000000000008adaf <+551>:\tcvtsi2sd xmm2,rax\n   0x000000000008adb4 <+556>:\tdivsd  xmm2,xmm1\n   0x000000000008adb8 <+560>:\tmulsd  xmm2,xmm0\n   0x000000000008adbc <+564>:\tmov    rdi,QWORD PTR [r14+0x48]\n   0x000000000008adc0 <+568>:\tadd    rdi,0x10\n   0x000000000008adc4 <+572>:\tcmp    rdi,QWORD PTR [r14+0x50]\n   0x000000000008adc8 <+576>:\tjae    0x8ae3f <playRandom+695>\n   0x000000000008adce <+582>:\tmov    QWORD PTR [r14+0x48],rdi\n   0x000000000008add2 <+586>:\tsub    rdi,0xf\n   0x000000000008add6 <+590>:\tmov    QWORD PTR [rdi-0x1],0x3e15c\n   0x000000000008adde <+598>:\tmovsd  QWORD PTR [rdi+0x7],xmm2\n   0x000000000008ade3 <+603>:\tcall   0x8ae5c <double.round>\n   0x000000000008ade8 <+608>:\tmov    rsp,rbp\n   0x000000000008adeb <+611>:\tpop    rbp\n   0x000000000008adec <+612>:\tret\n   0x000000000008aded <+613>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008adf4 <+620>:\tjmp    0x8ab9a <playRandom+18>\n   0x000000000008adf9 <+625>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ae00 <+632>:\tjmp    0x8abd3 <playRandom+75>\n   0x000000000008ae05 <+637>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ae0c <+644>:\tjmp    0x8ac19 <playRandom+145>\n   0x000000000008ae11 <+649>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ae18 <+656>:\tjmp    0x8ac4d <playRandom+197>\n   0x000000000008ae1d <+661>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ae24 <+668>:\tjmp    0x8ac85 <playRandom+253>\n   0x000000000008ae29 <+673>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ae30 <+680>:\tjmp    0x8acdb <playRandom+339>\n   0x000000000008ae35 <+685>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008ae3a <+690>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008ae3f <+695>:\tsub    rsp,0x10\n   0x000000000008ae43 <+699>:\tmovups XMMWORD PTR [rsp],xmm2\n   0x000000000008ae47 <+703>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008ae4c <+708>:\tmov    rdi,rax\n   0x000000000008ae4f <+711>:\tmovups xmm2,XMMWORD PTR [rsp]\n   0x000000000008ae53 <+715>:\tadd    rsp,0x10\n   0x000000000008ae57 <+719>:\tjmp    0x8adde <playRandom+598>\nEnd of assembler dump.\n"
    },
    {
      "name": "playOptimal",
      "source": "int playOptimal(int n) {\n  var rnd = Random();\n  int pardoned = 0;\n  bool found = false;\n  List<int> inDrawer = List<int>.generate(100, (i) => i);\n  for (int round = 0; round < n; round++) {\n    inDrawer.shuffle(rnd);\n    for (int prisoner = 0; prisoner < 100; prisoner++) {\n      int reveal = prisoner;\n      found = false;\n      for (int go = 0; go < 50; go++) {\n        int card = inDrawer[reveal];\n        if (card == prisoner) {\n          found = true;\n          break;\n        }\n        reveal = card;\n      }\n      if (!found) {\n        break;\n      }\n    }\n    if (found) {\n      pardoned++;\n    }\n  }\n  return (pardoned / n * 100).round();\n}",
      "assembly": "Dump of assembler code for function playOptimal:\n   0x000000000008a2a8 <+0>:\tpush   rbp\n   0x000000000008a2a9 <+1>:\tmov    rbp,rsp\n   0x000000000008a2ac <+4>:\tsub    rsp,0x30\n   0x000000000008a2b0 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2b4 <+12>:\tjbe    0x8a49a <playOptimal+498>\n   0x000000000008a2ba <+18>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a2be <+22>:\tcall   0x8a84c <new Random>\n   0x000000000008a2c3 <+27>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008a2ca <+34>:\tmov    esi,0x64\n   0x000000000008a2cf <+39>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a2d3 <+43>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a2d8 <+48>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a2dc <+52>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a2e0 <+56>:\tsar    rcx,1\n   0x000000000008a2e3 <+59>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a2e7 <+63>:\txor    ebx,ebx\n   0x000000000008a2e9 <+65>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2ed <+69>:\tjbe    0x8a4a6 <playOptimal+510>\n   0x000000000008a2f3 <+75>:\tcmp    rbx,rcx\n   0x000000000008a2f6 <+78>:\tjge    0x8a30d <playOptimal+101>\n   0x000000000008a2fc <+84>:\tmov    rsi,rbx\n   0x000000000008a2ff <+87>:\tadd    rsi,rsi\n   0x000000000008a302 <+90>:\tmov    QWORD PTR [rdx+rbx*8+0x17],rsi\n   0x000000000008a307 <+95>:\tadd    rbx,0x1\n   0x000000000008a30b <+99>:\tjmp    0x8a2e9 <playOptimal+65>\n   0x000000000008a30d <+101>:\txor    ebx,ebx\n   0x000000000008a30f <+103>:\tmov    rdx,QWORD PTR [r14+0x80]\n   0x000000000008a316 <+110>:\txor    ecx,ecx\n   0x000000000008a318 <+112>:\tmov    QWORD PTR [rbp-0x10],rbx\n   0x000000000008a31c <+116>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008a320 <+120>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008a324 <+124>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a328 <+128>:\tjbe    0x8a4b2 <playOptimal+522>\n   0x000000000008a32e <+134>:\tcmp    rcx,0x186a0\n   0x000000000008a335 <+141>:\tjge    0x8a421 <playOptimal+377>\n   0x000000000008a33b <+147>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a33f <+151>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a343 <+155>:\tmov    rdi,rax\n   0x000000000008a346 <+158>:\tmov    r10,QWORD PTR [r15+0x377]\n   0x000000000008a34d <+165>:\tcall   0x8a500 <ListBase.shuffle>\n   0x000000000008a352 <+170>:\tmov    rsi,QWORD PTR [rbp-0x28]\n   0x000000000008a356 <+174>:\tmov    rax,QWORD PTR [rsi+0xf]\n   0x000000000008a35a <+178>:\tmov    rcx,rax\n   0x000000000008a35d <+181>:\tsar    rcx,1\n   0x000000000008a360 <+184>:\tmov    rdx,QWORD PTR [rsi+0x17]\n   0x000000000008a364 <+188>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a368 <+192>:\txor    edi,edi\n   0x000000000008a36a <+194>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a36e <+198>:\tjbe    0x8a4be <playOptimal+534>\n   0x000000000008a374 <+204>:\tcmp    rdi,0x64\n   0x000000000008a378 <+208>:\tjge    0x8a3ee <playOptimal+326>\n   0x000000000008a37e <+214>:\tmov    r9,rdi\n   0x000000000008a381 <+217>:\txor    r8d,r8d\n   0x000000000008a384 <+220>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a388 <+224>:\tjbe    0x8a4ca <playOptimal+546>\n   0x000000000008a38e <+230>:\tcmp    r8,0x32\n   0x000000000008a392 <+234>:\tjge    0x8a3d1 <playOptimal+297>\n   0x000000000008a398 <+240>:\tmov    rax,rcx\n   0x000000000008a39b <+243>:\tmov    rbx,r9\n   0x000000000008a39e <+246>:\tcmp    rbx,rax\n   0x000000000008a3a1 <+249>:\tjae    0x8a4d6 <playOptimal+558>\n   0x000000000008a3a7 <+255>:\tmov    rax,QWORD PTR [rdx+r9*8+0x17]\n   0x000000000008a3ac <+260>:\tsar    rax,1\n   0x000000000008a3af <+263>:\tjae    0x8a3b6 <playOptimal+270>\n   0x000000000008a3b1 <+265>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008a3b6 <+270>:\tcmp    rax,rdi\n   0x000000000008a3b9 <+273>:\tje     0x8a3c8 <playOptimal+288>\n   0x000000000008a3bf <+279>:\tadd    r8,0x1\n   0x000000000008a3c3 <+283>:\tmov    r9,rax\n   0x000000000008a3c6 <+286>:\tjmp    0x8a384 <playOptimal+220>\n   0x000000000008a3c8 <+288>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008a3cc <+292>:\tjmp    0x8a3d8 <playOptimal+304>\n   0x000000000008a3d1 <+297>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008a3d8 <+304>:\ttest   al,0x10\n   0x000000000008a3da <+306>:\tjne    0x8a3e6 <playOptimal+318>\n   0x000000000008a3e0 <+312>:\tadd    rdi,0x1\n   0x000000000008a3e4 <+316>:\tjmp    0x8a36a <playOptimal+194>\n   0x000000000008a3e6 <+318>:\tmov    rdx,rax\n   0x000000000008a3e9 <+321>:\tjmp    0x8a3f1 <playOptimal+329>\n   0x000000000008a3ee <+326>:\tmov    rdx,rax\n   0x000000000008a3f1 <+329>:\ttest   dl,0x10\n   0x000000000008a3f4 <+332>:\tjne    0x8a40a <playOptimal+354>\n   0x000000000008a3fa <+338>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a3fe <+342>:\tadd    rax,0x1\n   0x000000000008a402 <+346>:\tmov    rbx,rax\n   0x000000000008a405 <+349>:\tjmp    0x8a40e <playOptimal+358>\n   0x000000000008a40a <+354>:\tmov    rbx,QWORD PTR [rbp-0x10]\n   0x000000000008a40e <+358>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a412 <+362>:\tadd    rax,0x1\n   0x000000000008a416 <+366>:\tmov    rcx,rax\n   0x000000000008a419 <+369>:\tmov    rax,rsi\n   0x000000000008a41c <+372>:\tjmp    0x8a318 <playOptimal+112>\n   0x000000000008a421 <+377>:\tmov    rax,rbx\n   0x000000000008a424 <+380>:\tmovsd  xmm1,QWORD PTR [r15+0x1817]\n   0x000000000008a42d <+389>:\tmovsd  xmm0,QWORD PTR [r15+0x181f]\n   0x000000000008a436 <+398>:\txorps  xmm2,xmm2\n   0x000000000008a439 <+401>:\tcvtsi2sd xmm2,rax\n   0x000000000008a43e <+406>:\tdivsd  xmm2,xmm1\n   0x000000000008a442 <+410>:\tmulsd  xmm2,xmm0\n   0x000000000008a446 <+414>:\tmovaps xmm0,xmm2\n   0x000000000008a449 <+417>:\tpush   rbp\n   0x000000000008a44a <+418>:\tmov    rbp,rsp\n   0x000000000008a44d <+421>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008a451 <+425>:\tmov    rax,QWORD PTR [r14+0x588]\n   0x000000000008a458 <+432>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008a45f <+439>:\tcall   rax\n   0x000000000008a461 <+441>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008a46c <+452>:\tlea    rsp,[rbp+0x0]\n   0x000000000008a470 <+456>:\tmov    rsp,rbp\n   0x000000000008a473 <+459>:\tpop    rbp\n   0x000000000008a474 <+460>:\tcvttsd2si rcx,xmm0\n   0x000000000008a479 <+465>:\tmov    rdx,rcx\n   0x000000000008a47c <+468>:\tshl    rdx,1\n   0x000000000008a47f <+471>:\tjo     0x8a4db <playOptimal+563>\n   0x000000000008a485 <+477>:\tadd    rcx,rcx\n   0x000000000008a488 <+480>:\tsar    rcx,1\n   0x000000000008a48b <+483>:\tjae    0x8a492 <playOptimal+490>\n   0x000000000008a48d <+485>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a492 <+490>:\tmov    rax,rcx\n   0x000000000008a495 <+493>:\tmov    rsp,rbp\n   0x000000000008a498 <+496>:\tpop    rbp\n   0x000000000008a499 <+497>:\tret\n   0x000000000008a49a <+498>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4a1 <+505>:\tjmp    0x8a2ba <playOptimal+18>\n   0x000000000008a4a6 <+510>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4ad <+517>:\tjmp    0x8a2f3 <playOptimal+75>\n   0x000000000008a4b2 <+522>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4b9 <+529>:\tjmp    0x8a32e <playOptimal+134>\n   0x000000000008a4be <+534>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4c5 <+541>:\tjmp    0x8a374 <playOptimal+204>\n   0x000000000008a4ca <+546>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4d1 <+553>:\tjmp    0x8a38e <playOptimal+230>\n   0x000000000008a4d6 <+558>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a4db <+563>:\tsub    rsp,0x10\n   0x000000000008a4df <+567>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a4e3 <+571>:\tmov    eax,0x4a\n   0x000000000008a4e8 <+576>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a4ef <+583>:\tcall   QWORD PTR [r11+0x7]\n   0x000000000008a4f3 <+587>:\tmov    rcx,rax\n   0x000000000008a4f6 <+590>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a4fa <+594>:\tadd    rsp,0x10\n   0x000000000008a4fe <+598>:\tjmp    0x8a488 <playOptimal+480>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  int n = 100000;\n  print(\" Simulation count: $n\");\n  print(\" Random play wins: ${playRandom(n).toStringAsFixed(2)}% of simulations\");\n  print(\"Optimal play wins: ${playOptimal(n).toStringAsFixed(2)}% of simulations\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a299 <main+325>\n   0x000000000008a166 <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a16d <+25>:\tcall   0x8aedc <print>\n   0x000000000008a172 <+30>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a176 <+34>:\tmov    r10d,0x6\n   0x000000000008a17c <+40>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a181 <+45>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a185 <+49>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a18c <+56>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a190 <+60>:\tcall   0x8ab88 <playRandom>\n   0x000000000008a195 <+65>:\tmov    rcx,rax\n   0x000000000008a198 <+68>:\tmov    rax,rcx\n   0x000000000008a19b <+71>:\tadd    rax,rax\n   0x000000000008a19e <+74>:\tjno    0x8a1ad <main+89>\n   0x000000000008a1a4 <+80>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1a9 <+85>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a1ad <+89>:\tmov    rdi,rax\n   0x000000000008a1b0 <+92>:\tmov    esi,0x2\n   0x000000000008a1b5 <+97>:\tcall   0x8aa2c <int.toStringAsFixed>\n   0x000000000008a1ba <+102>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a1be <+106>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a1c2 <+110>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a1c6 <+114>:\ttest   al,0x1\n   0x000000000008a1c8 <+116>:\tje     0x8a1e1 <main+141>\n   0x000000000008a1ca <+118>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a1ce <+122>:\tshr    r11d,0x2\n   0x000000000008a1d2 <+126>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a1d6 <+130>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a1da <+134>:\tje     0x8a1e1 <main+141>\n   0x000000000008a1dc <+136>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a1e1 <+141>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1e5 <+145>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a1ec <+152>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a1f0 <+156>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a1f4 <+160>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1f9 <+165>:\tmov    rdi,rax\n   0x000000000008a1fc <+168>:\tcall   0x8aedc <print>\n   0x000000000008a201 <+173>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a205 <+177>:\tmov    r10d,0x6\n   0x000000000008a20b <+183>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a210 <+188>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a214 <+192>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a21b <+199>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a21f <+203>:\tcall   0x8a2a8 <playOptimal>\n   0x000000000008a224 <+208>:\tmov    rcx,rax\n   0x000000000008a227 <+211>:\tmov    rax,rcx\n   0x000000000008a22a <+214>:\tadd    rax,rax\n   0x000000000008a22d <+217>:\tjno    0x8a23c <main+232>\n   0x000000000008a233 <+223>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a238 <+228>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a23c <+232>:\tmov    rdi,rax\n   0x000000000008a23f <+235>:\tmov    esi,0x2\n   0x000000000008a244 <+240>:\tcall   0x8aa2c <int.toStringAsFixed>\n   0x000000000008a249 <+245>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a24d <+249>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a251 <+253>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a255 <+257>:\ttest   al,0x1\n   0x000000000008a257 <+259>:\tje     0x8a270 <main+284>\n   0x000000000008a259 <+261>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a25d <+265>:\tshr    r11d,0x2\n   0x000000000008a261 <+269>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a265 <+273>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a269 <+277>:\tje     0x8a270 <main+284>\n   0x000000000008a26b <+279>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a270 <+284>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a274 <+288>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a27b <+295>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a27f <+299>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a283 <+303>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a288 <+308>:\tmov    rdi,rax\n   0x000000000008a28b <+311>:\tcall   0x8aedc <print>\n   0x000000000008a290 <+316>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a294 <+320>:\tmov    rsp,rbp\n   0x000000000008a297 <+323>:\tpop    rbp\n   0x000000000008a298 <+324>:\tret\n   0x000000000008a299 <+325>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2a0 <+332>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "99-bottles-of-beer.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  BeerSong beerSong = BeerSong();\n  //pass a 'starting point' and 'end point' as parameters respectively\n  String printTheLyrics = beerSong.recite(99, 1).join('\\n');\n  print(printTheLyrics);\n  }",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a18f <main+59>\n   0x000000000008a162 <+14>:\tcall   0x8a598 <new BeerSong>\n   0x000000000008a167 <+19>:\tmov    rdi,rax\n   0x000000000008a16a <+22>:\tcall   0x8a234 <BeerSong.recite>\n   0x000000000008a16f <+27>:\tmov    rdi,rax\n   0x000000000008a172 <+30>:\tmov    rsi,QWORD PTR [r15+0x17f7]\n   0x000000000008a179 <+37>:\tcall   0x5b698 <List.join>\n   0x000000000008a17e <+42>:\tmov    rdi,rax\n   0x000000000008a181 <+45>:\tcall   0x8a198 <print>\n   0x000000000008a186 <+50>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a18a <+54>:\tmov    rsp,rbp\n   0x000000000008a18d <+57>:\tpop    rbp\n   0x000000000008a18e <+58>:\tret\n   0x000000000008a18f <+59>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a196 <+66>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "ackermann-function.dart",
  "functions": [
    {
      "name": "A",
      "source": "int A(int m, int n) => m==0 ? n+1 : n==0 ? A(m-1,1) : A(m-1,A(m,n-1));",
      "assembly": "Dump of assembler code for function A:\n   0x000000000008a224 <+0>:\tpush   rbp\n   0x000000000008a225 <+1>:\tmov    rbp,rsp\n   0x000000000008a228 <+4>:\tsub    rsp,0x8\n   0x000000000008a22c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a230 <+12>:\tjbe    0x8a297 <A+115>\n   0x000000000008a236 <+18>:\tcmp    rdi,0x0\n   0x000000000008a23a <+22>:\tjne    0x8a24c <A+40>\n   0x000000000008a240 <+28>:\tmov    rax,rsi\n   0x000000000008a243 <+31>:\tadd    rax,0x1\n   0x000000000008a247 <+35>:\tjmp    0x8a292 <A+110>\n   0x000000000008a24c <+40>:\tcmp    rsi,0x0\n   0x000000000008a250 <+44>:\tjne    0x8a26c <A+72>\n   0x000000000008a256 <+50>:\tsub    rdi,0x1\n   0x000000000008a25a <+54>:\tmov    esi,0x1\n   0x000000000008a25f <+59>:\tcall   0x8a224 <A>\n   0x000000000008a264 <+64>:\tmov    rcx,rax\n   0x000000000008a267 <+67>:\tjmp    0x8a28f <A+107>\n   0x000000000008a26c <+72>:\tmov    rax,rdi\n   0x000000000008a26f <+75>:\tsub    rax,0x1\n   0x000000000008a273 <+79>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a277 <+83>:\tsub    rsi,0x1\n   0x000000000008a27b <+87>:\tcall   0x8a224 <A>\n   0x000000000008a280 <+92>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a284 <+96>:\tmov    rsi,rax\n   0x000000000008a287 <+99>:\tcall   0x8a224 <A>\n   0x000000000008a28c <+104>:\tmov    rcx,rax\n   0x000000000008a28f <+107>:\tmov    rax,rcx\n   0x000000000008a292 <+110>:\tmov    rsp,rbp\n   0x000000000008a295 <+113>:\tpop    rbp\n   0x000000000008a296 <+114>:\tret\n   0x000000000008a297 <+115>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a29e <+122>:\tjmp    0x8a236 <A+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "main() {\n  print(A(0,0));\n  print(A(1,0));\n  print(A(0,1));\n  print(A(2,2));\n  print(A(2,3));\n  print(A(3,3));\n  print(A(3,4));\n  print(A(3,5));\n  print(A(4,0));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a217 <main+195>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tcall   0x8a2ec <printToConsole>\n   0x000000000008a16e <+26>:\tmov    edi,0x2\n   0x000000000008a173 <+31>:\tcall   0x8a2a0 <print>\n   0x000000000008a178 <+36>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a17f <+43>:\tcall   0x8a2ec <printToConsole>\n   0x000000000008a184 <+48>:\tmov    edi,0x2\n   0x000000000008a189 <+53>:\tmov    esi,0x2\n   0x000000000008a18e <+58>:\tcall   0x8a224 <A>\n   0x000000000008a193 <+63>:\tmov    rdi,rax\n   0x000000000008a196 <+66>:\tcall   0x8a2a0 <print>\n   0x000000000008a19b <+71>:\tmov    edi,0x2\n   0x000000000008a1a0 <+76>:\tmov    esi,0x3\n   0x000000000008a1a5 <+81>:\tcall   0x8a224 <A>\n   0x000000000008a1aa <+86>:\tmov    rdi,rax\n   0x000000000008a1ad <+89>:\tcall   0x8a2a0 <print>\n   0x000000000008a1b2 <+94>:\tmov    edi,0x3\n   0x000000000008a1b7 <+99>:\tmov    esi,0x3\n   0x000000000008a1bc <+104>:\tcall   0x8a224 <A>\n   0x000000000008a1c1 <+109>:\tmov    rdi,rax\n   0x000000000008a1c4 <+112>:\tcall   0x8a2a0 <print>\n   0x000000000008a1c9 <+117>:\tmov    edi,0x3\n   0x000000000008a1ce <+122>:\tmov    esi,0x4\n   0x000000000008a1d3 <+127>:\tcall   0x8a224 <A>\n   0x000000000008a1d8 <+132>:\tmov    rdi,rax\n   0x000000000008a1db <+135>:\tcall   0x8a2a0 <print>\n   0x000000000008a1e0 <+140>:\tmov    edi,0x3\n   0x000000000008a1e5 <+145>:\tmov    esi,0x5\n   0x000000000008a1ea <+150>:\tcall   0x8a224 <A>\n   0x000000000008a1ef <+155>:\tmov    rdi,rax\n   0x000000000008a1f2 <+158>:\tcall   0x8a2a0 <print>\n   0x000000000008a1f7 <+163>:\tmov    edi,0x3\n   0x000000000008a1fc <+168>:\tmov    esi,0x1\n   0x000000000008a201 <+173>:\tcall   0x8a224 <A>\n   0x000000000008a206 <+178>:\tmov    rdi,rax\n   0x000000000008a209 <+181>:\tcall   0x8a2a0 <print>\n   0x000000000008a20e <+186>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a212 <+190>:\tmov    rsp,rbp\n   0x000000000008a215 <+193>:\tpop    rbp\n   0x000000000008a216 <+194>:\tret\n   0x000000000008a217 <+195>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a21e <+202>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "additive-primes.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  const limit = 500;\n  print('Additive primes less than $limit :');\n  int count = 0;\n  for (int n = 1; n < limit; ++n) {\n    if (isPrime(digit_sum(n)) && isPrime(n)) {\n      print('   $n');\n      ++count;\n    }\n  }\n  print('$count additive primes found.');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a294 <+0>:\tpush   rbp\n   0x000000000008a295 <+1>:\tmov    rbp,rsp\n   0x000000000008a298 <+4>:\tsub    rsp,0x38\n   0x000000000008a29c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2a0 <+12>:\tjbe    0x8a5f1 <main+861>\n   0x000000000008a2a6 <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a2ad <+25>:\tcall   0x8a6c8 <printToConsole>\n   0x000000000008a2b2 <+30>:\txor    edi,edi\n   0x000000000008a2b4 <+32>:\tmov    esi,0x1\n   0x000000000008a2b9 <+37>:\tmov    ecx,0xa\n   0x000000000008a2be <+42>:\tmov    QWORD PTR [rbp-0x20],rdi\n   0x000000000008a2c2 <+46>:\tmov    QWORD PTR [rbp-0x28],rsi\n   0x000000000008a2c6 <+50>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2ca <+54>:\tjbe    0x8a5fd <main+873>\n   0x000000000008a2d0 <+60>:\tcmp    rsi,0x1f4\n   0x000000000008a2d7 <+67>:\tjge    0x8a596 <main+770>\n   0x000000000008a2dd <+73>:\tmov    rbx,rsi\n   0x000000000008a2e0 <+76>:\txor    r8d,r8d\n   0x000000000008a2e3 <+79>:\tmov    QWORD PTR [rbp-0x18],r8\n   0x000000000008a2e7 <+83>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2eb <+87>:\tjbe    0x8a609 <main+885>\n   0x000000000008a2f1 <+93>:\tcmp    rbx,0x0\n   0x000000000008a2f5 <+97>:\tjle    0x8a35e <main+202>\n   0x000000000008a2fb <+103>:\tmov    rax,rbx\n   0x000000000008a2fe <+106>:\tmov    r11,rax\n   0x000000000008a301 <+109>:\tmov    rax,QWORD PTR [r15+0x17ff]\n   0x000000000008a308 <+116>:\timul   r11\n   0x000000000008a30b <+119>:\tsar    rdx,0x2\n   0x000000000008a30f <+123>:\tmov    rax,rdx\n   0x000000000008a312 <+126>:\tshr    rdx,0x3f\n   0x000000000008a316 <+130>:\tadd    rdx,rax\n   0x000000000008a319 <+133>:\tmov    rax,r11\n   0x000000000008a31c <+136>:\tmov    r11d,0xa\n   0x000000000008a322 <+142>:\timul   rdx,r11\n   0x000000000008a326 <+146>:\tsub    rax,rdx\n   0x000000000008a329 <+149>:\tjge    0x8a332 <main+158>\n   0x000000000008a32f <+155>:\tadd    rax,r11\n   0x000000000008a332 <+158>:\tmov    rdx,rax\n   0x000000000008a335 <+161>:\tadd    r8,rdx\n   0x000000000008a338 <+164>:\tmov    rax,rbx\n   0x000000000008a33b <+167>:\tmov    r11,rax\n   0x000000000008a33e <+170>:\tmov    rax,QWORD PTR [r15+0x17ff]\n   0x000000000008a345 <+177>:\timul   r11\n   0x000000000008a348 <+180>:\tsar    rdx,0x2\n   0x000000000008a34c <+184>:\tmov    rax,rdx\n   0x000000000008a34f <+187>:\tshr    rdx,0x3f\n   0x000000000008a353 <+191>:\tadd    rdx,rax\n   0x000000000008a356 <+194>:\tmov    rax,rdx\n   0x000000000008a359 <+197>:\tmov    rbx,rax\n   0x000000000008a35c <+200>:\tjmp    0x8a2e3 <main+79>\n   0x000000000008a35e <+202>:\tcmp    r8,0x1\n   0x000000000008a362 <+206>:\tjle    0x8a523 <main+655>\n   0x000000000008a368 <+212>:\tcmp    r8,0x2\n   0x000000000008a36c <+216>:\tjne    0x8a37a <main+230>\n   0x000000000008a372 <+222>:\tmov    rcx,rsi\n   0x000000000008a375 <+225>:\tjmp    0x8a449 <main+437>\n   0x000000000008a37a <+230>:\tmov    rax,r8\n   0x000000000008a37d <+233>:\tadd    rax,rax\n   0x000000000008a380 <+236>:\tjno    0x8a38f <main+251>\n   0x000000000008a386 <+242>:\tcall   0x85030 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a38b <+247>:\tmov    QWORD PTR [rax+0x7],r8\n   0x000000000008a38f <+251>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a393 <+255>:\tmov    edx,0x2\n   0x000000000008a398 <+260>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a39c <+264>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3a0 <+268>:\tjbe    0x8a615 <main+897>\n   0x000000000008a3a6 <+274>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a3aa <+278>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a3af <+283>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a3b3 <+287>:\tcall   0x82a20 <new _Double.fromInteger>\n   0x000000000008a3b8 <+292>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008a3bd <+297>:\tsqrtsd xmm1,xmm0\n   0x000000000008a3c1 <+301>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a3c5 <+305>:\txorps  xmm0,xmm0\n   0x000000000008a3c8 <+308>:\tcvtsi2sd xmm0,rcx\n   0x000000000008a3cd <+313>:\tcomisd xmm0,xmm1\n   0x000000000008a3d1 <+317>:\tjp     0x8a445 <main+433>\n   0x000000000008a3d7 <+323>:\tja     0x8a445 <main+433>\n   0x000000000008a3dd <+329>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a3e1 <+333>:\ttest   rcx,rcx\n   0x000000000008a3e4 <+336>:\tje     0x8a621 <main+909>\n   0x000000000008a3ea <+342>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a3ee <+346>:\tje     0x8a635 <main+929>\n   0x000000000008a3f4 <+352>:\tmovsxd rdx,eax\n   0x000000000008a3f7 <+355>:\tcmp    rdx,rax\n   0x000000000008a3fa <+358>:\tjne    0x8a40c <main+376>\n   0x000000000008a3fc <+360>:\tmovsxd rdx,ecx\n   0x000000000008a3ff <+363>:\tcmp    rdx,rcx\n   0x000000000008a402 <+366>:\tjne    0x8a40c <main+376>\n   0x000000000008a404 <+368>:\tcdq\n   0x000000000008a405 <+369>:\tidiv   ecx\n   0x000000000008a407 <+371>:\tmovsxd rdx,edx\n   0x000000000008a40a <+374>:\tjmp    0x8a411 <main+381>\n   0x000000000008a40c <+376>:\tcqo\n   0x000000000008a40e <+378>:\tidiv   rcx\n   0x000000000008a411 <+381>:\ttest   rdx,rdx\n   0x000000000008a414 <+384>:\tjl     0x8a63c <main+936>\n   0x000000000008a41a <+390>:\tcmp    rdx,0x0\n   0x000000000008a41e <+394>:\tje     0x8a523 <main+655>\n   0x000000000008a424 <+400>:\tadd    rcx,0x1\n   0x000000000008a428 <+404>:\tmov    rdx,rcx\n   0x000000000008a42b <+407>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a42f <+411>:\tmov    rsi,QWORD PTR [rbp-0x28]\n   0x000000000008a433 <+415>:\tmov    r8,QWORD PTR [rbp-0x18]\n   0x000000000008a437 <+419>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a43b <+423>:\tmov    ecx,0xa\n   0x000000000008a440 <+428>:\tjmp    0x8a398 <main+260>\n   0x000000000008a445 <+433>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008a449 <+437>:\tcmp    rcx,0x1\n   0x000000000008a44d <+441>:\tjle    0x8a523 <main+655>\n   0x000000000008a453 <+447>:\tcmp    rcx,0x2\n   0x000000000008a457 <+451>:\tjne    0x8a465 <main+465>\n   0x000000000008a45d <+457>:\tmov    rax,rcx\n   0x000000000008a460 <+460>:\tjmp    0x8a530 <main+668>\n   0x000000000008a465 <+465>:\tmov    rax,rcx\n   0x000000000008a468 <+468>:\tadd    rax,rax\n   0x000000000008a46b <+471>:\tjno    0x8a47a <main+486>\n   0x000000000008a471 <+477>:\tcall   0x85030 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a476 <+482>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a47a <+486>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a47e <+490>:\tmov    edx,0x2\n   0x000000000008a483 <+495>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a487 <+499>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a48b <+503>:\tjbe    0x8a651 <main+957>\n   0x000000000008a491 <+509>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a495 <+513>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a49a <+518>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a49e <+522>:\tcall   0x82a20 <new _Double.fromInteger>\n   0x000000000008a4a3 <+527>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008a4a8 <+532>:\tsqrtsd xmm1,xmm0\n   0x000000000008a4ac <+536>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a4b0 <+540>:\txorps  xmm0,xmm0\n   0x000000000008a4b3 <+543>:\tcvtsi2sd xmm0,rcx\n   0x000000000008a4b8 <+548>:\tcomisd xmm0,xmm1\n   0x000000000008a4bc <+552>:\tjp     0x8a52c <main+664>\n   0x000000000008a4c2 <+558>:\tja     0x8a52c <main+664>\n   0x000000000008a4c8 <+564>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a4cc <+568>:\ttest   rcx,rcx\n   0x000000000008a4cf <+571>:\tje     0x8a65d <main+969>\n   0x000000000008a4d5 <+577>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a4d9 <+581>:\tje     0x8a671 <main+989>\n   0x000000000008a4df <+587>:\tmovsxd rdx,eax\n   0x000000000008a4e2 <+590>:\tcmp    rdx,rax\n   0x000000000008a4e5 <+593>:\tjne    0x8a4f7 <main+611>\n   0x000000000008a4e7 <+595>:\tmovsxd rdx,ecx\n   0x000000000008a4ea <+598>:\tcmp    rdx,rcx\n   0x000000000008a4ed <+601>:\tjne    0x8a4f7 <main+611>\n   0x000000000008a4ef <+603>:\tcdq\n   0x000000000008a4f0 <+604>:\tidiv   ecx\n   0x000000000008a4f2 <+606>:\tmovsxd rdx,edx\n   0x000000000008a4f5 <+609>:\tjmp    0x8a4fc <main+616>\n   0x000000000008a4f7 <+611>:\tcqo\n   0x000000000008a4f9 <+613>:\tidiv   rcx\n   0x000000000008a4fc <+616>:\ttest   rdx,rdx\n   0x000000000008a4ff <+619>:\tjl     0x8a678 <main+996>\n   0x000000000008a505 <+625>:\tcmp    rdx,0x0\n   0x000000000008a509 <+629>:\tje     0x8a523 <main+655>\n   0x000000000008a50f <+635>:\tadd    rcx,0x1\n   0x000000000008a513 <+639>:\tmov    rdx,rcx\n   0x000000000008a516 <+642>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008a51a <+646>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a51e <+650>:\tjmp    0x8a483 <main+495>\n   0x000000000008a523 <+655>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a527 <+659>:\tjmp    0x8a586 <main+754>\n   0x000000000008a52c <+664>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a530 <+668>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a534 <+672>:\tmov    r10d,0x4\n   0x000000000008a53a <+678>:\tcall   0x84dac <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a53f <+683>:\tmov    rcx,rax\n   0x000000000008a542 <+686>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a549 <+693>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008a54d <+697>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a551 <+701>:\tmov    rax,rdx\n   0x000000000008a554 <+704>:\tadd    rax,rax\n   0x000000000008a557 <+707>:\tjno    0x8a566 <main+722>\n   0x000000000008a55d <+713>:\tcall   0x85030 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a562 <+718>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a566 <+722>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008a56a <+726>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a56e <+730>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a573 <+735>:\tmov    rdi,rax\n   0x000000000008a576 <+738>:\tcall   0x8a6c8 <printToConsole>\n   0x000000000008a57b <+743>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a57f <+747>:\tadd    rax,0x1\n   0x000000000008a583 <+751>:\tmov    rdi,rax\n   0x000000000008a586 <+754>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a58a <+758>:\tadd    rax,0x1\n   0x000000000008a58e <+762>:\tmov    rsi,rax\n   0x000000000008a591 <+765>:\tjmp    0x8a2b9 <main+37>\n   0x000000000008a596 <+770>:\tmov    rcx,rdi\n   0x000000000008a599 <+773>:\tmov    rax,rcx\n   0x000000000008a59c <+776>:\tadd    rax,rax\n   0x000000000008a59f <+779>:\tjno    0x8a5ae <main+794>\n   0x000000000008a5a5 <+785>:\tcall   0x85030 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a5aa <+790>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a5ae <+794>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a5b2 <+798>:\tmov    r10d,0x4\n   0x000000000008a5b8 <+804>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a5bc <+808>:\tcall   0x84dac <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a5c1 <+813>:\tmov    rcx,rax\n   0x000000000008a5c4 <+816>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a5c8 <+820>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a5cc <+824>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a5d3 <+831>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a5d7 <+835>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a5db <+839>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a5e0 <+844>:\tmov    rdi,rax\n   0x000000000008a5e3 <+847>:\tcall   0x8a690 <print>\n   0x000000000008a5e8 <+852>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a5ec <+856>:\tmov    rsp,rbp\n   0x000000000008a5ef <+859>:\tpop    rbp\n   0x000000000008a5f0 <+860>:\tret\n   0x000000000008a5f1 <+861>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a5f8 <+868>:\tjmp    0x8a2a6 <main+18>\n   0x000000000008a5fd <+873>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a604 <+880>:\tjmp    0x8a2d0 <main+60>\n   0x000000000008a609 <+885>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a610 <+892>:\tjmp    0x8a2f1 <main+93>\n   0x000000000008a615 <+897>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a61c <+904>:\tjmp    0x8a3a6 <main+274>\n   0x000000000008a621 <+909>:\tpush   rcx\n   0x000000000008a622 <+910>:\tpush   rax\n   0x000000000008a623 <+911>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a62a <+918>:\txor    r10d,r10d\n   0x000000000008a62d <+921>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a634 <+928>:\tint3\n   0x000000000008a635 <+929>:\txor    edx,edx\n   0x000000000008a637 <+931>:\tjmp    0x8a41a <main+390>\n   0x000000000008a63c <+936>:\ttest   rcx,rcx\n   0x000000000008a63f <+939>:\tjl     0x8a649 <main+949>\n   0x000000000008a641 <+941>:\tadd    rdx,rcx\n   0x000000000008a644 <+944>:\tjmp    0x8a41a <main+390>\n   0x000000000008a649 <+949>:\tsub    rdx,rcx\n   0x000000000008a64c <+952>:\tjmp    0x8a41a <main+390>\n   0x000000000008a651 <+957>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a658 <+964>:\tjmp    0x8a491 <main+509>\n   0x000000000008a65d <+969>:\tpush   rcx\n   0x000000000008a65e <+970>:\tpush   rax\n   0x000000000008a65f <+971>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a666 <+978>:\txor    r10d,r10d\n   0x000000000008a669 <+981>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a670 <+988>:\tint3\n   0x000000000008a671 <+989>:\txor    edx,edx\n   0x000000000008a673 <+991>:\tjmp    0x8a505 <main+625>\n   0x000000000008a678 <+996>:\ttest   rcx,rcx\n   0x000000000008a67b <+999>:\tjl     0x8a685 <main+1009>\n   0x000000000008a67d <+1001>:\tadd    rdx,rcx\n   0x000000000008a680 <+1004>:\tjmp    0x8a505 <main+625>\n   0x000000000008a685 <+1009>:\tsub    rdx,rcx\n   0x000000000008a688 <+1012>:\tjmp    0x8a505 <main+625>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "anti-primes.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  int maxDiv = 0, count = 0;\n  print(\"The first 20 anti-primes are:\");\n  for (int n = 1; count < 20; ++n) {\n    int d = countDivisors(n);\n    if (d > maxDiv) {\n      print(\"$n \");\n      maxDiv = d;\n      count++;\n    }\n  }\n  print(\"\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a294 <+0>:\tpush   rbp\n   0x000000000008a295 <+1>:\tmov    rbp,rsp\n   0x000000000008a298 <+4>:\tsub    rsp,0x28\n   0x000000000008a29c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2a0 <+12>:\tjbe    0x8a41f <main+395>\n   0x000000000008a2a6 <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a2ad <+25>:\tcall   0x8a488 <printToConsole>\n   0x000000000008a2b2 <+30>:\txor    ebx,ebx\n   0x000000000008a2b4 <+32>:\txor    esi,esi\n   0x000000000008a2b6 <+34>:\tmov    ecx,0x1\n   0x000000000008a2bb <+39>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x000000000008a2c4 <+48>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a2c8 <+52>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008a2cc <+56>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2d0 <+60>:\tjbe    0x8a42b <main+407>\n   0x000000000008a2d6 <+66>:\tcmp    rsi,0x14\n   0x000000000008a2da <+70>:\tjge    0x8a40a <main+374>\n   0x000000000008a2e0 <+76>:\tcmp    rcx,0x2\n   0x000000000008a2e4 <+80>:\tjge    0x8a2f4 <main+96>\n   0x000000000008a2ea <+86>:\tmov    edx,0x1\n   0x000000000008a2ef <+91>:\tjmp    0x8a386 <main+242>\n   0x000000000008a2f4 <+96>:\txorps  xmm1,xmm1\n   0x000000000008a2f7 <+99>:\tcvtsi2sd xmm1,rcx\n   0x000000000008a2fc <+104>:\tdivsd  xmm1,xmm0\n   0x000000000008a300 <+108>:\tmov    r8d,0x2\n   0x000000000008a306 <+114>:\tmov    edi,0x2\n   0x000000000008a30b <+119>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a30f <+123>:\tjbe    0x8a437 <main+419>\n   0x000000000008a315 <+129>:\txorps  xmm2,xmm2\n   0x000000000008a318 <+132>:\tcvtsi2sd xmm2,rdi\n   0x000000000008a31d <+137>:\tcomisd xmm2,xmm1\n   0x000000000008a321 <+141>:\tjp     0x8a383 <main+239>\n   0x000000000008a327 <+147>:\tja     0x8a383 <main+239>\n   0x000000000008a32d <+153>:\tmov    rax,rcx\n   0x000000000008a330 <+156>:\ttest   rdi,rdi\n   0x000000000008a333 <+159>:\tje     0x8a443 <main+431>\n   0x000000000008a339 <+165>:\tcmp    rdi,0xffffffffffffffff\n   0x000000000008a33d <+169>:\tje     0x8a469 <main+469>\n   0x000000000008a343 <+175>:\tmovsxd rdx,eax\n   0x000000000008a346 <+178>:\tcmp    rdx,rax\n   0x000000000008a349 <+181>:\tjne    0x8a35b <main+199>\n   0x000000000008a34b <+183>:\tmovsxd rdx,edi\n   0x000000000008a34e <+186>:\tcmp    rdx,rdi\n   0x000000000008a351 <+189>:\tjne    0x8a35b <main+199>\n   0x000000000008a353 <+191>:\tcdq\n   0x000000000008a354 <+192>:\tidiv   edi\n   0x000000000008a356 <+194>:\tmovsxd rdx,edx\n   0x000000000008a359 <+197>:\tjmp    0x8a360 <main+204>\n   0x000000000008a35b <+199>:\tcqo\n   0x000000000008a35d <+201>:\tidiv   rdi\n   0x000000000008a360 <+204>:\ttest   rdx,rdx\n   0x000000000008a363 <+207>:\tjl     0x8a470 <main+476>\n   0x000000000008a369 <+213>:\tcmp    rdx,0x0\n   0x000000000008a36d <+217>:\tjne    0x8a37d <main+233>\n   0x000000000008a373 <+223>:\tmov    rax,r8\n   0x000000000008a376 <+226>:\tadd    rax,0x1\n   0x000000000008a37a <+230>:\tmov    r8,rax\n   0x000000000008a37d <+233>:\tadd    rdi,0x1\n   0x000000000008a381 <+237>:\tjmp    0x8a30b <main+119>\n   0x000000000008a383 <+239>:\tmov    rdx,r8\n   0x000000000008a386 <+242>:\tmov    QWORD PTR [rbp-0x10],rdx\n   0x000000000008a38a <+246>:\tcmp    rdx,rbx\n   0x000000000008a38d <+249>:\tjle    0x8a3f6 <main+354>\n   0x000000000008a393 <+255>:\tmov    rax,rcx\n   0x000000000008a396 <+258>:\tadd    rax,rax\n   0x000000000008a399 <+261>:\tjno    0x8a3a8 <main+276>\n   0x000000000008a39f <+267>:\tcall   0x850a4 <stub _iso_stub_AllocateMintSharedWithFPURegsStub>\n   0x000000000008a3a4 <+272>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a3a8 <+276>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a3ac <+280>:\tmov    r10d,0x4\n   0x000000000008a3b2 <+286>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a3b6 <+290>:\tcall   0x84dac <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a3bb <+295>:\tmov    rcx,rax\n   0x000000000008a3be <+298>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a3c2 <+302>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a3c6 <+306>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x000000000008a3cd <+313>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a3d1 <+317>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a3d5 <+321>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a3da <+326>:\tmov    rdi,rax\n   0x000000000008a3dd <+329>:\tcall   0x8a488 <printToConsole>\n   0x000000000008a3e2 <+334>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a3e6 <+338>:\tadd    rax,0x1\n   0x000000000008a3ea <+342>:\tmov    rbx,QWORD PTR [rbp-0x10]\n   0x000000000008a3ee <+346>:\tmov    rsi,rax\n   0x000000000008a3f1 <+349>:\tjmp    0x8a3fa <main+358>\n   0x000000000008a3f6 <+354>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a3fa <+358>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a3fe <+362>:\tadd    rax,0x1\n   0x000000000008a402 <+366>:\tmov    rcx,rax\n   0x000000000008a405 <+369>:\tjmp    0x8a2bb <main+39>\n   0x000000000008a40a <+374>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a411 <+381>:\tcall   0x8a488 <printToConsole>\n   0x000000000008a416 <+386>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a41a <+390>:\tmov    rsp,rbp\n   0x000000000008a41d <+393>:\tpop    rbp\n   0x000000000008a41e <+394>:\tret\n   0x000000000008a41f <+395>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a426 <+402>:\tjmp    0x8a2a6 <main+18>\n   0x000000000008a42b <+407>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a432 <+414>:\tjmp    0x8a2d6 <main+66>\n   0x000000000008a437 <+419>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a43e <+426>:\tjmp    0x8a315 <main+129>\n   0x000000000008a443 <+431>:\tsub    rsp,0x20\n   0x000000000008a447 <+435>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a44b <+439>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x000000000008a450 <+444>:\tpush   r8\n   0x000000000008a452 <+446>:\tpush   rdi\n   0x000000000008a453 <+447>:\tpush   rsi\n   0x000000000008a454 <+448>:\tpush   rbx\n   0x000000000008a455 <+449>:\tpush   rcx\n   0x000000000008a456 <+450>:\tpush   rax\n   0x000000000008a457 <+451>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a45e <+458>:\txor    r10d,r10d\n   0x000000000008a461 <+461>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a468 <+468>:\tint3\n   0x000000000008a469 <+469>:\txor    edx,edx\n   0x000000000008a46b <+471>:\tjmp    0x8a369 <main+213>\n   0x000000000008a470 <+476>:\ttest   rdi,rdi\n   0x000000000008a473 <+479>:\tjl     0x8a47d <main+489>\n   0x000000000008a475 <+481>:\tadd    rdx,rdi\n   0x000000000008a478 <+484>:\tjmp    0x8a369 <main+213>\n   0x000000000008a47d <+489>:\tsub    rdx,rdi\n   0x000000000008a480 <+492>:\tjmp    0x8a369 <main+213>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "arithmetic-complex.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var cl= new complex(1,2);\n  var cl2= new complex(3,-1);\n  print(cl.toString());\n  print(cl2.toString());\n  print(cl.inv().toString());\n  print(cl2.mult(cl).toString());\n\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008ac8c <+0>:\tpush   rbp\n   0x000000000008ac8d <+1>:\tmov    rbp,rsp\n   0x000000000008ac90 <+4>:\tsub    rsp,0x18\n   0x000000000008ac94 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ac98 <+12>:\tjbe    0x8ad3b <main+175>\n   0x000000000008ac9e <+18>:\tcall   0x8b0f4 <new complex>\n   0x000000000008aca3 <+23>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008aca7 <+27>:\tmov    QWORD PTR [rax+0x7],0x2\n   0x000000000008acaf <+35>:\tmov    QWORD PTR [rax+0xf],0x4\n   0x000000000008acb7 <+43>:\tcall   0x8b0f4 <new complex>\n   0x000000000008acbc <+48>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008acc0 <+52>:\tmov    QWORD PTR [rax+0x7],0x6\n   0x000000000008acc8 <+60>:\tmov    QWORD PTR [rax+0xf],0xfffffffffffffffe\n   0x000000000008acd0 <+68>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008acd4 <+72>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008acd8 <+76>:\tcall   0x7468c <complex.toString>\n   0x000000000008acdd <+81>:\tmov    rdi,rax\n   0x000000000008ace0 <+84>:\tcall   0x8b058 <print>\n   0x000000000008ace5 <+89>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008ace9 <+93>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008aced <+97>:\tcall   0x7468c <complex.toString>\n   0x000000000008acf2 <+102>:\tmov    rdi,rax\n   0x000000000008acf5 <+105>:\tcall   0x8b058 <print>\n   0x000000000008acfa <+110>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008acfe <+114>:\tcall   0x8aeb8 <complex.inv>\n   0x000000000008ad03 <+119>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008ad07 <+123>:\tcall   0x7468c <complex.toString>\n   0x000000000008ad0c <+128>:\tmov    rdi,rax\n   0x000000000008ad0f <+131>:\tcall   0x8b058 <print>\n   0x000000000008ad14 <+136>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008ad18 <+140>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008ad1c <+144>:\tcall   0x8ad48 <complex.mult>\n   0x000000000008ad21 <+149>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008ad25 <+153>:\tcall   0x7468c <complex.toString>\n   0x000000000008ad2a <+158>:\tmov    rdi,rax\n   0x000000000008ad2d <+161>:\tcall   0x8b058 <print>\n   0x000000000008ad32 <+166>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008ad36 <+170>:\tmov    rsp,rbp\n   0x000000000008ad39 <+173>:\tpop    rbp\n   0x000000000008ad3a <+174>:\tret\n   0x000000000008ad3b <+175>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad42 <+182>:\tjmp    0x8ac9e <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "array-length.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  var fruits = ['apple', 'orange'];\n  print(arrLength(fruits));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a174 <+0>:\tpush   rbp\n   0x000000000008a175 <+1>:\tmov    rbp,rsp\n   0x000000000008a178 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a17c <+8>:\tjbe    0x8a195 <main+33>\n   0x000000000008a182 <+14>:\tmov    edi,0x2\n   0x000000000008a187 <+19>:\tcall   0x8a1a0 <print>\n   0x000000000008a18c <+24>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a190 <+28>:\tmov    rsp,rbp\n   0x000000000008a193 <+31>:\tpop    rbp\n   0x000000000008a194 <+32>:\tret\n   0x000000000008a195 <+33>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a19c <+40>:\tjmp    0x8a182 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "associative-array-creation.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n\tvar rosettaCode = { // Type is inferred to be Map<String, String>\n\t\t'task': 'Associative Array Creation'\n\t};\n\n\trosettaCode['language'] = 'Dart';\n\n\t// The update function can be used to update a key using a callback\n\trosettaCode.update( 'is fun',  // Key to update\n\t\t(value) => \"i don't know\", // New value to use if key is present\n\t\tifAbsent: () => 'yes!' // Value to use if key is absent\n\t);\n\t\n\tassert( rosettaCode.toString() == '{task: Associative Array Creation, language: Dart, is fun: yes!}');\n\t\n\t// If we type the Map with dynamic keys and values, it is like a JavaScript object\n\tMap<dynamic, dynamic> jsObject = {\n\t\t'key': 'value',\n\t\t1: 2,\n\t\t1.5: [ 'more', 'stuff' ],\n\t\t#doStuff: () => print('doing stuff!') // #doStuff is a symbol, only one instance of this exists in the program. Would be :doStuff in Ruby\n\t};\n\n\tprint( jsObject['key'] );\n\tprint( jsObject[1] );\n\t\n\tfor ( var value in jsObject[1.5] )\n\t\tprint('item: $value');\n\n\tjsObject[ #doStuff ](); // Calling the function\n\t\n\tprint('\\nKey types:');\n\tjsObject.keys.forEach( (key) => print( key.runtimeType ) );\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x28\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a4cc <main+888>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0x4\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a180 <+44>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a187 <+51>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a18b <+55>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a192 <+62>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a197 <+67>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a19b <+71>:\tcall   0x65e6c <new Map._fromLiteral>\n   0x000000000008a1a0 <+76>:\tmov    rdi,rax\n   0x000000000008a1a3 <+79>:\tmov    rsi,QWORD PTR [r15+0x180f]\n   0x000000000008a1aa <+86>:\tmov    rdx,QWORD PTR [r15+0x1817]\n   0x000000000008a1b1 <+93>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a1b5 <+97>:\tcall   0x575f4 <_LinkedHashMapMixin.[]=>\n   0x000000000008a1ba <+102>:\tmov    rbx,QWORD PTR [r15+0x181f]\n   0x000000000008a1c1 <+109>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a1c5 <+113>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a1ca <+118>:\tmov    rbx,QWORD PTR [r15+0x1827]\n   0x000000000008a1d1 <+125>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a1d5 <+129>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a1d9 <+133>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a1de <+138>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a1e2 <+142>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a1e6 <+146>:\tmov    rbx,rax\n   0x000000000008a1e9 <+149>:\tmov    rsi,QWORD PTR [r15+0x182f]\n   0x000000000008a1f0 <+156>:\tcall   0x8a654 <MapBase.update>\n   0x000000000008a1f5 <+161>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1f9 <+165>:\tmov    r10d,0x10\n   0x000000000008a1ff <+171>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a204 <+176>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a208 <+180>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a20f <+187>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a213 <+191>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a21a <+198>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a21e <+202>:\tmov    QWORD PTR [rax+0x27],0x2\n   0x000000000008a226 <+210>:\tmov    QWORD PTR [rax+0x2f],0x4\n   0x000000000008a22e <+218>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x000000000008a235 <+225>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000008a239 <+229>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a23d <+233>:\tmov    r10d,0x4\n   0x000000000008a243 <+239>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a248 <+244>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a24c <+248>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008a253 <+255>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a257 <+259>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x000000000008a25e <+266>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a262 <+270>:\tmov    rdx,QWORD PTR [r15+0xaf]\n   0x000000000008a269 <+277>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a26e <+282>:\tmov    rcx,rax\n   0x000000000008a271 <+285>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a275 <+289>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a279 <+293>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008a281 <+301>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a285 <+305>:\tmov    QWORD PTR [rax+0x3f],rcx\n   0x000000000008a289 <+309>:\tmov    r11,QWORD PTR [r15+0x185f]\n   0x000000000008a290 <+316>:\tmov    QWORD PTR [rax+0x47],r11\n   0x000000000008a294 <+320>:\tmov    rbx,QWORD PTR [r15+0x1867]\n   0x000000000008a29b <+327>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a29f <+331>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a2a4 <+336>:\tmov    rcx,rax\n   0x000000000008a2a7 <+339>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a2ab <+343>:\tmov    QWORD PTR [rax+0x4f],rcx\n   0x000000000008a2af <+347>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a2b3 <+351>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a2b8 <+356>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a2bc <+360>:\tcall   0x65e6c <new Map._fromLiteral>\n   0x000000000008a2c1 <+365>:\tmov    rdi,rax\n   0x000000000008a2c4 <+368>:\tmov    rsi,QWORD PTR [r15+0x1837]\n   0x000000000008a2cb <+375>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a2cf <+379>:\tcall   0x6d330 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008a2d4 <+384>:\tmov    rcx,rax\n   0x000000000008a2d7 <+387>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a2db <+391>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a2df <+395>:\tcmp    rdx,rcx\n   0x000000000008a2e2 <+398>:\tjne    0x8a2f1 <main+413>\n   0x000000000008a2e8 <+404>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a2ec <+408>:\tjmp    0x8a2f4 <main+416>\n   0x000000000008a2f1 <+413>:\tmov    rdi,rcx\n   0x000000000008a2f4 <+416>:\tcall   0x8a61c <print>\n   0x000000000008a2f9 <+421>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a2fd <+425>:\tmov    esi,0x2\n   0x000000000008a302 <+430>:\tcall   0x6d330 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008a307 <+435>:\tmov    rcx,rax\n   0x000000000008a30a <+438>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a30e <+442>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a312 <+446>:\tcmp    rdx,rcx\n   0x000000000008a315 <+449>:\tjne    0x8a324 <main+464>\n   0x000000000008a31b <+455>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a31f <+459>:\tjmp    0x8a327 <main+467>\n   0x000000000008a324 <+464>:\tmov    rdi,rcx\n   0x000000000008a327 <+467>:\tcall   0x8a61c <print>\n   0x000000000008a32c <+472>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a330 <+476>:\tmov    rsi,QWORD PTR [r15+0x1847]\n   0x000000000008a337 <+483>:\tcall   0x6d330 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008a33c <+488>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a340 <+492>:\tmov    rcx,QWORD PTR [rdi+0x17]\n   0x000000000008a344 <+496>:\tcmp    rcx,rax\n   0x000000000008a347 <+499>:\tjne    0x8a356 <main+514>\n   0x000000000008a34d <+505>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a351 <+509>:\tjmp    0x8a359 <main+517>\n   0x000000000008a356 <+514>:\tmov    rbx,rax\n   0x000000000008a359 <+517>:\tmov    rax,rbx\n   0x000000000008a35c <+520>:\tmov    QWORD PTR [rbp-0x10],rbx\n   0x000000000008a360 <+524>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a364 <+528>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a368 <+532>:\ttest   al,0x1\n   0x000000000008a36a <+534>:\tmov    esi,0x3c\n   0x000000000008a36f <+539>:\tje     0x8a377 <main+547>\n   0x000000000008a371 <+541>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a374 <+544>:\tshr    esi,0xc\n   0x000000000008a377 <+547>:\tsub    rsi,0x58\n   0x000000000008a37b <+551>:\tcmp    rsi,0x4\n   0x000000000008a37f <+555>:\tjbe    0x8a3c1 <main+621>\n   0x000000000008a385 <+561>:\tsub    rsi,0x18\n   0x000000000008a389 <+565>:\tcmp    rsi,0x37\n   0x000000000008a38d <+569>:\tjbe    0x8a3c1 <main+621>\n   0x000000000008a393 <+575>:\tsub    rsi,0x19e\n   0x000000000008a39a <+582>:\tcmp    rsi,0x12\n   0x000000000008a39e <+586>:\tjbe    0x8a3c1 <main+621>\n   0x000000000008a3a4 <+592>:\tcmp    rsi,0x1a\n   0x000000000008a3a8 <+596>:\tje     0x8a3c1 <main+621>\n   0x000000000008a3ae <+602>:\tmov    rbx,QWORD PTR [r15+0x186f]\n   0x000000000008a3b5 <+609>:\tmov    r9,QWORD PTR [r15+0x1877]\n   0x000000000008a3bc <+616>:\tcall   0x82fa0 <stub _iso_stub_DefaultTypeTestStub>\n   0x000000000008a3c1 <+621>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a3c5 <+625>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x000000000008a3c8 <+628>:\tshr    ecx,0xc\n   0x000000000008a3cb <+631>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3cf <+635>:\tcall   QWORD PTR [rax+rcx*8+0x77a8]\n   0x000000000008a3d6 <+642>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a3da <+646>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3de <+650>:\tjbe    0x8a4d8 <main+900>\n   0x000000000008a3e4 <+656>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a3e7 <+659>:\tshr    ecx,0xc\n   0x000000000008a3ea <+662>:\tmov    rdi,rax\n   0x000000000008a3ed <+665>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3f1 <+669>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a3f4 <+672>:\ttest   al,0x10\n   0x000000000008a3f6 <+674>:\tjne    0x8a44e <main+762>\n   0x000000000008a3fc <+680>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a400 <+684>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a403 <+687>:\tshr    ecx,0xc\n   0x000000000008a406 <+690>:\tmov    rdi,rax\n   0x000000000008a409 <+693>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a40d <+697>:\tcall   QWORD PTR [rax+rcx*8-0x80]\n   0x000000000008a411 <+701>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a415 <+705>:\tmov    r10d,0x4\n   0x000000000008a41b <+711>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a41f <+715>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a424 <+720>:\tmov    r11,QWORD PTR [r15+0x1887]\n   0x000000000008a42b <+727>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a42f <+731>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a433 <+735>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a437 <+739>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a43b <+743>:\tcall   0x5864c <_StringBase._interpolate>\n   0x000000000008a440 <+748>:\tmov    rdi,rax\n   0x000000000008a443 <+751>:\tcall   0x8a5b8 <printToConsole>\n   0x000000000008a448 <+756>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a44c <+760>:\tjmp    0x8a3da <main+646>\n   0x000000000008a44e <+762>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a452 <+766>:\tmov    rdi,rax\n   0x000000000008a455 <+769>:\tmov    rsi,QWORD PTR [r15+0x185f]\n   0x000000000008a45c <+776>:\tcall   0x6d330 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008a461 <+781>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a465 <+785>:\tmov    rcx,QWORD PTR [rdi+0x17]\n   0x000000000008a469 <+789>:\tcmp    rcx,rax\n   0x000000000008a46c <+792>:\tjne    0x8a476 <main+802>\n   0x000000000008a472 <+798>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a476 <+802>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a47a <+806>:\tmov    rdx,QWORD PTR [rsp]\n   0x000000000008a47e <+810>:\tmov    rcx,QWORD PTR [r15+0x188f]\n   0x000000000008a485 <+817>:\tmov    rbx,QWORD PTR [r15+0x1897]\n   0x000000000008a48c <+824>:\tcall   rcx\n   0x000000000008a48e <+826>:\tmov    rdi,QWORD PTR [r15+0x189f]\n   0x000000000008a495 <+833>:\tcall   0x8a5b8 <printToConsole>\n   0x000000000008a49a <+838>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a49e <+842>:\tcall   0x827c8 <_LinkedHashMapMixin.keys>\n   0x000000000008a4a3 <+847>:\tmov    rbx,QWORD PTR [r15+0x18a7]\n   0x000000000008a4aa <+854>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a4ae <+858>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a4b2 <+862>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a4b7 <+867>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4bb <+871>:\tmov    rsi,rax\n   0x000000000008a4be <+874>:\tcall   0x8a4e4 <Iterable.forEach>\n   0x000000000008a4c3 <+879>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a4c7 <+883>:\tmov    rsp,rbp\n   0x000000000008a4ca <+886>:\tpop    rbp\n   0x000000000008a4cb <+887>:\tret\n   0x000000000008a4cc <+888>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4d3 <+895>:\tjmp    0x8a166 <main+18>\n   0x000000000008a4d8 <+900>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4df <+907>:\tjmp    0x8a3e4 <main+656>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "associative-array-iteration.dart",
  "functions": [
    {
      "name": "main",
      "source": "main(){\n\tvar fruits = {\n\t\t'apples':  'red',\n\t\t'oranges': 'orange',\n\t\t'bananas': 'yellow',\n\t\t'pears':   'green',\n\t\t'plums':   'purple'\n\t};\n\t\n\tprint('Key Value pairs:');\n\tfruits.forEach( (fruits, color) => print( '$fruits are $color' ) );\n\t\n\tprint('\\nKeys only:');\n\tfruits.keys.forEach( ( key ) => print( key ) );\n\t\n\tprint('\\nValues only:');\n\tfruits.values.forEach( ( value ) => print( value ) );\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x20\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a2c8 <main+372>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0x14\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a180 <+44>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a187 <+51>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a18b <+55>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a192 <+62>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a196 <+66>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a19d <+73>:\tmov    QWORD PTR [rax+0x2f],r11\n   0x000000000008a1a1 <+77>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a1a8 <+84>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000008a1ac <+88>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a1b3 <+95>:\tmov    QWORD PTR [rax+0x3f],r11\n   0x000000000008a1b7 <+99>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a1be <+106>:\tmov    QWORD PTR [rax+0x47],r11\n   0x000000000008a1c2 <+110>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008a1c9 <+117>:\tmov    QWORD PTR [rax+0x4f],r11\n   0x000000000008a1cd <+121>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a1d4 <+128>:\tmov    QWORD PTR [rax+0x57],r11\n   0x000000000008a1d8 <+132>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a1df <+139>:\tmov    QWORD PTR [rax+0x5f],r11\n   0x000000000008a1e3 <+143>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x000000000008a1ea <+150>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a1ef <+155>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a1f3 <+159>:\tcall   0x65e6c <new Map._fromLiteral>\n   0x000000000008a1f8 <+164>:\tmov    rdi,QWORD PTR [r15+0x184f]\n   0x000000000008a1ff <+171>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a203 <+175>:\tcall   0x8a3ec <printToConsole>\n   0x000000000008a208 <+180>:\tmov    rbx,QWORD PTR [r15+0x1857]\n   0x000000000008a20f <+187>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a213 <+191>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a218 <+196>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a21c <+200>:\tmov    rsi,rax\n   0x000000000008a21f <+203>:\tcall   0x82948 <_LinkedHashMapMixin.forEach>\n   0x000000000008a224 <+208>:\tmov    rdi,QWORD PTR [r15+0x185f]\n   0x000000000008a22b <+215>:\tcall   0x8a3ec <printToConsole>\n   0x000000000008a230 <+220>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a234 <+224>:\tcall   0x827c8 <_LinkedHashMapMixin.keys>\n   0x000000000008a239 <+229>:\tmov    rbx,QWORD PTR [r15+0x1867]\n   0x000000000008a240 <+236>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a244 <+240>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a248 <+244>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a24d <+249>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a251 <+253>:\tmov    rsi,rax\n   0x000000000008a254 <+256>:\tcall   0x8a30c <Iterable.forEach>\n   0x000000000008a259 <+261>:\tmov    rdi,QWORD PTR [r15+0x186f]\n   0x000000000008a260 <+268>:\tcall   0x8a3ec <printToConsole>\n   0x000000000008a265 <+273>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a269 <+277>:\tmov    rdx,QWORD PTR [rax+0x7]\n   0x000000000008a26d <+281>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a271 <+285>:\tmov    rbx,QWORD PTR [r15+0x159f]\n   0x000000000008a278 <+292>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a27c <+296>:\tcmp    rdx,rax\n   0x000000000008a27f <+299>:\tje     0x8a28c <main+312>\n   0x000000000008a281 <+301>:\tmov    r11,QWORD PTR [r15+0x38f]\n   0x000000000008a288 <+308>:\tcall   QWORD PTR [r11+0x7]\n   0x000000000008a28c <+312>:\tmov    rdx,rax\n   0x000000000008a28f <+315>:\tcall   0x6ab48 <new _CompactValuesIterable>\n   0x000000000008a294 <+320>:\tmov    rcx,rax\n   0x000000000008a297 <+323>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a29b <+327>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a29f <+331>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008a2a3 <+335>:\tmov    rbx,QWORD PTR [r15+0x1877]\n   0x000000000008a2aa <+342>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a2ae <+346>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a2b3 <+351>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a2b7 <+355>:\tmov    rsi,rax\n   0x000000000008a2ba <+358>:\tcall   0x8a30c <Iterable.forEach>\n   0x000000000008a2bf <+363>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a2c3 <+367>:\tmov    rsp,rbp\n   0x000000000008a2c6 <+370>:\tpop    rbp\n   0x000000000008a2c7 <+371>:\tret\n   0x000000000008a2c8 <+372>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2cf <+379>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "associative-array-merging.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n\tvar base = {\n\t\t'name':   'Rocket Skates',\n\t\t'price':  12.75,\n\t\t'color':  'yellow'\n\t};\n\n\tvar newData = {\n\t\t'price': 15.25,\n\t\t'color': 'red',\n\t\t'year':  1974\n\t};\n\n\tvar updated = Map.from( base ) // create new Map from base\n\t\t..addAll( newData ); // use cascade operator to add all new data\n\t\n\tassert( base.toString()    == '{name: Rocket Skates, price: 12.75, color: yellow}' );\n\tassert( updated.toString() == '{name: Rocket Skates, price: 15.25, color: red, year: 1974}');\n\n\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a2fc <+0>:\tpush   rbp\n   0x000000000008a2fd <+1>:\tmov    rbp,rsp\n   0x000000000008a300 <+4>:\tsub    rsp,0x18\n   0x000000000008a304 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a308 <+12>:\tjbe    0x8a401 <main+261>\n   0x000000000008a30e <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a312 <+22>:\tmov    r10d,0xc\n   0x000000000008a318 <+28>:\tcall   0x84e14 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a31d <+33>:\tmov    r11,QWORD PTR [r15+0x17e7]\n   0x000000000008a324 <+40>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a328 <+44>:\tmov    r11,QWORD PTR [r15+0x17ef]\n   0x000000000008a32f <+51>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a333 <+55>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a33a <+62>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a33e <+66>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a345 <+73>:\tmov    QWORD PTR [rax+0x2f],r11\n   0x000000000008a349 <+77>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a350 <+84>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000008a354 <+88>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a35b <+95>:\tmov    QWORD PTR [rax+0x3f],r11\n   0x000000000008a35f <+99>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a366 <+106>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a36b <+111>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a36f <+115>:\tcall   0x66014 <new Map._fromLiteral>\n   0x000000000008a374 <+120>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a378 <+124>:\tmov    r10d,0xc\n   0x000000000008a37e <+130>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a382 <+134>:\tcall   0x84e14 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a387 <+139>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a38e <+146>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a392 <+150>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a399 <+157>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a39d <+161>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a3a4 <+168>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a3a8 <+172>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a3af <+179>:\tmov    QWORD PTR [rax+0x2f],r11\n   0x000000000008a3b3 <+183>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008a3ba <+190>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000008a3be <+194>:\tmov    QWORD PTR [rax+0x3f],0xf6c\n   0x000000000008a3c6 <+202>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a3cd <+209>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a3d2 <+214>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a3d6 <+218>:\tcall   0x66014 <new Map._fromLiteral>\n   0x000000000008a3db <+223>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a3df <+227>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a3e3 <+231>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a3e7 <+235>:\tcall   0x713b8 <new LinkedHashMap.from>\n   0x000000000008a3ec <+240>:\tmov    rdi,rax\n   0x000000000008a3ef <+243>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a3f3 <+247>:\tcall   0x8a410 <_Map.addAll>\n   0x000000000008a3f8 <+252>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a3fc <+256>:\tmov    rsp,rbp\n   0x000000000008a3ff <+259>:\tpop    rbp\n   0x000000000008a400 <+260>:\tret\n   0x000000000008a401 <+261>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a408 <+268>:\tjmp    0x8a30e <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "averages-arithmetic-mean.dart",
  "functions": [
    {
      "name": "mean",
      "source": "num mean(List<num> l) => l.reduce((num p, num n) => p + n) / l.length;",
      "assembly": "Dump of assembler code for function mean:\n   0x000000000008a6e0 <+0>:\tpush   rbp\n   0x000000000008a6e1 <+1>:\tmov    rbp,rsp\n   0x000000000008a6e4 <+4>:\tsub    rsp,0x18\n   0x000000000008a6e8 <+8>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a6ec <+12>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a6f0 <+16>:\tjbe    0x8a74b <mean+107>\n   0x000000000008a6f6 <+22>:\tmov    rbx,QWORD PTR [r15+0x1847]\n   0x000000000008a6fd <+29>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a701 <+33>:\tcall   0x84498 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a706 <+38>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a70a <+42>:\tmov    rsi,rax\n   0x000000000008a70d <+45>:\tcall   0x8a754 <ListBase.reduce>\n   0x000000000008a712 <+50>:\tmov    rcx,rax\n   0x000000000008a715 <+53>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a719 <+57>:\tmov    rdx,QWORD PTR [rax+0xf]\n   0x000000000008a71d <+61>:\ttest   cl,0x1\n   0x000000000008a720 <+64>:\tmov    eax,0x3c\n   0x000000000008a725 <+69>:\tje     0x8a72d <mean+77>\n   0x000000000008a727 <+71>:\tmov    eax,DWORD PTR [rcx-0x1]\n   0x000000000008a72a <+74>:\tshr    eax,0xc\n   0x000000000008a72d <+77>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008a732 <+82>:\tmov    QWORD PTR [rsp],rdx\n   0x000000000008a736 <+86>:\tmov    rcx,rax\n   0x000000000008a739 <+89>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a73d <+93>:\tcall   QWORD PTR [rax+rcx*8-0x48]\n   0x000000000008a741 <+97>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008a746 <+102>:\tmov    rsp,rbp\n   0x000000000008a749 <+105>:\tpop    rbp\n   0x000000000008a74a <+106>:\tret\n   0x000000000008a74b <+107>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a752 <+114>:\tjmp    0x8a6f6 <mean+22>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main(){\n  print(mean([1,2,3,4,5,6,7]));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a564 <+0>:\tpush   rbp\n   0x000000000008a565 <+1>:\tmov    rbp,rsp\n   0x000000000008a568 <+4>:\tsub    rsp,0x8\n   0x000000000008a56c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a570 <+12>:\tjbe    0x8a5f9 <main+149>\n   0x000000000008a576 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a57a <+22>:\tmov    r10d,0xe\n   0x000000000008a580 <+28>:\tcall   0x8507c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a585 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a589 <+37>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a591 <+45>:\tmov    QWORD PTR [rax+0x1f],0x4\n   0x000000000008a599 <+53>:\tmov    QWORD PTR [rax+0x27],0x6\n   0x000000000008a5a1 <+61>:\tmov    QWORD PTR [rax+0x2f],0x8\n   0x000000000008a5a9 <+69>:\tmov    QWORD PTR [rax+0x37],0xa\n   0x000000000008a5b1 <+77>:\tmov    QWORD PTR [rax+0x3f],0xc\n   0x000000000008a5b9 <+85>:\tmov    QWORD PTR [rax+0x47],0xe\n   0x000000000008a5c1 <+93>:\tmov    rdx,QWORD PTR [r15+0x17f7]\n   0x000000000008a5c8 <+100>:\tcall   0x8413c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a5cd <+105>:\tmov    rcx,rax\n   0x000000000008a5d0 <+108>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a5d4 <+112>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a5d8 <+116>:\tmov    QWORD PTR [rcx+0xf],0xe\n   0x000000000008a5e0 <+124>:\tmov    rdi,rcx\n   0x000000000008a5e3 <+127>:\tcall   0x8a6e0 <mean>\n   0x000000000008a5e8 <+132>:\tmovaps xmm1,xmm0\n   0x000000000008a5eb <+135>:\tcall   0x8a608 <print>\n   0x000000000008a5f0 <+140>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a5f4 <+144>:\tmov    rsp,rbp\n   0x000000000008a5f7 <+147>:\tpop    rbp\n   0x000000000008a5f8 <+148>:\tret\n   0x000000000008a5f9 <+149>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a600 <+156>:\tjmp    0x8a576 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "babbage-problem.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n\tvar x = 0;\n\twhile((x*x)% 1000000 != 269696)\n\t{\tx++;}\n\t\n\tprint('$x');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x8\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1f7 <main+163>\n   0x000000000008a166 <+18>:\txor    esi,esi\n   0x000000000008a168 <+20>:\tmov    ecx,0xf4240\n   0x000000000008a16d <+25>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a171 <+29>:\tjbe    0x8a203 <main+175>\n   0x000000000008a177 <+35>:\tmov    rax,rsi\n   0x000000000008a17a <+38>:\timul   rax,rsi\n   0x000000000008a17e <+42>:\tmov    r11,rax\n   0x000000000008a181 <+45>:\tmov    rax,QWORD PTR [r15+0x17f7]\n   0x000000000008a188 <+52>:\timul   r11\n   0x000000000008a18b <+55>:\tsar    rdx,0x12\n   0x000000000008a18f <+59>:\tmov    rax,rdx\n   0x000000000008a192 <+62>:\tshr    rdx,0x3f\n   0x000000000008a196 <+66>:\tadd    rdx,rax\n   0x000000000008a199 <+69>:\tmov    rax,r11\n   0x000000000008a19c <+72>:\tmov    r11d,0xf4240\n   0x000000000008a1a2 <+78>:\timul   rdx,r11\n   0x000000000008a1a6 <+82>:\tsub    rax,rdx\n   0x000000000008a1a9 <+85>:\tjge    0x8a1b2 <main+94>\n   0x000000000008a1af <+91>:\tadd    rax,r11\n   0x000000000008a1b2 <+94>:\tmov    rdx,rax\n   0x000000000008a1b5 <+97>:\tcmp    rdx,0x41d80\n   0x000000000008a1bc <+104>:\tje     0x8a1c8 <main+116>\n   0x000000000008a1c2 <+110>:\tadd    rsi,0x1\n   0x000000000008a1c6 <+114>:\tjmp    0x8a16d <main+25>\n   0x000000000008a1c8 <+116>:\tmov    rax,rsi\n   0x000000000008a1cb <+119>:\tadd    rax,rax\n   0x000000000008a1ce <+122>:\tjno    0x8a1dd <main+137>\n   0x000000000008a1d4 <+128>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1d9 <+133>:\tmov    QWORD PTR [rax+0x7],rsi\n   0x000000000008a1dd <+137>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a1e1 <+141>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a1e6 <+146>:\tmov    rdi,rax\n   0x000000000008a1e9 <+149>:\tcall   0x8a210 <print>\n   0x000000000008a1ee <+154>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1f2 <+158>:\tmov    rsp,rbp\n   0x000000000008a1f5 <+161>:\tpop    rbp\n   0x000000000008a1f6 <+162>:\tret\n   0x000000000008a1f7 <+163>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1fe <+170>:\tjmp    0x8a166 <main+18>\n   0x000000000008a203 <+175>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a20a <+182>:\tjmp    0x8a177 <main+35>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "base64-decode-data.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var encoded = \"VG8gZXJyIGlzIGh1bWFuLCBidXQgdG8gcmVhbGx5IGZvdWwgdGhpbmdzIHVwIHlvdSBuZWVkIGEgY29tcHV0ZXIuCiAgICAtLSBQYXVsIFIuIEVocmxpY2g=\";\n  var decoded = utf8.decode(base64.decode(encoded));\n  print(decoded);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a195 <main+65>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x4ff]\n   0x000000000008a169 <+21>:\tmov    rsi,QWORD PTR [r15+0x17f7]\n   0x000000000008a170 <+28>:\tcall   0x8a23c <Base64Codec.decode>\n   0x000000000008a175 <+33>:\tmov    rsi,rax\n   0x000000000008a178 <+36>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a17f <+43>:\tcall   0x6446c <Utf8Decoder.convert>\n   0x000000000008a184 <+48>:\tmov    rdi,rax\n   0x000000000008a187 <+51>:\tcall   0x8a1a0 <print>\n   0x000000000008a18c <+56>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a190 <+60>:\tmov    rsp,rbp\n   0x000000000008a193 <+63>:\tpop    rbp\n   0x000000000008a194 <+64>:\tret\n   0x000000000008a195 <+65>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a19c <+72>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "burrows-wheeler-transform.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  List<String> tests = [\n    \"banana\",\n    \"appellee\",\n    \"dogwood\",\n    \"TO BE OR NOT TO BE OR WANT TO BE OR NOT?\",\n    \"SIX.MIXED.PIXIES.SIFT.SIXTY.PIXIE.DUST.BOXES\",\n    \"\\u0002ABC\\u0003\"\n  ];\n  for (String test in tests) {\n    print(makePrintable(test));\n    stdout.write(\" --> \");\n    String t = \"\";\n    try {\n      t = bwt(test);\n      print(makePrintable(t));\n    } catch (e) {\n      print(\"ERROR: ${e.toString()}\");\n    }\n    String r = ibwt(t);\n    print(\" --> $r\\n\");\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000091774 <+0>:\tpush   rbp\n   0x0000000000091775 <+1>:\tmov    rbp,rsp\n   0x0000000000091778 <+4>:\tsub    rsp,0x98\n   0x000000000009177f <+11>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091783 <+15>:\tjbe    0x91afb <main+903>\n   0x0000000000091789 <+21>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000009178d <+25>:\tmov    r10d,0xc\n   0x0000000000091793 <+31>:\tcall   0x8c288 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000091798 <+36>:\tmov    QWORD PTR [rbp-0x70],rax\n   0x000000000009179c <+40>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x00000000000917a3 <+47>:\tmov    QWORD PTR [rax+0x17],r11\n   0x00000000000917a7 <+51>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x00000000000917ae <+58>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x00000000000917b2 <+62>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x00000000000917b9 <+69>:\tmov    QWORD PTR [rax+0x27],r11\n   0x00000000000917bd <+73>:\tmov    r11,QWORD PTR [r15+0x185f]\n   0x00000000000917c4 <+80>:\tmov    QWORD PTR [rax+0x2f],r11\n   0x00000000000917c8 <+84>:\tmov    r11,QWORD PTR [r15+0x1867]\n   0x00000000000917cf <+91>:\tmov    QWORD PTR [rax+0x37],r11\n   0x00000000000917d3 <+95>:\tmov    r11,QWORD PTR [r15+0x186f]\n   0x00000000000917da <+102>:\tmov    QWORD PTR [rax+0x3f],r11\n   0x00000000000917de <+106>:\tmov    rdx,QWORD PTR [r15+0xaf]\n   0x00000000000917e5 <+113>:\tcall   0x8b348 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x00000000000917ea <+118>:\tmov    rcx,rax\n   0x00000000000917ed <+121>:\tmov    rax,QWORD PTR [rbp-0x70]\n   0x00000000000917f1 <+125>:\tmov    QWORD PTR [rbp-0x78],rcx\n   0x00000000000917f5 <+129>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x00000000000917f9 <+133>:\tmov    QWORD PTR [rcx+0xf],0xc\n   0x0000000000091801 <+141>:\tmov    rdx,QWORD PTR [r15+0xaf]\n   0x0000000000091808 <+148>:\tcall   0x57ec0 <new ListIterator>\n   0x000000000009180d <+153>:\tmov    rdi,rax\n   0x0000000000091810 <+156>:\tmov    rsi,QWORD PTR [rbp-0x78]\n   0x0000000000091814 <+160>:\tmov    QWORD PTR [rbp-0x88],rdi\n   0x000000000009181b <+167>:\tmov    QWORD PTR [rdi+0xf],rsi\n   0x000000000009181f <+171>:\tmov    eax,0x6\n   0x0000000000091824 <+176>:\tmov    QWORD PTR [rdi+0x17],rax\n   0x0000000000091828 <+180>:\txor    eax,eax\n   0x000000000009182a <+182>:\tmov    QWORD PTR [rdi+0x1f],rax\n   0x000000000009182e <+186>:\tmov    r8,QWORD PTR [r14+0x70]\n   0x0000000000091832 <+190>:\tmov    QWORD PTR [rbp-0x80],r8\n   0x0000000000091836 <+194>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009183a <+198>:\tjbe    0x91b07 <main+915>\n   0x0000000000091840 <+204>:\tmov    rax,QWORD PTR [rsi+0xf]\n   0x0000000000091844 <+208>:\tsar    rax,1\n   0x0000000000091847 <+211>:\tcmp    rax,0x6\n   0x000000000009184b <+215>:\tjne    0x91adf <main+875>\n   0x0000000000091851 <+221>:\tmov    rcx,QWORD PTR [rdi+0x1f]\n   0x0000000000091855 <+225>:\tcmp    rcx,rax\n   0x0000000000091858 <+228>:\tjge    0x91acc <main+856>\n   0x000000000009185e <+234>:\tmov    rbx,rcx\n   0x0000000000091861 <+237>:\tcmp    rbx,rax\n   0x0000000000091864 <+240>:\tjae    0x91b13 <main+927>\n   0x000000000009186a <+246>:\tmov    rax,QWORD PTR [rsi+0x17]\n   0x000000000009186e <+250>:\tmov    rbx,QWORD PTR [rax+rcx*8+0x17]\n   0x0000000000091873 <+255>:\tmov    rax,rbx\n   0x0000000000091876 <+258>:\tmov    QWORD PTR [rbp-0x70],rbx\n   0x000000000009187a <+262>:\tmov    QWORD PTR [rdi+0x27],rax\n   0x000000000009187e <+266>:\ttest   al,0x1\n   0x0000000000091880 <+268>:\tje     0x91899 <main+293>\n   0x0000000000091882 <+270>:\tmov    r11b,BYTE PTR [rdi-0x1]\n   0x0000000000091886 <+274>:\tshr    r11d,0x2\n   0x000000000009188a <+278>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000009188e <+282>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091892 <+286>:\tje     0x91899 <main+293>\n   0x0000000000091894 <+288>:\tcall   0x8ad99 <stub _iso_stub_WriteBarrierWrappersStub+65>\n   0x0000000000091899 <+293>:\tadd    rcx,0x1\n   0x000000000009189d <+297>:\tmov    QWORD PTR [rdi+0x1f],rcx\n   0x00000000000918a1 <+301>:\tcmp    rbx,QWORD PTR [r14+0x70]\n   0x00000000000918a5 <+305>:\tjne    0x918e6 <main+370>\n   0x00000000000918ab <+311>:\tmov    rax,rbx\n   0x00000000000918ae <+314>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x00000000000918b2 <+318>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x00000000000918b6 <+322>:\ttest   al,0x1\n   0x00000000000918b8 <+324>:\tmov    esi,0x3c\n   0x00000000000918bd <+329>:\tje     0x918c5 <main+337>\n   0x00000000000918bf <+331>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x00000000000918c2 <+334>:\tshr    esi,0xc\n   0x00000000000918c5 <+337>:\tsub    rsi,0x5e\n   0x00000000000918c9 <+341>:\tcmp    rsi,0x1\n   0x00000000000918cd <+345>:\tjbe    0x918e6 <main+370>\n   0x00000000000918d3 <+351>:\tmov    rbx,QWORD PTR [r15+0x10f]\n   0x00000000000918da <+358>:\tmov    r9,QWORD PTR [r15+0x1877]\n   0x00000000000918e1 <+365>:\tcall   0x94a40 <assert type is String>\n   0x00000000000918e6 <+370>:\tmov    rdi,QWORD PTR [rbp-0x70]\n   0x00000000000918ea <+374>:\tmov    rsi,QWORD PTR [r15+0x1887]\n   0x00000000000918f1 <+381>:\tmov    rdx,QWORD PTR [r15+0x188f]\n   0x00000000000918f8 <+388>:\tcall   0x677b0 <_StringBase.replaceAll>\n   0x00000000000918fd <+393>:\tmov    rdi,rax\n   0x0000000000091900 <+396>:\tmov    rsi,QWORD PTR [r15+0x1897]\n   0x0000000000091907 <+403>:\tmov    rdx,QWORD PTR [r15+0x189f]\n   0x000000000009190e <+410>:\tcall   0x677b0 <_StringBase.replaceAll>\n   0x0000000000091913 <+415>:\tmov    rdi,rax\n   0x0000000000091916 <+418>:\tcall   0x93d98 <printToConsole>\n   0x000000000009191b <+423>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000009191f <+427>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x0000000000091926 <+434>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000009192a <+438>:\tjne    0x9193c <main+456>\n   0x0000000000091930 <+444>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000091937 <+451>:\tcall   0x8a7e4 <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000009193c <+456>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000091940 <+460>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000091947 <+467>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000009194b <+471>:\tjne    0x9195d <main+489>\n   0x0000000000091951 <+477>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000091958 <+484>:\tcall   0x8a79c <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000009195d <+489>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000091961 <+493>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x0000000000091968 <+500>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000009196c <+504>:\tjne    0x9197e <main+522>\n   0x0000000000091972 <+510>:\tmov    rdx,QWORD PTR [r15+0x18a7]\n   0x0000000000091979 <+517>:\tcall   0x8a79c <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000009197e <+522>:\tmov    rdi,rax\n   0x0000000000091981 <+525>:\tcall   0x938f4 <_StdSink._write>\n   0x0000000000091986 <+530>:\tmov    rdi,QWORD PTR [rbp-0x70]\n   0x000000000009198a <+534>:\tcall   0x93658 <bwt>\n   0x000000000009198f <+539>:\tmov    rdi,rax\n   0x0000000000091992 <+542>:\tmov    rsi,QWORD PTR [r15+0x1887]\n   0x0000000000091999 <+549>:\tmov    rdx,QWORD PTR [r15+0x188f]\n   0x00000000000919a0 <+556>:\tmov    QWORD PTR [rbp-0x90],rax\n   0x00000000000919a7 <+563>:\tcall   0x677b0 <_StringBase.replaceAll>\n   0x00000000000919ac <+568>:\tmov    rdi,rax\n   0x00000000000919af <+571>:\tmov    rsi,QWORD PTR [r15+0x1897]\n   0x00000000000919b6 <+578>:\tmov    rdx,QWORD PTR [r15+0x189f]\n   0x00000000000919bd <+585>:\tcall   0x677b0 <_StringBase.replaceAll>\n   0x00000000000919c2 <+590>:\tmov    rdi,rax\n   0x00000000000919c5 <+593>:\tcall   0x93d98 <printToConsole>\n   0x00000000000919ca <+598>:\tmov    rdi,QWORD PTR [rbp-0x90]\n   0x00000000000919d1 <+605>:\tmov    r8,QWORD PTR [rbp-0x80]\n   0x00000000000919d5 <+609>:\tjmp    0x91a6d <main+761>\n   0x00000000000919da <+614>:\tlea    rsp,[rbp-0x98]\n   0x00000000000919e1 <+621>:\tmov    QWORD PTR [rbp-0x70],rax\n   0x00000000000919e5 <+625>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x00000000000919e9 <+629>:\tmov    r10d,0x4\n   0x00000000000919ef <+635>:\tcall   0x8c288 <stub _iso_stub_AllocateArrayStub>\n   0x00000000000919f4 <+640>:\tmov    QWORD PTR [rbp-0x80],rax\n   0x00000000000919f8 <+644>:\tmov    r11,QWORD PTR [r15+0x18af]\n   0x00000000000919ff <+651>:\tmov    QWORD PTR [rax+0x17],r11\n   0x0000000000091a03 <+655>:\tmov    rdx,QWORD PTR [rbp-0x70]\n   0x0000000000091a07 <+659>:\ttest   dl,0x1\n   0x0000000000091a0a <+662>:\tmov    ecx,0x3c\n   0x0000000000091a0f <+667>:\tje     0x91a17 <main+675>\n   0x0000000000091a11 <+669>:\tmov    ecx,DWORD PTR [rdx-0x1]\n   0x0000000000091a14 <+672>:\tshr    ecx,0xc\n   0x0000000000091a17 <+675>:\tmov    QWORD PTR [rsp],rdx\n   0x0000000000091a1b <+679>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000091a1f <+683>:\tcall   QWORD PTR [rax+rcx*8+0x22d0]\n   0x0000000000091a26 <+690>:\tmov    rdx,QWORD PTR [rbp-0x80]\n   0x0000000000091a2a <+694>:\tlea    r13,[rdx+0x1f]\n   0x0000000000091a2e <+698>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000091a32 <+702>:\ttest   al,0x1\n   0x0000000000091a34 <+704>:\tje     0x91a4d <main+729>\n   0x0000000000091a36 <+706>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000091a3a <+710>:\tshr    r11d,0x2\n   0x0000000000091a3e <+714>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091a42 <+718>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091a46 <+722>:\tje     0x91a4d <main+729>\n   0x0000000000091a48 <+724>:\tcall   0x8a8a0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x0000000000091a4d <+729>:\tmov    r11,QWORD PTR [rbp-0x80]\n   0x0000000000091a51 <+733>:\tmov    QWORD PTR [rsp],r11\n   0x0000000000091a55 <+737>:\tcall   0x5ce24 <_StringBase._interpolate>\n   0x0000000000091a5a <+742>:\tmov    rdi,rax\n   0x0000000000091a5d <+745>:\tcall   0x93d98 <printToConsole>\n   0x0000000000091a62 <+750>:\tmov    rax,QWORD PTR [rbp-0x68]\n   0x0000000000091a66 <+754>:\tmov    rdi,rax\n   0x0000000000091a69 <+757>:\tmov    r8,QWORD PTR [rbp-0x70]\n   0x0000000000091a6d <+761>:\tmov    QWORD PTR [rbp-0x70],r8\n   0x0000000000091a71 <+765>:\tcall   0x91b18 <ibwt>\n   0x0000000000091a76 <+770>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000091a7a <+774>:\tmov    r10d,0x6\n   0x0000000000091a80 <+780>:\tmov    QWORD PTR [rbp-0x80],rax\n   0x0000000000091a84 <+784>:\tcall   0x8c288 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000091a89 <+789>:\tmov    r11,QWORD PTR [r15+0x18b7]\n   0x0000000000091a90 <+796>:\tmov    QWORD PTR [rax+0x17],r11\n   0x0000000000091a94 <+800>:\tmov    rcx,QWORD PTR [rbp-0x80]\n   0x0000000000091a98 <+804>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x0000000000091a9c <+808>:\tmov    r11,QWORD PTR [r15+0x18bf]\n   0x0000000000091aa3 <+815>:\tmov    QWORD PTR [rax+0x27],r11\n   0x0000000000091aa7 <+819>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000091aab <+823>:\tcall   0x5ce24 <_StringBase._interpolate>\n   0x0000000000091ab0 <+828>:\tmov    rdi,rax\n   0x0000000000091ab3 <+831>:\tcall   0x93d98 <printToConsole>\n   0x0000000000091ab8 <+836>:\tmov    r8,QWORD PTR [rbp-0x70]\n   0x0000000000091abc <+840>:\tmov    rdi,QWORD PTR [rbp-0x88]\n   0x0000000000091ac3 <+847>:\tmov    rsi,QWORD PTR [rbp-0x78]\n   0x0000000000091ac7 <+851>:\tjmp    0x91832 <main+190>\n   0x0000000000091acc <+856>:\tmov    rax,rdi\n   0x0000000000091acf <+859>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x0000000000091ad3 <+863>:\tmov    QWORD PTR [rax+0x27],rcx\n   0x0000000000091ad7 <+867>:\tmov    rax,rcx\n   0x0000000000091ada <+870>:\tmov    rsp,rbp\n   0x0000000000091add <+873>:\tpop    rbp\n   0x0000000000091ade <+874>:\tret\n   0x0000000000091adf <+875>:\tmov    rax,rsi\n   0x0000000000091ae2 <+878>:\tcall   0x57334 <new ConcurrentModificationError>\n   0x0000000000091ae7 <+883>:\tmov    rcx,rax\n   0x0000000000091aea <+886>:\tmov    rax,QWORD PTR [rbp-0x78]\n   0x0000000000091aee <+890>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x0000000000091af2 <+894>:\tmov    rax,rcx\n   0x0000000000091af5 <+897>:\tcall   0x8a880 <stub _iso_stub_ThrowStub>\n   0x0000000000091afa <+902>:\tint3\n   0x0000000000091afb <+903>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091b02 <+910>:\tjmp    0x91789 <main+21>\n   0x0000000000091b07 <+915>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091b0e <+922>:\tjmp    0x91840 <main+204>\n   0x0000000000091b13 <+927>:\tcall   0x8c7cc <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "bwt",
      "source": "String bwt(String s) {\n  if (s.contains(STX) || s.contains(ETX)) {\n    throw FormatException(\"String cannot contain STX or ETX\");\n  }\n\n  String ss = STX + s + ETX;\n  List<String> table = [];\n  for (int i = 0; i < ss.length; i++) {\n    String before = ss.substring(i);\n    String after = ss.substring(0, i);\n    table.add(before + after);\n  }\n  table.sort();\n\n  return table.map((str) => str[str.length - 1]).join();\n}",
      "assembly": "Dump of assembler code for function bwt:\n   0x0000000000093658 <+0>:\tpush   rbp\n   0x0000000000093659 <+1>:\tmov    rbp,rsp\n   0x000000000009365c <+4>:\tsub    rsp,0x48\n   0x0000000000093660 <+8>:\tmov    rax,rdi\n   0x0000000000093663 <+11>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x0000000000093667 <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009366b <+19>:\tjbe    0x93895 <bwt+573>\n   0x0000000000093671 <+25>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x0000000000093674 <+28>:\tshr    ecx,0xc\n   0x0000000000093677 <+31>:\tmov    rdi,rax\n   0x000000000009367a <+34>:\tmov    rsi,QWORD PTR [r15+0x1887]\n   0x0000000000093681 <+41>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x0000000000093688 <+48>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000009368c <+52>:\tcall   QWORD PTR [rax+rcx*8-0x70]\n   0x0000000000093690 <+56>:\ttest   al,0x10\n   0x0000000000093692 <+58>:\tje     0x93879 <bwt+545>\n   0x0000000000093698 <+64>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000009369c <+68>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000009369f <+71>:\tshr    ecx,0xc\n   0x00000000000936a2 <+74>:\tmov    rdi,rax\n   0x00000000000936a5 <+77>:\tmov    rsi,QWORD PTR [r15+0x1897]\n   0x00000000000936ac <+84>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x00000000000936b3 <+91>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x00000000000936b7 <+95>:\tcall   QWORD PTR [rax+rcx*8-0x70]\n   0x00000000000936bb <+99>:\ttest   al,0x10\n   0x00000000000936bd <+101>:\tje     0x93879 <bwt+545>\n   0x00000000000936c3 <+107>:\tmov    r11,QWORD PTR [r15+0x1887]\n   0x00000000000936ca <+114>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x00000000000936cf <+119>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x00000000000936d3 <+123>:\tmov    QWORD PTR [rsp],r11\n   0x00000000000936d7 <+127>:\tcall   0x60aa0 <_StringBase.+>\n   0x00000000000936dc <+132>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x00000000000936e1 <+137>:\tmov    r11,QWORD PTR [r15+0x1897]\n   0x00000000000936e8 <+144>:\tmov    QWORD PTR [rsp],r11\n   0x00000000000936ec <+148>:\tcall   0x60aa0 <_StringBase.+>\n   0x00000000000936f1 <+153>:\tmov    rdi,QWORD PTR [r15+0xaf]\n   0x00000000000936f8 <+160>:\txor    esi,esi\n   0x00000000000936fa <+162>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x00000000000936fe <+166>:\tcall   0x56bfc <new _GrowableList>\n   0x0000000000093703 <+171>:\tmov    rcx,rax\n   0x0000000000093706 <+174>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000009370a <+178>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000009370e <+182>:\tmov    rdx,QWORD PTR [rax+0x7]\n   0x0000000000093712 <+186>:\tmov    rbx,rdx\n   0x0000000000093715 <+189>:\tsar    rbx,1\n   0x0000000000093718 <+192>:\tmov    QWORD PTR [rbp-0x18],rbx\n   0x000000000009371c <+196>:\txor    r8d,r8d\n   0x000000000009371f <+199>:\tmov    QWORD PTR [rbp-0x10],r8\n   0x0000000000093723 <+203>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000093727 <+207>:\tjbe    0x938a1 <bwt+585>\n   0x000000000009372d <+213>:\tcmp    r8,rbx\n   0x0000000000093730 <+216>:\tjge    0x9382e <bwt+470>\n   0x0000000000093736 <+222>:\tmov    rdi,r8\n   0x0000000000093739 <+225>:\tmov    rdx,rbx\n   0x000000000009373c <+228>:\tmov    rsi,QWORD PTR [r14+0x70]\n   0x0000000000093740 <+232>:\tmov    r10,QWORD PTR [r15+0x1b7]\n   0x0000000000093747 <+239>:\tcall   0x53660 <RangeError.checkValidRange>\n   0x000000000009374c <+244>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000093750 <+248>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x0000000000093754 <+252>:\tmov    rdx,rax\n   0x0000000000093757 <+255>:\tcall   0x60788 <_StringBase._substringUnchecked>\n   0x000000000009375c <+260>:\tmov    rcx,rax\n   0x000000000009375f <+263>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000093763 <+267>:\tmov    QWORD PTR [rbp-0x28],rcx\n   0x0000000000093767 <+271>:\tmov    rsi,rax\n   0x000000000009376a <+274>:\tadd    rsi,rsi\n   0x000000000009376d <+277>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x0000000000093771 <+281>:\txor    edi,edi\n   0x0000000000093773 <+283>:\tmov    r10,QWORD PTR [r15+0x1b7]\n   0x000000000009377a <+290>:\tcall   0x53660 <RangeError.checkValidRange>\n   0x000000000009377f <+295>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000093783 <+299>:\tmov    rdx,rax\n   0x0000000000093786 <+302>:\txor    esi,esi\n   0x0000000000093788 <+304>:\tcall   0x60788 <_StringBase._substringUnchecked>\n   0x000000000009378d <+309>:\tmov    r11,QWORD PTR [rbp-0x28]\n   0x0000000000093791 <+313>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x0000000000093796 <+318>:\tmov    QWORD PTR [rsp],rax\n   0x000000000009379a <+322>:\tcall   0x60aa0 <_StringBase.+>\n   0x000000000009379f <+327>:\tmov    rcx,rax\n   0x00000000000937a2 <+330>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x00000000000937a6 <+334>:\tmov    QWORD PTR [rbp-0x28],rcx\n   0x00000000000937aa <+338>:\tmov    rdx,QWORD PTR [rax+0xf]\n   0x00000000000937ae <+342>:\tmov    rbx,QWORD PTR [rax+0x17]\n   0x00000000000937b2 <+346>:\tmov    rsi,QWORD PTR [rbx+0xf]\n   0x00000000000937b6 <+350>:\tsar    rdx,1\n   0x00000000000937b9 <+353>:\tmov    QWORD PTR [rbp-0x30],rdx\n   0x00000000000937bd <+357>:\tsar    rsi,1\n   0x00000000000937c0 <+360>:\tcmp    rdx,rsi\n   0x00000000000937c3 <+363>:\tjne    0x937d1 <bwt+377>\n   0x00000000000937c9 <+369>:\tmov    rdi,rax\n   0x00000000000937cc <+372>:\tcall   0x57014 <List._growToNextCapacity>\n   0x00000000000937d1 <+377>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x00000000000937d5 <+381>:\tmov    rbx,QWORD PTR [rbp-0x30]\n   0x00000000000937d9 <+385>:\tmov    rax,rbx\n   0x00000000000937dc <+388>:\tadd    rax,0x1\n   0x00000000000937e0 <+392>:\tmov    rdx,rax\n   0x00000000000937e3 <+395>:\tadd    rdx,rdx\n   0x00000000000937e6 <+398>:\tmov    QWORD PTR [rcx+0xf],rdx\n   0x00000000000937ea <+402>:\tmov    rdx,QWORD PTR [rcx+0x17]\n   0x00000000000937ee <+406>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x00000000000937f2 <+410>:\tlea    r13,[rdx+rbx*8+0x17]\n   0x00000000000937f7 <+415>:\tmov    QWORD PTR [r13+0x0],rax\n   0x00000000000937fb <+419>:\ttest   al,0x1\n   0x00000000000937fd <+421>:\tje     0x93816 <bwt+446>\n   0x00000000000937ff <+423>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000093803 <+427>:\tshr    r11d,0x2\n   0x0000000000093807 <+431>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000009380b <+435>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000009380f <+439>:\tje     0x93816 <bwt+446>\n   0x0000000000093811 <+441>:\tcall   0x8a8a0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x0000000000093816 <+446>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000009381a <+450>:\tadd    rax,0x1\n   0x000000000009381e <+454>:\tmov    r8,rax\n   0x0000000000093821 <+457>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000093825 <+461>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x0000000000093829 <+465>:\tjmp    0x9371f <bwt+199>\n   0x000000000009382e <+470>:\tmov    rdi,rcx\n   0x0000000000093831 <+473>:\tcall   0x91d0c <ListBase.sort>\n   0x0000000000093836 <+478>:\tmov    rbx,QWORD PTR [r15+0x190f]\n   0x000000000009383d <+485>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x0000000000093841 <+489>:\tcall   0x8b6a4 <stub _iso_stub_AllocateClosureStub>\n   0x0000000000093846 <+494>:\tmov    r11,QWORD PTR [r15+0xaf]\n   0x000000000009384d <+501>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x0000000000093852 <+506>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x0000000000093856 <+510>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000009385b <+515>:\tmov    QWORD PTR [rsp],rax\n   0x000000000009385f <+519>:\tmov    r10,QWORD PTR [r15+0x57]\n   0x0000000000093863 <+523>:\tcall   0x62320 <ListBase.map>\n   0x0000000000093868 <+528>:\tmov    rdi,rax\n   0x000000000009386b <+531>:\tmov    r10,QWORD PTR [r15+0x7f]\n   0x000000000009386f <+535>:\tcall   0x61fa0 <ListIterable.join>\n   0x0000000000093874 <+540>:\tmov    rsp,rbp\n   0x0000000000093877 <+543>:\tpop    rbp\n   0x0000000000093878 <+544>:\tret\n   0x0000000000093879 <+545>:\tcall   0x611b8 <new FormatException>\n   0x000000000009387e <+550>:\tmov    rcx,rax\n   0x0000000000093881 <+553>:\tmov    rax,QWORD PTR [r15+0x1917]\n   0x0000000000093888 <+560>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000009388c <+564>:\tmov    rax,rcx\n   0x000000000009388f <+567>:\tcall   0x8a880 <stub _iso_stub_ThrowStub>\n   0x0000000000093894 <+572>:\tint3\n   0x0000000000093895 <+573>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009389c <+580>:\tjmp    0x93671 <bwt+25>\n   0x00000000000938a1 <+585>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000938a8 <+592>:\tjmp    0x9372d <bwt+213>\nEnd of assembler dump.\n"
    },
    {
      "name": "ibwt",
      "source": "String ibwt(String r) {\n  int len = r.length;\n  List<String> table = List.filled(len, \"\");\n  for (int j = 0; j < len; ++j) {\n    for (int i = 0; i < len; ++i) {\n      table[i] = r[i] + table[i];\n    }\n    table.sort();\n  }\n  for (String row in table) {\n    if (row.endsWith(ETX)) {\n      return row.substring(1, len - 1);\n    }\n  }\n  return \"\";\n}",
      "assembly": "Dump of assembler code for function ibwt:\n   0x0000000000091b18 <+0>:\tpush   rbp\n   0x0000000000091b19 <+1>:\tmov    rbp,rsp\n   0x0000000000091b1c <+4>:\tsub    rsp,0x40\n   0x0000000000091b20 <+8>:\tmov    rax,rdi\n   0x0000000000091b23 <+11>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x0000000000091b27 <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091b2b <+19>:\tjbe    0x91cd9 <ibwt+449>\n   0x0000000000091b31 <+25>:\tmov    rcx,QWORD PTR [rax+0x7]\n   0x0000000000091b35 <+29>:\tsar    rcx,1\n   0x0000000000091b38 <+32>:\tmov    rsi,rcx\n   0x0000000000091b3b <+35>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x0000000000091b3f <+39>:\tmov    rdi,QWORD PTR [r15+0xaf]\n   0x0000000000091b46 <+46>:\tmov    rdx,QWORD PTR [r15+0xcf]\n   0x0000000000091b4d <+53>:\tcall   0x5c95c <new _List.filled>\n   0x0000000000091b52 <+58>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x0000000000091b56 <+62>:\txor    edx,edx\n   0x0000000000091b58 <+64>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000091b5c <+68>:\tmov    QWORD PTR [rbp-0x20],rdx\n   0x0000000000091b60 <+72>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091b64 <+76>:\tjbe    0x91ce5 <ibwt+461>\n   0x0000000000091b6a <+82>:\tcmp    rdx,rcx\n   0x0000000000091b6d <+85>:\tjge    0x91c3a <ibwt+290>\n   0x0000000000091b73 <+91>:\txor    ebx,ebx\n   0x0000000000091b75 <+93>:\tmov    QWORD PTR [rbp-0x18],rbx\n   0x0000000000091b79 <+97>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091b7d <+101>:\tjbe    0x91cf1 <ibwt+473>\n   0x0000000000091b83 <+107>:\tcmp    rbx,rcx\n   0x0000000000091b86 <+110>:\tjge    0x91c06 <ibwt+238>\n   0x0000000000091b8c <+116>:\tmov    rsi,rbx\n   0x0000000000091b8f <+119>:\tadd    rsi,rsi\n   0x0000000000091b92 <+122>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x0000000000091b96 <+126>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x0000000000091b9b <+131>:\tmov    QWORD PTR [rsp],rsi\n   0x0000000000091b9f <+135>:\tcall   0x5cd18 <_StringBase.[]>\n   0x0000000000091ba4 <+140>:\tmov    rcx,rax\n   0x0000000000091ba7 <+143>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x0000000000091bab <+147>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x0000000000091baf <+151>:\tmov    rbx,QWORD PTR [rdx+rax*8+0x17]\n   0x0000000000091bb4 <+156>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x0000000000091bb9 <+161>:\tmov    QWORD PTR [rsp],rbx\n   0x0000000000091bbd <+165>:\tcall   0x60aa0 <_StringBase.+>\n   0x0000000000091bc2 <+170>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x0000000000091bc6 <+174>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000091bca <+178>:\tlea    r13,[rdx+rcx*8+0x17]\n   0x0000000000091bcf <+183>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000091bd3 <+187>:\ttest   al,0x1\n   0x0000000000091bd5 <+189>:\tje     0x91bee <ibwt+214>\n   0x0000000000091bd7 <+191>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000091bdb <+195>:\tshr    r11d,0x2\n   0x0000000000091bdf <+199>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091be3 <+203>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091be7 <+207>:\tje     0x91bee <ibwt+214>\n   0x0000000000091be9 <+209>:\tcall   0x8a8a0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x0000000000091bee <+214>:\tadd    rcx,0x1\n   0x0000000000091bf2 <+218>:\tmov    rbx,rcx\n   0x0000000000091bf5 <+221>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x0000000000091bf9 <+225>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x0000000000091bfd <+229>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000091c01 <+233>:\tjmp    0x91b75 <ibwt+93>\n   0x0000000000091c06 <+238>:\tmov    r11,QWORD PTR [r15+0xaf]\n   0x0000000000091c0d <+245>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x0000000000091c12 <+250>:\tmov    r11,QWORD PTR [rbp-0x28]\n   0x0000000000091c16 <+254>:\tmov    QWORD PTR [rsp],r11\n   0x0000000000091c1a <+258>:\tmov    r10,QWORD PTR [r15+0x18c7]\n   0x0000000000091c21 <+265>:\tcall   0x91d4c <Sort.sort>\n   0x0000000000091c26 <+270>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x0000000000091c2a <+274>:\tadd    rax,0x1\n   0x0000000000091c2e <+278>:\tmov    rdx,rax\n   0x0000000000091c31 <+281>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x0000000000091c35 <+285>:\tjmp    0x91b58 <ibwt+64>\n   0x0000000000091c3a <+290>:\txor    edx,edx\n   0x0000000000091c3c <+292>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x0000000000091c40 <+296>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000091c44 <+300>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091c48 <+304>:\tjbe    0x91cfd <ibwt+485>\n   0x0000000000091c4e <+310>:\tcmp    rdx,rcx\n   0x0000000000091c51 <+313>:\tjge    0x91ccd <ibwt+437>\n   0x0000000000091c57 <+319>:\tmov    rdi,QWORD PTR [rax+rdx*8+0x17]\n   0x0000000000091c5c <+324>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x0000000000091c60 <+328>:\tadd    rdx,0x1\n   0x0000000000091c64 <+332>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x0000000000091c68 <+336>:\tmov    rbx,QWORD PTR [rdi+0x7]\n   0x0000000000091c6c <+340>:\tsar    rbx,1\n   0x0000000000091c6f <+343>:\tsub    rbx,0x1\n   0x0000000000091c73 <+347>:\tmov    rsi,rbx\n   0x0000000000091c76 <+350>:\tadd    rsi,rsi\n   0x0000000000091c79 <+353>:\tmov    QWORD PTR [rsp+0x10],rdi\n   0x0000000000091c7e <+358>:\tmov    QWORD PTR [rsp+0x8],rsi\n   0x0000000000091c83 <+363>:\tmov    r11,QWORD PTR [r15+0x1897]\n   0x0000000000091c8a <+370>:\tmov    QWORD PTR [rsp],r11\n   0x0000000000091c8e <+374>:\tcall   0x66908 <_StringBase._substringMatches>\n   0x0000000000091c93 <+379>:\ttest   al,0x10\n   0x0000000000091c95 <+381>:\tje     0x91ca1 <ibwt+393>\n   0x0000000000091c9b <+387>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x0000000000091c9f <+391>:\tjmp    0x91c3c <ibwt+292>\n   0x0000000000091ca1 <+393>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000091ca5 <+397>:\tsub    rax,0x1\n   0x0000000000091ca9 <+401>:\tmov    rcx,rax\n   0x0000000000091cac <+404>:\tadd    rcx,rcx\n   0x0000000000091caf <+407>:\tmov    QWORD PTR [rsp],rcx\n   0x0000000000091cb3 <+411>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x0000000000091cb7 <+415>:\tmov    esi,0x1\n   0x0000000000091cbc <+420>:\tmov    r10,QWORD PTR [r15+0x9f]\n   0x0000000000091cc3 <+427>:\tcall   0x60710 <_StringBase.substring>\n   0x0000000000091cc8 <+432>:\tmov    rsp,rbp\n   0x0000000000091ccb <+435>:\tpop    rbp\n   0x0000000000091ccc <+436>:\tret\n   0x0000000000091ccd <+437>:\tmov    rax,QWORD PTR [r15+0xcf]\n   0x0000000000091cd4 <+444>:\tmov    rsp,rbp\n   0x0000000000091cd7 <+447>:\tpop    rbp\n   0x0000000000091cd8 <+448>:\tret\n   0x0000000000091cd9 <+449>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091ce0 <+456>:\tjmp    0x91b31 <ibwt+25>\n   0x0000000000091ce5 <+461>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091cec <+468>:\tjmp    0x91b6a <ibwt+82>\n   0x0000000000091cf1 <+473>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091cf8 <+480>:\tjmp    0x91b83 <ibwt+107>\n   0x0000000000091cfd <+485>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091d04 <+492>:\tjmp    0x91c4e <ibwt+310>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "calculating-the-value-of-e.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  const double EPSILON = 1.0e-15;\n  double fact = 1;\n  double e = 2.0, e0;\n  int n = 2;\n  do {\n    e0 = e;\n    fact *= n++;\n    e += 1.0 / fact;\n  } while ((e-e0).abs() >= EPSILON);\n  print('The value of e = $e');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a29e <main+330>\n   0x000000000008a166 <+18>:\tmovsd  xmm4,QWORD PTR [r15+0x17f7]\n   0x000000000008a16f <+27>:\tmovsd  xmm3,QWORD PTR [r15+0x17ff]\n   0x000000000008a178 <+36>:\tmov    eax,0x2\n   0x000000000008a17d <+41>:\tmovsd  xmm2,QWORD PTR [r15+0x17f7]\n   0x000000000008a186 <+50>:\txorps  xmm1,xmm1\n   0x000000000008a189 <+53>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a192 <+62>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a196 <+66>:\tjbe    0x8a2aa <main+342>\n   0x000000000008a19c <+72>:\tmov    rcx,rax\n   0x000000000008a19f <+75>:\tadd    rcx,0x1\n   0x000000000008a1a3 <+79>:\txorps  xmm5,xmm5\n   0x000000000008a1a6 <+82>:\tcvtsi2sd xmm5,rax\n   0x000000000008a1ab <+87>:\tmulsd  xmm4,xmm5\n   0x000000000008a1af <+91>:\tmovaps xmm5,xmm2\n   0x000000000008a1b2 <+94>:\tdivsd  xmm5,xmm4\n   0x000000000008a1b6 <+98>:\taddsd  xmm5,xmm3\n   0x000000000008a1ba <+102>:\tmovsd  QWORD PTR [rbp-0x8],xmm5\n   0x000000000008a1bf <+107>:\tmovaps xmm6,xmm5\n   0x000000000008a1c2 <+110>:\tsubsd  xmm6,xmm3\n   0x000000000008a1c6 <+114>:\tcomisd xmm6,xmm1\n   0x000000000008a1ca <+118>:\tjp     0x8a1eb <main+151>\n   0x000000000008a1d0 <+124>:\tjne    0x8a1eb <main+151>\n   0x000000000008a1d6 <+130>:\tcomisd xmm1,xmm0\n   0x000000000008a1da <+134>:\tjp     0x8a23a <main+230>\n   0x000000000008a1e0 <+140>:\tjb     0x8a23a <main+230>\n   0x000000000008a1e6 <+146>:\tjmp    0x8a22f <main+219>\n   0x000000000008a1eb <+151>:\tcomisd xmm6,xmm1\n   0x000000000008a1ef <+155>:\tjp     0x8a21f <main+203>\n   0x000000000008a1f5 <+161>:\tjae    0x8a21f <main+203>\n   0x000000000008a1fb <+167>:\tmov    r11,QWORD PTR [r14+0x2b0]\n   0x000000000008a202 <+174>:\tmovups xmm3,XMMWORD PTR [r11]\n   0x000000000008a206 <+178>:\txorpd  xmm3,xmm6\n   0x000000000008a20a <+182>:\tcomisd xmm3,xmm0\n   0x000000000008a20e <+186>:\tjp     0x8a23a <main+230>\n   0x000000000008a214 <+192>:\tjb     0x8a23a <main+230>\n   0x000000000008a21a <+198>:\tjmp    0x8a22f <main+219>\n   0x000000000008a21f <+203>:\tcomisd xmm6,xmm0\n   0x000000000008a223 <+207>:\tjp     0x8a23a <main+230>\n   0x000000000008a229 <+213>:\tjb     0x8a23a <main+230>\n   0x000000000008a22f <+219>:\tmovaps xmm3,xmm5\n   0x000000000008a232 <+222>:\tmov    rax,rcx\n   0x000000000008a235 <+225>:\tjmp    0x8a192 <main+62>\n   0x000000000008a23a <+230>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a23e <+234>:\tmov    r10d,0x4\n   0x000000000008a244 <+240>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a249 <+245>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a250 <+252>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a254 <+256>:\tmovsd  xmm0,QWORD PTR [rbp-0x8]\n   0x000000000008a259 <+261>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008a25d <+265>:\tadd    rcx,0x10\n   0x000000000008a261 <+269>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008a265 <+273>:\tjae    0x8a2b6 <main+354>\n   0x000000000008a26b <+279>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008a26f <+283>:\tsub    rcx,0xf\n   0x000000000008a273 <+287>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008a27b <+295>:\tmovsd  QWORD PTR [rcx+0x7],xmm0\n   0x000000000008a280 <+300>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a284 <+304>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a288 <+308>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a28d <+313>:\tmov    rdi,rax\n   0x000000000008a290 <+316>:\tcall   0x8a2d4 <print>\n   0x000000000008a295 <+321>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a299 <+325>:\tmov    rsp,rbp\n   0x000000000008a29c <+328>:\tpop    rbp\n   0x000000000008a29d <+329>:\tret\n   0x000000000008a29e <+330>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2a5 <+337>:\tjmp    0x8a166 <main+18>\n   0x000000000008a2aa <+342>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a2b1 <+349>:\tjmp    0x8a19c <main+72>\n   0x000000000008a2b6 <+354>:\tsub    rsp,0x10\n   0x000000000008a2ba <+358>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a2be <+362>:\tpush   rax\n   0x000000000008a2bf <+363>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a2c4 <+368>:\tmov    rcx,rax\n   0x000000000008a2c7 <+371>:\tpop    rax\n   0x000000000008a2c8 <+372>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a2cc <+376>:\tadd    rsp,0x10\n   0x000000000008a2d0 <+380>:\tjmp    0x8a27b <main+295>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "call-a-function.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  // Function definition\n  // See the \"Function definition\" task for more info\n  void noArgs() {}\n  void fixedArgs(int arg1, int arg2) {}\n  void optionalArgs([int arg1 = 1]) {}\n  void namedArgs({required int arg1}) {}\n  int returnsValue() {return 1;}\n\n  // Calling a function that requires no arguments\n  noArgs();\n\n  // Calling a function with a fixed number of arguments\n  fixedArgs(1, 2);\n\n  // Calling a function with optional arguments\n  optionalArgs();\n  optionalArgs(2);\n\n  // Calling a function with named arguments\n  namedArgs(arg1: 1);\n\n  // Using a function in statement context\n  if (true) {\n    noArgs();\n  }\n\n  // Obtaining the return value of a function\n  var value = returnsValue();\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a118 <+0>:\tpush   rbp\n   0x000000000008a119 <+1>:\tmov    rbp,rsp\n   0x000000000008a11c <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a120 <+8>:\tjbe    0x8a130 <main+24>\n   0x000000000008a126 <+14>:\tcall   0x7dfec <_httpConnectionHook.<anonymous closure>>\n   0x000000000008a12b <+19>:\tmov    rsp,rbp\n   0x000000000008a12e <+22>:\tpop    rbp\n   0x000000000008a12f <+23>:\tret\n   0x000000000008a130 <+24>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a137 <+31>:\tjmp    0x8a126 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "case-sensitivity-of-identifiers.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  String dog = \"Benjamin\", doG = \"Smokey\", Dog = \"Samba\", DOG = \"Bernie\";\n\n  print(\"The four dogs are named $dog, $doG, $Dog and $DOG\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a177 <main+35>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tcall   0x8a180 <print>\n   0x000000000008a16e <+26>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a172 <+30>:\tmov    rsp,rbp\n   0x000000000008a175 <+33>:\tpop    rbp\n   0x000000000008a176 <+34>:\tret\n   0x000000000008a177 <+35>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a17e <+42>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "character-codes.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  const string = 'D';\n  print(string.runes.first);\n  var out = String.fromCharCode(67);\n  print(out);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a20c <+0>:\tpush   rbp\n   0x000000000008a20d <+1>:\tmov    rbp,rsp\n   0x000000000008a210 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a214 <+8>:\tjbe    0x8a26d <main+97>\n   0x000000000008a21a <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a221 <+21>:\tcall   0x8a364 <_StringBase.runes>\n   0x000000000008a226 <+26>:\tmov    rdi,rax\n   0x000000000008a229 <+29>:\tcall   0x8a314 <Iterable.first>\n   0x000000000008a22e <+34>:\tmov    rcx,rax\n   0x000000000008a231 <+37>:\tmov    rax,rcx\n   0x000000000008a234 <+40>:\tadd    rax,rax\n   0x000000000008a237 <+43>:\tjno    0x8a246 <main+58>\n   0x000000000008a23d <+49>:\tcall   0x84fa8 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a242 <+54>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a246 <+58>:\tmov    rdi,rax\n   0x000000000008a249 <+61>:\tcall   0x8a278 <print>\n   0x000000000008a24e <+66>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a252 <+70>:\tmov    esi,0x43\n   0x000000000008a257 <+75>:\tcall   0x5d6c4 <new String.fromCharCode>\n   0x000000000008a25c <+80>:\tmov    rdi,rax\n   0x000000000008a25f <+83>:\tcall   0x8a278 <print>\n   0x000000000008a264 <+88>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a268 <+92>:\tmov    rsp,rbp\n   0x000000000008a26b <+95>:\tpop    rbp\n   0x000000000008a26c <+96>:\tret\n   0x000000000008a26d <+97>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a274 <+104>:\tjmp    0x8a21a <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "chinese-zodiac.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  Set years = {1935, 1938, 1968, 1972, 1976, 2017};\n  //the zodiac cycle didnt start until 4 CE, so years <4 shouldnt be valid\n  for (int i = 0; i < 6; i++) {\n    int indice = years.elementAt(i);\n    print('$indice is the year of the ${getElement(indice)} ${getAnimal(indice)} (${getYY(indice)}).');\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a308 <+0>:\tpush   rbp\n   0x000000000008a309 <+1>:\tmov    rbp,rsp\n   0x000000000008a30c <+4>:\tsub    rsp,0x48\n   0x000000000008a310 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a314 <+12>:\tjbe    0x8a7df <main+1239>\n   0x000000000008a31a <+18>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a31e <+22>:\tcall   0x8a894 <new _Set>\n   0x000000000008a323 <+27>:\tmov    rcx,rax\n   0x000000000008a326 <+30>:\tmov    rax,QWORD PTR [r15+0x1637]\n   0x000000000008a32d <+37>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a331 <+41>:\tmov    QWORD PTR [rcx+0x2f],rax\n   0x000000000008a335 <+45>:\tmov    QWORD PTR [rcx+0xf],0x0\n   0x000000000008a33d <+53>:\tmov    rax,QWORD PTR [r15+0x163f]\n   0x000000000008a344 <+60>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a348 <+64>:\tmov    QWORD PTR [rcx+0x1f],0x0\n   0x000000000008a350 <+72>:\tmov    QWORD PTR [rcx+0x27],0x0\n   0x000000000008a358 <+80>:\tmov    rdi,rcx\n   0x000000000008a35b <+83>:\tmov    esi,0xf1e\n   0x000000000008a360 <+88>:\tcall   0x7f254 <_LinkedHashSetMixin.add>\n   0x000000000008a365 <+93>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a369 <+97>:\tmov    esi,0xf24\n   0x000000000008a36e <+102>:\tcall   0x7f254 <_LinkedHashSetMixin.add>\n   0x000000000008a373 <+107>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a377 <+111>:\tmov    esi,0xf60\n   0x000000000008a37c <+116>:\tcall   0x7f254 <_LinkedHashSetMixin.add>\n   0x000000000008a381 <+121>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a385 <+125>:\tmov    esi,0xf68\n   0x000000000008a38a <+130>:\tcall   0x7f254 <_LinkedHashSetMixin.add>\n   0x000000000008a38f <+135>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a393 <+139>:\tmov    esi,0xf70\n   0x000000000008a398 <+144>:\tcall   0x7f254 <_LinkedHashSetMixin.add>\n   0x000000000008a39d <+149>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a3a1 <+153>:\tmov    esi,0xfc2\n   0x000000000008a3a6 <+158>:\tcall   0x7f254 <_LinkedHashSetMixin.add>\n   0x000000000008a3ab <+163>:\txor    eax,eax\n   0x000000000008a3ad <+165>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a3b1 <+169>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3b5 <+173>:\tjbe    0x8a7eb <main+1251>\n   0x000000000008a3bb <+179>:\tcmp    rax,0x6\n   0x000000000008a3bf <+183>:\tjge    0x8a770 <main+1128>\n   0x000000000008a3c5 <+189>:\tmov    rdi,rax\n   0x000000000008a3c8 <+192>:\tmov    rsi,QWORD PTR [r15+0x17f7]\n   0x000000000008a3cf <+199>:\tcall   0x5376c <RangeError.checkNotNegative>\n   0x000000000008a3d4 <+204>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a3d8 <+208>:\tcall   0x56ff8 <_LinkedHashSetMixin.iterator>\n   0x000000000008a3dd <+213>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a3e1 <+217>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a3e5 <+221>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a3e9 <+225>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3ed <+229>:\tjbe    0x8a7f7 <main+1263>\n   0x000000000008a3f3 <+235>:\tmov    rdi,rax\n   0x000000000008a3f6 <+238>:\tcall   0x7e1d8 <_CompactIterator.moveNext>\n   0x000000000008a3fb <+243>:\ttest   al,0x10\n   0x000000000008a3fd <+245>:\tjne    0x8a779 <main+1137>\n   0x000000000008a403 <+251>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a407 <+255>:\tcmp    rax,0x0\n   0x000000000008a40b <+259>:\tje     0x8a41e <main+278>\n   0x000000000008a411 <+265>:\tmov    rcx,rax\n   0x000000000008a414 <+268>:\tsub    rcx,0x1\n   0x000000000008a418 <+272>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a41c <+276>:\tjmp    0x8a3e5 <main+221>\n   0x000000000008a41e <+278>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a422 <+282>:\tmov    rbx,QWORD PTR [rax+0x3f]\n   0x000000000008a426 <+286>:\tmov    QWORD PTR [rbp-0x28],rbx\n   0x000000000008a42a <+290>:\tcmp    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a42e <+294>:\tjne    0x8a45e <main+342>\n   0x000000000008a434 <+300>:\tmov    rdx,QWORD PTR [rax+0x7]\n   0x000000000008a438 <+304>:\tmov    rax,rbx\n   0x000000000008a43b <+307>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a43f <+311>:\tcmp    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a443 <+315>:\tje     0x8a45e <main+342>\n   0x000000000008a449 <+321>:\tmov    rsi,QWORD PTR [rdx+0x27]\n   0x000000000008a44d <+325>:\tmov    rbx,QWORD PTR [r15+0x16f]\n   0x000000000008a454 <+332>:\tmov    r9,QWORD PTR [r15+0x17ff]\n   0x000000000008a45b <+339>:\tcall   QWORD PTR [rsi+0x7]\n   0x000000000008a45e <+342>:\tmov    rbx,QWORD PTR [rbp-0x28]\n   0x000000000008a462 <+346>:\tmov    rax,rbx\n   0x000000000008a465 <+349>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a469 <+353>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a46d <+357>:\ttest   al,0x1\n   0x000000000008a46f <+359>:\tje     0x8a49c <main+404>\n   0x000000000008a475 <+365>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a478 <+368>:\tshr    esi,0xc\n   0x000000000008a47b <+371>:\tsub    rsi,0x3c\n   0x000000000008a47f <+375>:\tcmp    rsi,0x1\n   0x000000000008a483 <+379>:\tjbe    0x8a49c <main+404>\n   0x000000000008a489 <+385>:\tmov    rbx,QWORD PTR [r15+0x597]\n   0x000000000008a490 <+392>:\tmov    r9,QWORD PTR [r15+0x180f]\n   0x000000000008a497 <+399>:\tcall   0x8b3ac <assert type is int>\n   0x000000000008a49c <+404>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a4a0 <+408>:\tmov    r10d,0x10\n   0x000000000008a4a6 <+414>:\tcall   0x84e20 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a4ab <+419>:\tmov    rcx,rax\n   0x000000000008a4ae <+422>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a4b2 <+426>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008a4b6 <+430>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a4ba <+434>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a4c1 <+441>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a4c5 <+445>:\tmov    rbx,rax\n   0x000000000008a4c8 <+448>:\tsar    rbx,1\n   0x000000000008a4cb <+451>:\tjae    0x8a4d2 <main+458>\n   0x000000000008a4cd <+453>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a4d2 <+458>:\tmov    QWORD PTR [rbp-0x38],rbx\n   0x000000000008a4d6 <+462>:\tmov    rsi,rbx\n   0x000000000008a4d9 <+465>:\tsub    rsi,0x4\n   0x000000000008a4dd <+469>:\tmov    rax,rsi\n   0x000000000008a4e0 <+472>:\tmov    QWORD PTR [rbp-0x30],rsi\n   0x000000000008a4e4 <+476>:\tmov    edi,0xa\n   0x000000000008a4e9 <+481>:\tmov    r11,rax\n   0x000000000008a4ec <+484>:\tmov    rax,QWORD PTR [r15+0x1827]\n   0x000000000008a4f3 <+491>:\timul   r11\n   0x000000000008a4f6 <+494>:\tsar    rdx,0x2\n   0x000000000008a4fa <+498>:\tmov    rax,rdx\n   0x000000000008a4fd <+501>:\tshr    rdx,0x3f\n   0x000000000008a501 <+505>:\tadd    rdx,rax\n   0x000000000008a504 <+508>:\tmov    rax,r11\n   0x000000000008a507 <+511>:\tmov    r11d,0xa\n   0x000000000008a50d <+517>:\timul   rdx,r11\n   0x000000000008a511 <+521>:\tsub    rax,rdx\n   0x000000000008a514 <+524>:\tjge    0x8a51d <main+533>\n   0x000000000008a51a <+530>:\tadd    rax,r11\n   0x000000000008a51d <+533>:\tmov    rdx,rax\n   0x000000000008a520 <+536>:\txorps  xmm0,xmm0\n   0x000000000008a523 <+539>:\tcvtsi2sd xmm0,rdx\n   0x000000000008a528 <+544>:\tmovsd  xmm1,QWORD PTR [r15+0x182f]\n   0x000000000008a531 <+553>:\tdivsd  xmm0,xmm1\n   0x000000000008a535 <+557>:\tmovsd  QWORD PTR [rbp-0x40],xmm0\n   0x000000000008a53a <+562>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008a53e <+566>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008a545 <+573>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008a549 <+577>:\tjne    0x8a55b <main+595>\n   0x000000000008a54f <+583>:\tmov    rdx,QWORD PTR [r15+0x1837]\n   0x000000000008a556 <+590>:\tcall   0x8337c <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008a55b <+595>:\tmovsd  xmm0,QWORD PTR [rbp-0x40]\n   0x000000000008a560 <+600>:\tcmp    BYTE PTR [r14+0x7a8],0x0\n   0x000000000008a568 <+608>:\tje     0x8a803 <main+1275>\n   0x000000000008a56e <+614>:\txorps  xmm15,xmm15\n   0x000000000008a572 <+618>:\troundsd xmm15,xmm0,0x9\n   0x000000000008a579 <+625>:\tcvttsd2si rcx,xmm15\n   0x000000000008a57e <+630>:\tmov    rdx,rcx\n   0x000000000008a581 <+633>:\tshl    rdx,1\n   0x000000000008a584 <+636>:\tjo     0x8a803 <main+1275>\n   0x000000000008a58a <+642>:\tadd    rcx,rcx\n   0x000000000008a58d <+645>:\tsar    rcx,1\n   0x000000000008a590 <+648>:\tjae    0x8a597 <main+655>\n   0x000000000008a592 <+650>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a597 <+655>:\tmov    rdi,rax\n   0x000000000008a59a <+658>:\tmov    rsi,rcx\n   0x000000000008a59d <+661>:\tcall   0x56c7c <SetBase.elementAt>\n   0x000000000008a5a2 <+666>:\tmov    rbx,rax\n   0x000000000008a5a5 <+669>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a5a9 <+673>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a5ad <+677>:\tmov    QWORD PTR [rbp-0x28],rbx\n   0x000000000008a5b1 <+681>:\ttest   al,0x1\n   0x000000000008a5b3 <+683>:\tmov    esi,0x3c\n   0x000000000008a5b8 <+688>:\tje     0x8a5c0 <main+696>\n   0x000000000008a5ba <+690>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a5bd <+693>:\tshr    esi,0xc\n   0x000000000008a5c0 <+696>:\tsub    rsi,0x5e\n   0x000000000008a5c4 <+700>:\tcmp    rsi,0x1\n   0x000000000008a5c8 <+704>:\tjbe    0x8a5e1 <main+729>\n   0x000000000008a5ce <+710>:\tmov    rbx,QWORD PTR [r15+0x107]\n   0x000000000008a5d5 <+717>:\tmov    r9,QWORD PTR [r15+0x183f]\n   0x000000000008a5dc <+724>:\tcall   0x8b2f4 <assert type is String>\n   0x000000000008a5e1 <+729>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a5e5 <+733>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a5e9 <+737>:\tlea    r13,[rdx+0x27]\n   0x000000000008a5ed <+741>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a5f1 <+745>:\ttest   al,0x1\n   0x000000000008a5f3 <+747>:\tje     0x8a60c <main+772>\n   0x000000000008a5f5 <+749>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a5f9 <+753>:\tshr    r11d,0x2\n   0x000000000008a5fd <+757>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a601 <+761>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a605 <+765>:\tje     0x8a60c <main+772>\n   0x000000000008a607 <+767>:\tcall   0x83438 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a60c <+772>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a610 <+776>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x000000000008a617 <+783>:\tmov    QWORD PTR [rdx+0x2f],r11\n   0x000000000008a61b <+787>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008a61f <+791>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x000000000008a626 <+798>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008a62a <+802>:\tjne    0x8a63c <main+820>\n   0x000000000008a630 <+808>:\tmov    rdx,QWORD PTR [r15+0x184f]\n   0x000000000008a637 <+815>:\tcall   0x8337c <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008a63c <+820>:\tmov    rbx,rax\n   0x000000000008a63f <+823>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008a643 <+827>:\tmov    ecx,0xc\n   0x000000000008a648 <+832>:\tmov    r11,rax\n   0x000000000008a64b <+835>:\tmov    rax,QWORD PTR [r15+0x1857]\n   0x000000000008a652 <+842>:\timul   r11\n   0x000000000008a655 <+845>:\tsar    rdx,1\n   0x000000000008a658 <+848>:\tmov    rax,rdx\n   0x000000000008a65b <+851>:\tshr    rdx,0x3f\n   0x000000000008a65f <+855>:\tadd    rdx,rax\n   0x000000000008a662 <+858>:\tmov    rax,r11\n   0x000000000008a665 <+861>:\tmov    r11d,0xc\n   0x000000000008a66b <+867>:\timul   rdx,r11\n   0x000000000008a66f <+871>:\tsub    rax,rdx\n   0x000000000008a672 <+874>:\tjge    0x8a67b <main+883>\n   0x000000000008a678 <+880>:\tadd    rax,r11\n   0x000000000008a67b <+883>:\tmov    rdx,rax\n   0x000000000008a67e <+886>:\tmov    rdi,rbx\n   0x000000000008a681 <+889>:\tmov    rsi,rdx\n   0x000000000008a684 <+892>:\tcall   0x56c7c <SetBase.elementAt>\n   0x000000000008a689 <+897>:\tmov    rbx,rax\n   0x000000000008a68c <+900>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a690 <+904>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a694 <+908>:\tmov    QWORD PTR [rbp-0x28],rbx\n   0x000000000008a698 <+912>:\ttest   al,0x1\n   0x000000000008a69a <+914>:\tmov    esi,0x3c\n   0x000000000008a69f <+919>:\tje     0x8a6a7 <main+927>\n   0x000000000008a6a1 <+921>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a6a4 <+924>:\tshr    esi,0xc\n   0x000000000008a6a7 <+927>:\tsub    rsi,0x5e\n   0x000000000008a6ab <+931>:\tcmp    rsi,0x1\n   0x000000000008a6af <+935>:\tjbe    0x8a6c8 <main+960>\n   0x000000000008a6b5 <+941>:\tmov    rbx,QWORD PTR [r15+0x107]\n   0x000000000008a6bc <+948>:\tmov    r9,QWORD PTR [r15+0x185f]\n   0x000000000008a6c3 <+955>:\tcall   0x8b2f4 <assert type is String>\n   0x000000000008a6c8 <+960>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a6cc <+964>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a6d0 <+968>:\tlea    r13,[rdx+0x37]\n   0x000000000008a6d4 <+972>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a6d8 <+976>:\ttest   al,0x1\n   0x000000000008a6da <+978>:\tje     0x8a6f3 <main+1003>\n   0x000000000008a6dc <+980>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a6e0 <+984>:\tshr    r11d,0x2\n   0x000000000008a6e4 <+988>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a6e8 <+992>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a6ec <+996>:\tje     0x8a6f3 <main+1003>\n   0x000000000008a6ee <+998>:\tcall   0x83438 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a6f3 <+1003>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a6f7 <+1007>:\tmov    r11,QWORD PTR [r15+0x186f]\n   0x000000000008a6fe <+1014>:\tmov    QWORD PTR [rcx+0x3f],r11\n   0x000000000008a702 <+1018>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x000000000008a706 <+1022>:\ttest   al,0x1\n   0x000000000008a708 <+1024>:\tjne    0x8a71a <main+1042>\n   0x000000000008a70e <+1030>:\tmov    rax,QWORD PTR [r15+0x1877]\n   0x000000000008a715 <+1037>:\tjmp    0x8a721 <main+1049>\n   0x000000000008a71a <+1042>:\tmov    rax,QWORD PTR [r15+0x187f]\n   0x000000000008a721 <+1049>:\tmov    rdx,rcx\n   0x000000000008a724 <+1052>:\tlea    r13,[rdx+0x47]\n   0x000000000008a728 <+1056>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a72c <+1060>:\ttest   al,0x1\n   0x000000000008a72e <+1062>:\tje     0x8a747 <main+1087>\n   0x000000000008a730 <+1064>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a734 <+1068>:\tshr    r11d,0x2\n   0x000000000008a738 <+1072>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a73c <+1076>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a740 <+1080>:\tje     0x8a747 <main+1087>\n   0x000000000008a742 <+1082>:\tcall   0x83438 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a747 <+1087>:\tmov    r11,QWORD PTR [r15+0x1887]\n   0x000000000008a74e <+1094>:\tmov    QWORD PTR [rcx+0x4f],r11\n   0x000000000008a752 <+1098>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a756 <+1102>:\tcall   0x588fc <_StringBase._interpolate>\n   0x000000000008a75b <+1107>:\tmov    rdi,rax\n   0x000000000008a75e <+1110>:\tcall   0x8a830 <printToConsole>\n   0x000000000008a763 <+1115>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a767 <+1119>:\tadd    rax,0x1\n   0x000000000008a76b <+1123>:\tjmp    0x8a3ad <main+165>\n   0x000000000008a770 <+1128>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a774 <+1132>:\tmov    rsp,rbp\n   0x000000000008a777 <+1135>:\tpop    rbp\n   0x000000000008a778 <+1136>:\tret\n   0x000000000008a779 <+1137>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a77d <+1141>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a781 <+1145>:\tmov    rdx,rcx\n   0x000000000008a784 <+1148>:\tsub    rdx,rax\n   0x000000000008a787 <+1151>:\tmov    QWORD PTR [rbp-0x30],rdx\n   0x000000000008a78b <+1155>:\tcall   0x52bac <new IndexError>\n   0x000000000008a790 <+1160>:\tmov    rcx,rax\n   0x000000000008a793 <+1163>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008a797 <+1167>:\tmov    QWORD PTR [rcx+0x2f],rax\n   0x000000000008a79b <+1171>:\tmov    rax,QWORD PTR [r15+0x17f7]\n   0x000000000008a7a2 <+1178>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008a7a6 <+1182>:\tmov    rax,QWORD PTR [r15+0x188f]\n   0x000000000008a7ad <+1189>:\tmov    QWORD PTR [rcx+0x27],rax\n   0x000000000008a7b1 <+1193>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a7b5 <+1197>:\tmov    rax,rdx\n   0x000000000008a7b8 <+1200>:\tadd    rax,rax\n   0x000000000008a7bb <+1203>:\tjno    0x8a7ca <main+1218>\n   0x000000000008a7c1 <+1209>:\tcall   0x850a4 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a7c6 <+1214>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a7ca <+1218>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a7ce <+1222>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008a7d2 <+1226>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008a7d6 <+1230>:\tmov    rax,rcx\n   0x000000000008a7d9 <+1233>:\tcall   0x83418 <stub _iso_stub_ThrowStub>\n   0x000000000008a7de <+1238>:\tint3\n   0x000000000008a7df <+1239>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a7e6 <+1246>:\tjmp    0x8a31a <main+18>\n   0x000000000008a7eb <+1251>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a7f2 <+1258>:\tjmp    0x8a3bb <main+179>\n   0x000000000008a7f7 <+1263>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a7fe <+1270>:\tjmp    0x8a3f3 <main+235>\n   0x000000000008a803 <+1275>:\tsub    rsp,0x10\n   0x000000000008a807 <+1279>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a80b <+1283>:\tpush   rax\n   0x000000000008a80c <+1284>:\tmov    eax,0x44\n   0x000000000008a811 <+1289>:\tmov    r11,QWORD PTR [r15+0x1897]\n   0x000000000008a818 <+1296>:\tcall   QWORD PTR [r11+0x7]\n   0x000000000008a81c <+1300>:\tmov    rcx,rax\n   0x000000000008a81f <+1303>:\tpop    rax\n   0x000000000008a820 <+1304>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a824 <+1308>:\tadd    rsp,0x10\n   0x000000000008a828 <+1312>:\tjmp    0x8a58d <main+645>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "command-line-arguments.dart",
  "functions": [
    {
      "name": "main",
      "source": "main(List<String> args) {\n    for(var arg in args)\n        print(arg);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1d2 <main+126>\n   0x000000000008a166 <+18>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x000000000008a169 <+21>:\tshr    ecx,0xc\n   0x000000000008a16c <+24>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a170 <+28>:\tcall   QWORD PTR [rax+rcx*8+0x77a8]\n   0x000000000008a177 <+35>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a17b <+39>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a17f <+43>:\tjbe    0x8a1db <main+135>\n   0x000000000008a185 <+49>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a188 <+52>:\tshr    ecx,0xc\n   0x000000000008a18b <+55>:\tmov    rdi,rax\n   0x000000000008a18e <+58>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a192 <+62>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a195 <+65>:\ttest   al,0x10\n   0x000000000008a197 <+67>:\tjne    0x8a1c9 <main+117>\n   0x000000000008a19d <+73>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1a1 <+77>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a1a4 <+80>:\tshr    ecx,0xc\n   0x000000000008a1a7 <+83>:\tmov    rdi,rax\n   0x000000000008a1aa <+86>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a1ae <+90>:\tcall   QWORD PTR [rax+rcx*8-0x80]\n   0x000000000008a1b2 <+94>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a1b6 <+98>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a1bb <+103>:\tmov    rdi,rax\n   0x000000000008a1be <+106>:\tcall   0x8a1e4 <printToConsole>\n   0x000000000008a1c3 <+111>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1c7 <+115>:\tjmp    0x8a17b <main+39>\n   0x000000000008a1c9 <+117>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1cd <+121>:\tmov    rsp,rbp\n   0x000000000008a1d0 <+124>:\tpop    rbp\n   0x000000000008a1d1 <+125>:\tret\n   0x000000000008a1d2 <+126>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1d9 <+133>:\tjmp    0x8a166 <main+18>\n   0x000000000008a1db <+135>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1e2 <+142>:\tjmp    0x8a185 <main+49>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "concurrent-computing-1.dart",
  "functions": [
    {
      "name": "main",
      "source": "main(){\n\tenjoy()   .then( (e) => print(e) );\n\trosetta() .then( (r) => print(r) );\n\tcode()    .then( (c) => print(c) );\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a404 <+0>:\tpush   rbp\n   0x000000000008a405 <+1>:\tmov    rbp,rsp\n   0x000000000008a408 <+4>:\tsub    rsp,0x30\n   0x000000000008a40c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a410 <+12>:\tjbe    0x8a56f <main+363>\n   0x000000000008a416 <+18>:\tcall   0x8aacc <enjoy>\n   0x000000000008a41b <+23>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a41f <+27>:\tmov    rcx,QWORD PTR [rax+0x7]\n   0x000000000008a423 <+31>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a427 <+35>:\tmov    rbx,QWORD PTR [r15+0x17ff]\n   0x000000000008a42e <+42>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a432 <+46>:\tcall   0x84338 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a437 <+51>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a43b <+55>:\tmov    rbx,rax\n   0x000000000008a43e <+58>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a442 <+62>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x000000000008a446 <+66>:\tmov    rbx,QWORD PTR [r15+0x1807]\n   0x000000000008a44d <+73>:\tmov    r9,QWORD PTR [r15+0x180f]\n   0x000000000008a454 <+80>:\tcall   QWORD PTR [rbx+0x7]\n   0x000000000008a457 <+83>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a45b <+87>:\tmov    QWORD PTR [rsp+0x18],r11\n   0x000000000008a460 <+92>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a464 <+96>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008a469 <+101>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a46d <+105>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a472 <+110>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a476 <+114>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a47a <+118>:\tmov    r10,QWORD PTR [r15+0xd57]\n   0x000000000008a481 <+125>:\tcall   0x665f8 <Future.then>\n   0x000000000008a486 <+130>:\tcall   0x8aa34 <rosetta>\n   0x000000000008a48b <+135>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a48f <+139>:\tmov    rcx,QWORD PTR [rax+0x7]\n   0x000000000008a493 <+143>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a497 <+147>:\tmov    rbx,QWORD PTR [r15+0x181f]\n   0x000000000008a49e <+154>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a4a2 <+158>:\tcall   0x84338 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a4a7 <+163>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a4ab <+167>:\tmov    rbx,rax\n   0x000000000008a4ae <+170>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a4b2 <+174>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x000000000008a4b6 <+178>:\tmov    rbx,QWORD PTR [r15+0x1807]\n   0x000000000008a4bd <+185>:\tmov    r9,QWORD PTR [r15+0x1827]\n   0x000000000008a4c4 <+192>:\tcall   QWORD PTR [rbx+0x7]\n   0x000000000008a4c7 <+195>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a4cb <+199>:\tmov    QWORD PTR [rsp+0x18],r11\n   0x000000000008a4d0 <+204>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a4d4 <+208>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008a4d9 <+213>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a4dd <+217>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a4e2 <+222>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a4e6 <+226>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a4ea <+230>:\tmov    r10,QWORD PTR [r15+0xd57]\n   0x000000000008a4f1 <+237>:\tcall   0x665f8 <Future.then>\n   0x000000000008a4f6 <+242>:\tcall   0x8a57c <code>\n   0x000000000008a4fb <+247>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a4ff <+251>:\tmov    rcx,QWORD PTR [rax+0x7]\n   0x000000000008a503 <+255>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a507 <+259>:\tmov    rbx,QWORD PTR [r15+0x1837]\n   0x000000000008a50e <+266>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a512 <+270>:\tcall   0x84338 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a517 <+275>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a51b <+279>:\tmov    rbx,rax\n   0x000000000008a51e <+282>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a522 <+286>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x000000000008a526 <+290>:\tmov    rbx,QWORD PTR [r15+0x1807]\n   0x000000000008a52d <+297>:\tmov    r9,QWORD PTR [r15+0x183f]\n   0x000000000008a534 <+304>:\tcall   QWORD PTR [rbx+0x7]\n   0x000000000008a537 <+307>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a53b <+311>:\tmov    QWORD PTR [rsp+0x18],r11\n   0x000000000008a540 <+316>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a544 <+320>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008a549 <+325>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a54d <+329>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a552 <+334>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a556 <+338>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a55a <+342>:\tmov    r10,QWORD PTR [r15+0xd57]\n   0x000000000008a561 <+349>:\tcall   0x665f8 <Future.then>\n   0x000000000008a566 <+354>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a56a <+358>:\tmov    rsp,rbp\n   0x000000000008a56d <+361>:\tpop    rbp\n   0x000000000008a56e <+362>:\tret\n   0x000000000008a56f <+363>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a576 <+370>:\tjmp    0x8a416 <main+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "enjoy",
      "source": "enjoy()   .then( (e) => print(e) );",
      "assembly": "Dump of assembler code for function enjoy:\n   0x000000000008aacc <+0>:\tpush   rbp\n   0x000000000008aacd <+1>:\tmov    rbp,rsp\n   0x000000000008aad0 <+4>:\tsub    rsp,0x10\n   0x000000000008aad4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008aad8 <+12>:\tjbe    0x8ab53 <enjoy+135>\n   0x000000000008aade <+18>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008aae2 <+22>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008aae9 <+29>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008aaed <+33>:\tjne    0x8aaff <enjoy+51>\n   0x000000000008aaf3 <+39>:\tmov    rdx,QWORD PTR [r15+0x184f]\n   0x000000000008aafa <+46>:\tcall   0x83478 <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008aaff <+51>:\tmov    rdi,rax\n   0x000000000008ab02 <+54>:\tmov    esi,0xa\n   0x000000000008ab07 <+59>:\tcall   0x8a754 <_Random.nextInt>\n   0x000000000008ab0c <+64>:\timul   rax,rax,0x3e8\n   0x000000000008ab13 <+71>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008ab17 <+75>:\tcall   0x8a748 <new Duration>\n   0x000000000008ab1c <+80>:\tmov    rcx,rax\n   0x000000000008ab1f <+83>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008ab23 <+87>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008ab27 <+91>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000008ab2b <+95>:\tmov    rbx,QWORD PTR [r15+0x18af]\n   0x000000000008ab32 <+102>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008ab36 <+106>:\tcall   0x84338 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008ab3b <+111>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008ab3f <+115>:\tmov    rdx,rax\n   0x000000000008ab42 <+118>:\tmov    rdi,QWORD PTR [r15+0xaf]\n   0x000000000008ab49 <+125>:\tcall   0x8a60c <new Future.delayed>\n   0x000000000008ab4e <+130>:\tmov    rsp,rbp\n   0x000000000008ab51 <+133>:\tpop    rbp\n   0x000000000008ab52 <+134>:\tret\n   0x000000000008ab53 <+135>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab5a <+142>:\tjmp    0x8aade <enjoy+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "rosetta",
      "source": "rosetta() .then( (r) => print(r) );",
      "assembly": "Dump of assembler code for function rosetta:\n   0x000000000008aa34 <+0>:\tpush   rbp\n   0x000000000008aa35 <+1>:\tmov    rbp,rsp\n   0x000000000008aa38 <+4>:\tsub    rsp,0x10\n   0x000000000008aa3c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008aa40 <+12>:\tjbe    0x8aabb <rosetta+135>\n   0x000000000008aa46 <+18>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008aa4a <+22>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008aa51 <+29>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008aa55 <+33>:\tjne    0x8aa67 <rosetta+51>\n   0x000000000008aa5b <+39>:\tmov    rdx,QWORD PTR [r15+0x184f]\n   0x000000000008aa62 <+46>:\tcall   0x83478 <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008aa67 <+51>:\tmov    rdi,rax\n   0x000000000008aa6a <+54>:\tmov    esi,0xa\n   0x000000000008aa6f <+59>:\tcall   0x8a754 <_Random.nextInt>\n   0x000000000008aa74 <+64>:\timul   rax,rax,0x3e8\n   0x000000000008aa7b <+71>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008aa7f <+75>:\tcall   0x8a748 <new Duration>\n   0x000000000008aa84 <+80>:\tmov    rcx,rax\n   0x000000000008aa87 <+83>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008aa8b <+87>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008aa8f <+91>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000008aa93 <+95>:\tmov    rbx,QWORD PTR [r15+0x189f]\n   0x000000000008aa9a <+102>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008aa9e <+106>:\tcall   0x84338 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008aaa3 <+111>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008aaa7 <+115>:\tmov    rdx,rax\n   0x000000000008aaaa <+118>:\tmov    rdi,QWORD PTR [r15+0xaf]\n   0x000000000008aab1 <+125>:\tcall   0x8a60c <new Future.delayed>\n   0x000000000008aab6 <+130>:\tmov    rsp,rbp\n   0x000000000008aab9 <+133>:\tpop    rbp\n   0x000000000008aaba <+134>:\tret\n   0x000000000008aabb <+135>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008aac2 <+142>:\tjmp    0x8aa46 <rosetta+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "enjoy",
      "source": "enjoy()   => Future.delayed( Duration( milliseconds: rng.nextInt( 10 ) ), () => \"Enjoy\");",
      "assembly": "Dump of assembler code for function enjoy:\n   0x000000000008aacc <+0>:\tpush   rbp\n   0x000000000008aacd <+1>:\tmov    rbp,rsp\n   0x000000000008aad0 <+4>:\tsub    rsp,0x10\n   0x000000000008aad4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008aad8 <+12>:\tjbe    0x8ab53 <enjoy+135>\n   0x000000000008aade <+18>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008aae2 <+22>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008aae9 <+29>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008aaed <+33>:\tjne    0x8aaff <enjoy+51>\n   0x000000000008aaf3 <+39>:\tmov    rdx,QWORD PTR [r15+0x184f]\n   0x000000000008aafa <+46>:\tcall   0x83478 <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008aaff <+51>:\tmov    rdi,rax\n   0x000000000008ab02 <+54>:\tmov    esi,0xa\n   0x000000000008ab07 <+59>:\tcall   0x8a754 <_Random.nextInt>\n   0x000000000008ab0c <+64>:\timul   rax,rax,0x3e8\n   0x000000000008ab13 <+71>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008ab17 <+75>:\tcall   0x8a748 <new Duration>\n   0x000000000008ab1c <+80>:\tmov    rcx,rax\n   0x000000000008ab1f <+83>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008ab23 <+87>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008ab27 <+91>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000008ab2b <+95>:\tmov    rbx,QWORD PTR [r15+0x18af]\n   0x000000000008ab32 <+102>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008ab36 <+106>:\tcall   0x84338 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008ab3b <+111>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008ab3f <+115>:\tmov    rdx,rax\n   0x000000000008ab42 <+118>:\tmov    rdi,QWORD PTR [r15+0xaf]\n   0x000000000008ab49 <+125>:\tcall   0x8a60c <new Future.delayed>\n   0x000000000008ab4e <+130>:\tmov    rsp,rbp\n   0x000000000008ab51 <+133>:\tpop    rbp\n   0x000000000008ab52 <+134>:\tret\n   0x000000000008ab53 <+135>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab5a <+142>:\tjmp    0x8aade <enjoy+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "rosetta",
      "source": "rosetta() => Future.delayed( Duration( milliseconds: rng.nextInt( 10 ) ), () => \"Rosetta\");",
      "assembly": "Dump of assembler code for function rosetta:\n   0x000000000008aa34 <+0>:\tpush   rbp\n   0x000000000008aa35 <+1>:\tmov    rbp,rsp\n   0x000000000008aa38 <+4>:\tsub    rsp,0x10\n   0x000000000008aa3c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008aa40 <+12>:\tjbe    0x8aabb <rosetta+135>\n   0x000000000008aa46 <+18>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008aa4a <+22>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008aa51 <+29>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008aa55 <+33>:\tjne    0x8aa67 <rosetta+51>\n   0x000000000008aa5b <+39>:\tmov    rdx,QWORD PTR [r15+0x184f]\n   0x000000000008aa62 <+46>:\tcall   0x83478 <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008aa67 <+51>:\tmov    rdi,rax\n   0x000000000008aa6a <+54>:\tmov    esi,0xa\n   0x000000000008aa6f <+59>:\tcall   0x8a754 <_Random.nextInt>\n   0x000000000008aa74 <+64>:\timul   rax,rax,0x3e8\n   0x000000000008aa7b <+71>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008aa7f <+75>:\tcall   0x8a748 <new Duration>\n   0x000000000008aa84 <+80>:\tmov    rcx,rax\n   0x000000000008aa87 <+83>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008aa8b <+87>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008aa8f <+91>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000008aa93 <+95>:\tmov    rbx,QWORD PTR [r15+0x189f]\n   0x000000000008aa9a <+102>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008aa9e <+106>:\tcall   0x84338 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008aaa3 <+111>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008aaa7 <+115>:\tmov    rdx,rax\n   0x000000000008aaaa <+118>:\tmov    rdi,QWORD PTR [r15+0xaf]\n   0x000000000008aab1 <+125>:\tcall   0x8a60c <new Future.delayed>\n   0x000000000008aab6 <+130>:\tmov    rsp,rbp\n   0x000000000008aab9 <+133>:\tpop    rbp\n   0x000000000008aaba <+134>:\tret\n   0x000000000008aabb <+135>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008aac2 <+142>:\tjmp    0x8aa46 <rosetta+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "concurrent-computing-2.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n\t// Create ReceivePort to receive done messages\n\t// Called a channel in other languages\n\tvar receiver = ReceivePort();\n\n\t// Create job counter\n\tvar job_count = 3;\n\t\n\t// Create job pool\n\tvar jobs = [ enjoy, rosetta, code ];\n\n\t// Create random number generator\n\tvar rng = Random();\n\n\tfor ( var job in jobs ) {\n\t\t// Sleep for random duration up to half a second\n\t\tvar sleep_time = Duration( milliseconds: rng.nextInt( 500 ) );\t\n\n\t\t// Spawn  Isolate to do work\n\t\t// When finished the second argument will be sent to the receiver via the SendPort specified in onExit\n\t\tIsolate.spawn( job, sleep_time, onExit: receiver.sendPort );\n\n\t}\n\t\n\t// Do something in main isolate\n\tprint(\"from main isolate\\n\");\n\t\n\t// Register a listener on the ReceivePort, it gets called whenver something is sent on its SendPort\n\t// We'll ignore the message with _ because we don't care about the data, just the event\n\treceiver.listen( (_) {\n\t\t// Decrement job counter\n\t\tjob_count -= 1; \t\n\t\t// If jobs are all finished\n\t\tif ( job_count == 0 ) {\n\t\t\tprint(\"\\nall jobs finished!\");\n\t\t\texit(0);\n\t\t}\n\t});\n\n}",
      "assembly": "Dump of assembler code for function main:\n   0x00000000000a5c38 <+0>:\tpush   rbp\n   0x00000000000a5c39 <+1>:\tmov    rbp,rsp\n   0x00000000000a5c3c <+4>:\tsub    rsp,0x60\n   0x00000000000a5c40 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000a5c44 <+12>:\tjbe    0xa5e41 <main+521>\n   0x00000000000a5c4a <+18>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x00000000000a5c4e <+22>:\tcall   0xa6a60 <new ReceivePort>\n   0x00000000000a5c53 <+27>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x00000000000a5c57 <+31>:\tmov    r10d,0x1\n   0x00000000000a5c5d <+37>:\tcall   0x97594 <stub _iso_stub_AllocateContextStub>\n   0x00000000000a5c62 <+42>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x00000000000a5c66 <+46>:\tmov    QWORD PTR [rax+0x17],0x6\n   0x00000000000a5c6e <+54>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x00000000000a5c72 <+58>:\tmov    r10d,0x6\n   0x00000000000a5c78 <+64>:\tcall   0x984a4 <stub _iso_stub_AllocateArrayStub>\n   0x00000000000a5c7d <+69>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x00000000000a5c81 <+73>:\tmov    r11,QWORD PTR [r15+0x1fbf]\n   0x00000000000a5c88 <+80>:\tmov    QWORD PTR [rax+0x17],r11\n   0x00000000000a5c8c <+84>:\tmov    r11,QWORD PTR [r15+0x1fc7]\n   0x00000000000a5c93 <+91>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x00000000000a5c97 <+95>:\tmov    r11,QWORD PTR [r15+0x1fcf]\n   0x00000000000a5c9e <+102>:\tmov    QWORD PTR [rax+0x27],r11\n   0x00000000000a5ca2 <+106>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x00000000000a5ca6 <+110>:\tcall   0xa6850 <new Random>\n   0x00000000000a5cab <+115>:\tmov    rbx,rax\n   0x00000000000a5cae <+118>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x00000000000a5cb2 <+122>:\tmov    QWORD PTR [rbp-0x38],rbx\n   0x00000000000a5cb6 <+126>:\tmov    rax,QWORD PTR [rdi+0xf]\n   0x00000000000a5cba <+130>:\tmov    rsi,QWORD PTR [rax+0x7]\n   0x00000000000a5cbe <+134>:\tmov    QWORD PTR [rbp-0x30],rsi\n   0x00000000000a5cc2 <+138>:\txor    eax,eax\n   0x00000000000a5cc4 <+140>:\tmov    r8,QWORD PTR [rbp-0x18]\n   0x00000000000a5cc8 <+144>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000a5ccc <+148>:\tjbe    0xa5e4d <main+533>\n   0x00000000000a5cd2 <+154>:\tcmp    rax,0x3\n   0x00000000000a5cd6 <+158>:\tjge    0xa5e09 <main+465>\n   0x00000000000a5cdc <+164>:\tmov    r9,QWORD PTR [r8+rax*8+0x17]\n   0x00000000000a5ce1 <+169>:\tmov    QWORD PTR [rbp-0x28],r9\n   0x00000000000a5ce5 <+173>:\tmov    r10,rax\n   0x00000000000a5ce8 <+176>:\tadd    r10,0x1\n   0x00000000000a5cec <+180>:\tmov    QWORD PTR [rbp-0x20],r10\n   0x00000000000a5cf0 <+184>:\tcmp    r9,QWORD PTR [r14+0x70]\n   0x00000000000a5cf4 <+188>:\tjne    0xa5d18 <main+224>\n   0x00000000000a5cfa <+194>:\tmov    rax,r9\n   0x00000000000a5cfd <+197>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x00000000000a5d01 <+201>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x00000000000a5d05 <+205>:\tmov    rbx,QWORD PTR [r15+0x1fd7]\n   0x00000000000a5d0c <+212>:\tmov    r9,QWORD PTR [r15+0x1fdf]\n   0x00000000000a5d13 <+219>:\tcall   0x967d8 <stub _iso_stub_DefaultTypeTestStub>\n   0x00000000000a5d18 <+224>:\tmov    rcx,QWORD PTR [rbp-0x38]\n   0x00000000000a5d1c <+228>:\tmov    ebx,0x1f4\n   0x00000000000a5d21 <+233>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000a5d25 <+237>:\tjbe    0xa5e59 <main+545>\n   0x00000000000a5d2b <+243>:\tmov    rax,QWORD PTR [rcx+0x7]\n   0x00000000000a5d2f <+247>:\tmov    rdx,rax\n   0x00000000000a5d32 <+250>:\tmov    edx,edx\n   0x00000000000a5d34 <+252>:\tshr    rax,0x20\n   0x00000000000a5d38 <+256>:\tmov    edx,edx\n   0x00000000000a5d3a <+258>:\tmov    r11d,0xffffda61\n   0x00000000000a5d40 <+264>:\timul   rdx,r11\n   0x00000000000a5d44 <+268>:\tadd    rdx,rax\n   0x00000000000a5d47 <+271>:\tmov    QWORD PTR [rcx+0x7],rdx\n   0x00000000000a5d4b <+275>:\tmov    rsi,rdx\n   0x00000000000a5d4e <+278>:\tmov    esi,esi\n   0x00000000000a5d50 <+280>:\tmov    rax,rsi\n   0x00000000000a5d53 <+283>:\tmov    eax,eax\n   0x00000000000a5d55 <+285>:\tmov    r11,rax\n   0x00000000000a5d58 <+288>:\tmov    rax,QWORD PTR [r15+0xccf]\n   0x00000000000a5d5f <+295>:\timul   r11\n   0x00000000000a5d62 <+298>:\tsar    rdx,0x6\n   0x00000000000a5d66 <+302>:\tmov    rax,rdx\n   0x00000000000a5d69 <+305>:\tshr    rdx,0x3f\n   0x00000000000a5d6d <+309>:\tadd    rdx,rax\n   0x00000000000a5d70 <+312>:\tmov    rax,r11\n   0x00000000000a5d73 <+315>:\tmov    r11d,0x1f4\n   0x00000000000a5d79 <+321>:\timul   rdx,r11\n   0x00000000000a5d7d <+325>:\tsub    rax,rdx\n   0x00000000000a5d80 <+328>:\tjge    0xa5d89 <main+337>\n   0x00000000000a5d86 <+334>:\tadd    rax,r11\n   0x00000000000a5d89 <+337>:\tmov    rdx,rax\n   0x00000000000a5d8c <+340>:\tmov    esi,esi\n   0x00000000000a5d8e <+342>:\tsub    rsi,rdx\n   0x00000000000a5d91 <+345>:\tadd    rsi,0x1f4\n   0x00000000000a5d98 <+352>:\tmovabs r11,0x100000000\n   0x00000000000a5da2 <+362>:\tcmp    rsi,r11\n   0x00000000000a5da5 <+365>:\tjg     0xa5d21 <main+233>\n   0x00000000000a5dab <+371>:\timul   rdx,rdx,0x3e8\n   0x00000000000a5db2 <+378>:\tmov    QWORD PTR [rbp-0x40],rdx\n   0x00000000000a5db6 <+382>:\tcall   0xa6844 <new Duration>\n   0x00000000000a5dbb <+387>:\tmov    rcx,rax\n   0x00000000000a5dbe <+390>:\tmov    rax,QWORD PTR [rbp-0x40]\n   0x00000000000a5dc2 <+394>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x00000000000a5dc6 <+398>:\tmov    r11,QWORD PTR [r15+0x1fef]\n   0x00000000000a5dcd <+405>:\tmov    QWORD PTR [rsp+0x18],r11\n   0x00000000000a5dd2 <+410>:\tmov    r11,QWORD PTR [rbp-0x28]\n   0x00000000000a5dd6 <+414>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x00000000000a5ddb <+419>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x00000000000a5de0 <+424>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x00000000000a5de4 <+428>:\tmov    QWORD PTR [rsp],r11\n   0x00000000000a5de8 <+432>:\tmov    r10,QWORD PTR [r15+0x1bd7]\n   0x00000000000a5def <+439>:\tcall   0xa5ecc <Isolate.spawn>\n   0x00000000000a5df4 <+444>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x00000000000a5df8 <+448>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x00000000000a5dfc <+452>:\tmov    rbx,QWORD PTR [rbp-0x38]\n   0x00000000000a5e00 <+456>:\tmov    rsi,QWORD PTR [rbp-0x30]\n   0x00000000000a5e04 <+460>:\tjmp    0xa5cc4 <main+140>\n   0x00000000000a5e09 <+465>:\tmov    rdi,QWORD PTR [r15+0x1ff7]\n   0x00000000000a5e10 <+472>:\tcall   0xa5e68 <printToConsole>\n   0x00000000000a5e15 <+477>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x00000000000a5e19 <+481>:\tmov    rbx,QWORD PTR [r15+0x1fff]\n   0x00000000000a5e20 <+488>:\tcall   0x978c0 <stub _iso_stub_AllocateClosureStub>\n   0x00000000000a5e25 <+493>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x00000000000a5e29 <+497>:\tmov    rsi,rax\n   0x00000000000a5e2c <+500>:\tmov    r10,QWORD PTR [r15+0xd7]\n   0x00000000000a5e33 <+507>:\tcall   0x91384 <_ReceivePortImpl.listen>\n   0x00000000000a5e38 <+512>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x00000000000a5e3c <+516>:\tmov    rsp,rbp\n   0x00000000000a5e3f <+519>:\tpop    rbp\n   0x00000000000a5e40 <+520>:\tret\n   0x00000000000a5e41 <+521>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000a5e48 <+528>:\tjmp    0xa5c4a <main+18>\n   0x00000000000a5e4d <+533>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000a5e54 <+540>:\tjmp    0xa5cd2 <main+154>\n   0x00000000000a5e59 <+545>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000a5e60 <+552>:\tjmp    0xa5d2b <main+243>\nEnd of assembler dump.\n"
    },
    {
      "name": "enjoy",
      "source": "enjoy ( duration ) {\n\tsleep( duration ) ;\n\tprint(\"Enjoy\");\n}",
      "assembly": "Dump of assembler code for function enjoy:\n   0x00000000000a6fa0 <+0>:\tpush   rbp\n   0x00000000000a6fa1 <+1>:\tmov    rbp,rsp\n   0x00000000000a6fa4 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000a6fa8 <+8>:\tjbe    0xa6fbc <enjoy+28>\n   0x00000000000a6fae <+14>:\tmov    rdi,QWORD PTR [rbp+0x10]\n   0x00000000000a6fb2 <+18>:\tcall   0xa6fc8 <enjoy>\n   0x00000000000a6fb7 <+23>:\tmov    rsp,rbp\n   0x00000000000a6fba <+26>:\tpop    rbp\n   0x00000000000a6fbb <+27>:\tret\n   0x00000000000a6fbc <+28>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000a6fc3 <+35>:\tjmp    0xa6fae <enjoy+14>\nEnd of assembler dump.\n"
    },
    {
      "name": "rosetta",
      "source": "rosetta ( duration ) {\n\tsleep( duration );\n\tprint(\"Rosetta\");\n }",
      "assembly": "Dump of assembler code for function rosetta:\n   0x00000000000a6efc <+0>:\tpush   rbp\n   0x00000000000a6efd <+1>:\tmov    rbp,rsp\n   0x00000000000a6f00 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000a6f04 <+8>:\tjbe    0xa6f18 <rosetta+28>\n   0x00000000000a6f0a <+14>:\tmov    rdi,QWORD PTR [rbp+0x10]\n   0x00000000000a6f0e <+18>:\tcall   0xa6f24 <rosetta>\n   0x00000000000a6f13 <+23>:\tmov    rsp,rbp\n   0x00000000000a6f16 <+26>:\tpop    rbp\n   0x00000000000a6f17 <+27>:\tret\n   0x00000000000a6f18 <+28>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000a6f1f <+35>:\tjmp    0xa6f0a <rosetta+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "copy-stdin-to-stdout.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var line = stdin.readLineSync();\n  stdout.write(line);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000009ee10 <+0>:\tpush   rbp\n   0x000000000009ee11 <+1>:\tmov    rbp,rsp\n   0x000000000009ee14 <+4>:\tsub    rsp,0x8\n   0x000000000009ee18 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009ee1c <+12>:\tjbe    0x9ee4d <main+61>\n   0x000000000009ee22 <+18>:\tcall   0xa0f10 <stdin>\n   0x000000000009ee27 <+23>:\tmov    rdi,rax\n   0x000000000009ee2a <+26>:\tcall   0x9f610 <Stdin.readLineSync>\n   0x000000000009ee2f <+31>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000009ee33 <+35>:\tcall   0x9f32c <stdout>\n   0x000000000009ee38 <+40>:\tmov    rdi,rax\n   0x000000000009ee3b <+43>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000009ee3f <+47>:\tcall   0x9ee58 <_StdSink._write>\n   0x000000000009ee44 <+52>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000009ee48 <+56>:\tmov    rsp,rbp\n   0x000000000009ee4b <+59>:\tpop    rbp\n   0x000000000009ee4c <+60>:\tret\n   0x000000000009ee4d <+61>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009ee54 <+68>:\tjmp    0x9ee22 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "count-the-coins-2.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  Stopwatch stopwatch = Stopwatch()..start();\n\n  /// Use the brute-force recursion for the small problem\n  int amount = 100;\n  List<int> coinTypes = [25,10,5,1];\n  print (\"${coins(amount,coinTypes)} ways for $amount using $coinTypes coins.\");\n\n  /// Use the cache version for the big problem\n  amount = 100000;\n  coinTypes = [100,50,25,10,5,1];\n  print (\"${cachedCoins(amount,coinTypes)} ways for $amount using $coinTypes coins.\");\n\n  stopwatch.stop();\n  print (\"... completed in ${stopwatch.elapsedMilliseconds/1000} seconds\");\n\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a2ac <+0>:\tpush   rbp\n   0x000000000008a2ad <+1>:\tmov    rbp,rsp\n   0x000000000008a2b0 <+4>:\tsub    rsp,0x20\n   0x000000000008a2b4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2b8 <+12>:\tjbe    0x8a584 <main+728>\n   0x000000000008a2be <+18>:\tcall   0x8ae64 <new Stopwatch>\n   0x000000000008a2c3 <+23>:\tmov    rcx,rax\n   0x000000000008a2c6 <+26>:\txor    eax,eax\n   0x000000000008a2c8 <+28>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a2cc <+32>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000008a2d0 <+36>:\tmov    QWORD PTR [rcx+0xf],0x0\n   0x000000000008a2d8 <+44>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008a2dc <+48>:\tmov    rax,QWORD PTR [rax+0x640]\n   0x000000000008a2e3 <+55>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008a2e7 <+59>:\tjne    0x8a2f9 <main+77>\n   0x000000000008a2ed <+65>:\tmov    rdx,QWORD PTR [r15+0x17f7]\n   0x000000000008a2f4 <+72>:\tcall   0x832d8 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000008a2f9 <+77>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a2fd <+81>:\tcall   0x8ade4 <Stopwatch.start>\n   0x000000000008a302 <+86>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a306 <+90>:\tmov    r10d,0x8\n   0x000000000008a30c <+96>:\tcall   0x84dc4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a311 <+101>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a315 <+105>:\tmov    QWORD PTR [rax+0x17],0x32\n   0x000000000008a31d <+113>:\tmov    QWORD PTR [rax+0x1f],0x14\n   0x000000000008a325 <+121>:\tmov    QWORD PTR [rax+0x27],0xa\n   0x000000000008a32d <+129>:\tmov    QWORD PTR [rax+0x2f],0x2\n   0x000000000008a335 <+137>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a33c <+144>:\tcall   0x83e84 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a341 <+149>:\tmov    rcx,rax\n   0x000000000008a344 <+152>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a348 <+156>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a34c <+160>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a350 <+164>:\tmov    QWORD PTR [rcx+0xf],0x8\n   0x000000000008a358 <+172>:\tmov    rsi,rcx\n   0x000000000008a35b <+175>:\tmov    edi,0x64\n   0x000000000008a360 <+180>:\tcall   0x8ac98 <coins>\n   0x000000000008a365 <+185>:\tmov    rcx,rax\n   0x000000000008a368 <+188>:\tmov    rax,rcx\n   0x000000000008a36b <+191>:\tadd    rax,rax\n   0x000000000008a36e <+194>:\tjno    0x8a37d <main+209>\n   0x000000000008a374 <+200>:\tcall   0x85048 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a379 <+205>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a37d <+209>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a381 <+213>:\tmov    r10d,0xc\n   0x000000000008a387 <+219>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a38b <+223>:\tcall   0x84dc4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a390 <+228>:\tmov    rcx,rax\n   0x000000000008a393 <+231>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a397 <+235>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a39b <+239>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a3a2 <+246>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a3a6 <+250>:\tmov    QWORD PTR [rcx+0x27],0xc8\n   0x000000000008a3ae <+258>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a3b5 <+265>:\tmov    QWORD PTR [rcx+0x2f],r11\n   0x000000000008a3b9 <+269>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a3bd <+273>:\tmov    QWORD PTR [rcx+0x37],rax\n   0x000000000008a3c1 <+277>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a3c8 <+284>:\tmov    QWORD PTR [rcx+0x3f],r11\n   0x000000000008a3cc <+288>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a3d0 <+292>:\tcall   0x588f4 <_StringBase._interpolate>\n   0x000000000008a3d5 <+297>:\tmov    rdi,rax\n   0x000000000008a3d8 <+300>:\tcall   0x8abfc <print>\n   0x000000000008a3dd <+305>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a3e1 <+309>:\tmov    r10d,0xc\n   0x000000000008a3e7 <+315>:\tcall   0x84dc4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a3ec <+320>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a3f0 <+324>:\tmov    QWORD PTR [rax+0x17],0xc8\n   0x000000000008a3f8 <+332>:\tmov    QWORD PTR [rax+0x1f],0x64\n   0x000000000008a400 <+340>:\tmov    QWORD PTR [rax+0x27],0x32\n   0x000000000008a408 <+348>:\tmov    QWORD PTR [rax+0x2f],0x14\n   0x000000000008a410 <+356>:\tmov    QWORD PTR [rax+0x37],0xa\n   0x000000000008a418 <+364>:\tmov    QWORD PTR [rax+0x3f],0x2\n   0x000000000008a420 <+372>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a427 <+379>:\tcall   0x83e84 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a42c <+384>:\tmov    rcx,rax\n   0x000000000008a42f <+387>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a433 <+391>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a437 <+395>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a43b <+399>:\tmov    QWORD PTR [rcx+0xf],0xc\n   0x000000000008a443 <+407>:\tmov    rsi,rcx\n   0x000000000008a446 <+410>:\tmov    edi,0x186a0\n   0x000000000008a44b <+415>:\tcall   0x8a8f4 <cachedCoins>\n   0x000000000008a450 <+420>:\tmov    rcx,rax\n   0x000000000008a453 <+423>:\tmov    rax,rcx\n   0x000000000008a456 <+426>:\tadd    rax,rax\n   0x000000000008a459 <+429>:\tjno    0x8a468 <main+444>\n   0x000000000008a45f <+435>:\tcall   0x85048 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a464 <+440>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a468 <+444>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a46c <+448>:\tmov    r10d,0xc\n   0x000000000008a472 <+454>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a476 <+458>:\tcall   0x84dc4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a47b <+463>:\tmov    rcx,rax\n   0x000000000008a47e <+466>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a482 <+470>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a486 <+474>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a48d <+481>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a491 <+485>:\tmov    QWORD PTR [rcx+0x27],0x30d40\n   0x000000000008a499 <+493>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a4a0 <+500>:\tmov    QWORD PTR [rcx+0x2f],r11\n   0x000000000008a4a4 <+504>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a4a8 <+508>:\tmov    QWORD PTR [rcx+0x37],rax\n   0x000000000008a4ac <+512>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a4b3 <+519>:\tmov    QWORD PTR [rcx+0x3f],r11\n   0x000000000008a4b7 <+523>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a4bb <+527>:\tcall   0x588f4 <_StringBase._interpolate>\n   0x000000000008a4c0 <+532>:\tmov    rdi,rax\n   0x000000000008a4c3 <+535>:\tcall   0x8abfc <print>\n   0x000000000008a4c8 <+540>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4cc <+544>:\tcall   0x8a894 <Stopwatch.stop>\n   0x000000000008a4d1 <+549>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a4d5 <+553>:\tmov    r10d,0x6\n   0x000000000008a4db <+559>:\tcall   0x84dc4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a4e0 <+564>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a4e4 <+568>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a4eb <+575>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a4ef <+579>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4f3 <+583>:\tcall   0x8a5a8 <Stopwatch.elapsedMilliseconds>\n   0x000000000008a4f8 <+588>:\txorps  xmm0,xmm0\n   0x000000000008a4fb <+591>:\tcvtsi2sd xmm0,rax\n   0x000000000008a500 <+596>:\tmovsd  xmm1,QWORD PTR [r15+0x181f]\n   0x000000000008a509 <+605>:\tdivsd  xmm0,xmm1\n   0x000000000008a50d <+609>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008a511 <+613>:\tadd    rax,0x10\n   0x000000000008a515 <+617>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008a519 <+621>:\tjae    0x8a590 <main+740>\n   0x000000000008a51f <+627>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008a523 <+631>:\tsub    rax,0xf\n   0x000000000008a527 <+635>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008a52f <+643>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008a534 <+648>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a538 <+652>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a53c <+656>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a540 <+660>:\ttest   al,0x1\n   0x000000000008a542 <+662>:\tje     0x8a55b <main+687>\n   0x000000000008a544 <+664>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a548 <+668>:\tshr    r11d,0x2\n   0x000000000008a54c <+672>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a550 <+676>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a554 <+680>:\tje     0x8a55b <main+687>\n   0x000000000008a556 <+682>:\tcall   0x833dc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a55b <+687>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a55f <+691>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a566 <+698>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a56a <+702>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a56e <+706>:\tcall   0x588f4 <_StringBase._interpolate>\n   0x000000000008a573 <+711>:\tmov    rdi,rax\n   0x000000000008a576 <+714>:\tcall   0x8abfc <print>\n   0x000000000008a57b <+719>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a57f <+723>:\tmov    rsp,rbp\n   0x000000000008a582 <+726>:\tpop    rbp\n   0x000000000008a583 <+727>:\tret\n   0x000000000008a584 <+728>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a58b <+735>:\tjmp    0x8a2be <main+18>\n   0x000000000008a590 <+740>:\tsub    rsp,0x10\n   0x000000000008a594 <+744>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a598 <+748>:\tcall   0x84d44 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a59d <+753>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a5a1 <+757>:\tadd    rsp,0x10\n   0x000000000008a5a5 <+761>:\tjmp    0x8a52f <main+643>\nEnd of assembler dump.\n"
    },
    {
      "name": "cachedCoins",
      "source": "int cachedCoins(int amount, List<int> coinTypes) {\n  int count = 0;\n\n  /// This is more efficient, looks at last two coins.\n  /// But not fast enough for the optional exercise.\n  if(coinTypes.length == 2) return (amount ~/ coinTypes[0] + 1);\n\n  /// Looks like \"100.[25,10,5,1]\"\n  String key = \"$amount.$coinTypes\";\n  /// Check whether we have seen this before\n  var cacheValue = cache[key];\n\n  if(cacheValue != null) return(cacheValue);\n\n  count = 0;\n  /// Same recursion as simple method, but caches all subqueries too\n  for(int i=0; i<=amount ~/ coinTypes[0]; i++){\n    count += cachedCoins(amount-(i*coinTypes[0]),coinTypes.sublist(1));     // sublist(1) is like lisp's '(rest ...)'\n  }\n\n  /// add this to the cache\n  cache[key] = count;\n  return count;\n}",
      "assembly": "Dump of assembler code for function cachedCoins:\n   0x000000000008a8f4 <+0>:\tpush   rbp\n   0x000000000008a8f5 <+1>:\tmov    rbp,rsp\n   0x000000000008a8f8 <+4>:\tsub    rsp,0x40\n   0x000000000008a8fc <+8>:\tmov    rcx,rdi\n   0x000000000008a8ff <+11>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x000000000008a903 <+15>:\tmov    rdi,rsi\n   0x000000000008a906 <+18>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a90a <+22>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a90e <+26>:\tjbe    0x8ab5f <cachedCoins+619>\n   0x000000000008a914 <+32>:\tmov    rax,QWORD PTR [rdi+0xf]\n   0x000000000008a918 <+36>:\tsar    rax,1\n   0x000000000008a91b <+39>:\tcmp    rax,0x2\n   0x000000000008a91f <+43>:\tjne    0x8a981 <cachedCoins+141>\n   0x000000000008a925 <+49>:\txor    ebx,ebx\n   0x000000000008a927 <+51>:\tcmp    rbx,rax\n   0x000000000008a92a <+54>:\tjae    0x8ab6b <cachedCoins+631>\n   0x000000000008a930 <+60>:\tmov    rax,QWORD PTR [rdi+0x17]\n   0x000000000008a934 <+64>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a938 <+68>:\tmov    rbx,rdx\n   0x000000000008a93b <+71>:\tsar    rbx,1\n   0x000000000008a93e <+74>:\tjae    0x8a945 <cachedCoins+81>\n   0x000000000008a940 <+76>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a945 <+81>:\tmov    rax,rcx\n   0x000000000008a948 <+84>:\ttest   rbx,rbx\n   0x000000000008a94b <+87>:\tje     0x8ab70 <cachedCoins+636>\n   0x000000000008a951 <+93>:\tcmp    rbx,0xffffffffffffffff\n   0x000000000008a955 <+97>:\tje     0x8ab84 <cachedCoins+656>\n   0x000000000008a95b <+103>:\tmovsxd rdx,eax\n   0x000000000008a95e <+106>:\tcmp    rdx,rax\n   0x000000000008a961 <+109>:\tjne    0x8a973 <cachedCoins+127>\n   0x000000000008a963 <+111>:\tmovsxd rdx,ebx\n   0x000000000008a966 <+114>:\tcmp    rdx,rbx\n   0x000000000008a969 <+117>:\tjne    0x8a973 <cachedCoins+127>\n   0x000000000008a96b <+119>:\tcdq\n   0x000000000008a96c <+120>:\tidiv   ebx\n   0x000000000008a96e <+122>:\tmovsxd rax,eax\n   0x000000000008a971 <+125>:\tjmp    0x8a978 <cachedCoins+132>\n   0x000000000008a973 <+127>:\tcqo\n   0x000000000008a975 <+129>:\tidiv   rbx\n   0x000000000008a978 <+132>:\tadd    rax,0x1\n   0x000000000008a97c <+136>:\tmov    rsp,rbp\n   0x000000000008a97f <+139>:\tpop    rbp\n   0x000000000008a980 <+140>:\tret\n   0x000000000008a981 <+141>:\tmov    rax,rcx\n   0x000000000008a984 <+144>:\tadd    rax,rax\n   0x000000000008a987 <+147>:\tjno    0x8a996 <cachedCoins+162>\n   0x000000000008a98d <+153>:\tcall   0x85048 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a992 <+158>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a996 <+162>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a99a <+166>:\tmov    r10d,0x6\n   0x000000000008a9a0 <+172>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a9a4 <+176>:\tcall   0x84dc4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a9a9 <+181>:\tmov    rcx,rax\n   0x000000000008a9ac <+184>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a9b0 <+188>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a9b4 <+192>:\tmov    r11,QWORD PTR [r15+0xbf]\n   0x000000000008a9bb <+199>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a9bf <+203>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a9c3 <+207>:\tmov    QWORD PTR [rcx+0x27],rdi\n   0x000000000008a9c7 <+211>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a9cb <+215>:\tcall   0x588f4 <_StringBase._interpolate>\n   0x000000000008a9d0 <+220>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a9d4 <+224>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008a9d8 <+228>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x000000000008a9df <+235>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008a9e3 <+239>:\tjne    0x8a9f5 <cachedCoins+257>\n   0x000000000008a9e9 <+245>:\tmov    rdx,QWORD PTR [r15+0x185f]\n   0x000000000008a9f0 <+252>:\tcall   0x83320 <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008a9f5 <+257>:\tmov    rdi,rax\n   0x000000000008a9f8 <+260>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a9fc <+264>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008aa00 <+268>:\tcall   0x6d488 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000008aa05 <+273>:\tmov    rcx,rax\n   0x000000000008aa08 <+276>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008aa0c <+280>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008aa10 <+284>:\tcmp    rdx,rcx\n   0x000000000008aa13 <+287>:\tjne    0x8aa22 <cachedCoins+302>\n   0x000000000008aa19 <+293>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008aa1d <+297>:\tjmp    0x8aa25 <cachedCoins+305>\n   0x000000000008aa22 <+302>:\tmov    rax,rcx\n   0x000000000008aa25 <+305>:\tcmp    rax,QWORD PTR [r14+0x70]\n   0x000000000008aa29 <+309>:\tje     0x8aa3e <cachedCoins+330>\n   0x000000000008aa2f <+315>:\tsar    rax,1\n   0x000000000008aa32 <+318>:\tjae    0x8aa39 <cachedCoins+325>\n   0x000000000008aa34 <+320>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008aa39 <+325>:\tmov    rsp,rbp\n   0x000000000008aa3c <+328>:\tpop    rbp\n   0x000000000008aa3d <+329>:\tret\n   0x000000000008aa3e <+330>:\txor    r9d,r9d\n   0x000000000008aa41 <+333>:\txor    r8d,r8d\n   0x000000000008aa44 <+336>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008aa48 <+340>:\tmov    QWORD PTR [rbp-0x30],r9\n   0x000000000008aa4c <+344>:\tmov    QWORD PTR [rbp-0x38],r8\n   0x000000000008aa50 <+348>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008aa54 <+352>:\tjbe    0x8ab8c <cachedCoins+664>\n   0x000000000008aa5a <+358>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008aa5e <+362>:\tsar    rax,1\n   0x000000000008aa61 <+365>:\txor    ebx,ebx\n   0x000000000008aa63 <+367>:\tcmp    rbx,rax\n   0x000000000008aa66 <+370>:\tjae    0x8ab98 <cachedCoins+676>\n   0x000000000008aa6c <+376>:\tmov    rax,QWORD PTR [rcx+0x17]\n   0x000000000008aa70 <+380>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008aa74 <+384>:\tmov    rbx,rdx\n   0x000000000008aa77 <+387>:\tsar    rbx,1\n   0x000000000008aa7a <+390>:\tjae    0x8aa81 <cachedCoins+397>\n   0x000000000008aa7c <+392>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008aa81 <+397>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008aa85 <+401>:\ttest   rbx,rbx\n   0x000000000008aa88 <+404>:\tje     0x8ab9d <cachedCoins+681>\n   0x000000000008aa8e <+410>:\tcmp    rbx,0xffffffffffffffff\n   0x000000000008aa92 <+414>:\tje     0x8abb6 <cachedCoins+706>\n   0x000000000008aa98 <+420>:\tmovsxd rdx,eax\n   0x000000000008aa9b <+423>:\tcmp    rdx,rax\n   0x000000000008aa9e <+426>:\tjne    0x8aab0 <cachedCoins+444>\n   0x000000000008aaa0 <+428>:\tmovsxd rdx,ebx\n   0x000000000008aaa3 <+431>:\tcmp    rdx,rbx\n   0x000000000008aaa6 <+434>:\tjne    0x8aab0 <cachedCoins+444>\n   0x000000000008aaa8 <+436>:\tcdq\n   0x000000000008aaa9 <+437>:\tidiv   ebx\n   0x000000000008aaab <+439>:\tmovsxd rax,eax\n   0x000000000008aaae <+442>:\tjmp    0x8aab5 <cachedCoins+449>\n   0x000000000008aab0 <+444>:\tcqo\n   0x000000000008aab2 <+446>:\tidiv   rbx\n   0x000000000008aab5 <+449>:\tcmp    r8,rax\n   0x000000000008aab8 <+452>:\tjg     0x8ab07 <cachedCoins+531>\n   0x000000000008aabe <+458>:\timul   rbx,r8\n   0x000000000008aac2 <+462>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008aac6 <+466>:\tsub    rax,rbx\n   0x000000000008aac9 <+469>:\tmov    rdi,rcx\n   0x000000000008aacc <+472>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008aad0 <+476>:\tmov    esi,0x1\n   0x000000000008aad5 <+481>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008aadc <+488>:\tcall   0x52dcc <List.sublist>\n   0x000000000008aae1 <+493>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x000000000008aae5 <+497>:\tmov    rsi,rax\n   0x000000000008aae8 <+500>:\tcall   0x8a8f4 <cachedCoins>\n   0x000000000008aaed <+505>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x000000000008aaf1 <+509>:\tadd    rcx,rax\n   0x000000000008aaf4 <+512>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x000000000008aaf8 <+516>:\tadd    rax,0x1\n   0x000000000008aafc <+520>:\tmov    r9,rcx\n   0x000000000008aaff <+523>:\tmov    r8,rax\n   0x000000000008ab02 <+526>:\tjmp    0x8aa44 <cachedCoins+336>\n   0x000000000008ab07 <+531>:\tmov    rax,r9\n   0x000000000008ab0a <+534>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008ab0e <+538>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x000000000008ab15 <+545>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008ab19 <+549>:\tjne    0x8ab2b <cachedCoins+567>\n   0x000000000008ab1f <+555>:\tmov    rdx,QWORD PTR [r15+0x185f]\n   0x000000000008ab26 <+562>:\tcall   0x83320 <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008ab2b <+567>:\tmov    rdx,rax\n   0x000000000008ab2e <+570>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x000000000008ab32 <+574>:\tmov    rax,rcx\n   0x000000000008ab35 <+577>:\tadd    rax,rax\n   0x000000000008ab38 <+580>:\tjno    0x8ab47 <cachedCoins+595>\n   0x000000000008ab3e <+586>:\tcall   0x85048 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008ab43 <+591>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008ab47 <+595>:\tmov    rdi,rdx\n   0x000000000008ab4a <+598>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008ab4e <+602>:\tmov    rdx,rax\n   0x000000000008ab51 <+605>:\tcall   0x5772c <_LinkedHashMapMixin.[]=>\n   0x000000000008ab56 <+610>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008ab5a <+614>:\tmov    rsp,rbp\n   0x000000000008ab5d <+617>:\tpop    rbp\n   0x000000000008ab5e <+618>:\tret\n   0x000000000008ab5f <+619>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab66 <+626>:\tjmp    0x8a914 <cachedCoins+32>\n   0x000000000008ab6b <+631>:\tcall   0x85308 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008ab70 <+636>:\tpush   rbx\n   0x000000000008ab71 <+637>:\tpush   rax\n   0x000000000008ab72 <+638>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008ab79 <+645>:\txor    r10d,r10d\n   0x000000000008ab7c <+648>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008ab83 <+655>:\tint3\n   0x000000000008ab84 <+656>:\tneg    rax\n   0x000000000008ab87 <+659>:\tjmp    0x8a978 <cachedCoins+132>\n   0x000000000008ab8c <+664>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab93 <+671>:\tjmp    0x8aa5a <cachedCoins+358>\n   0x000000000008ab98 <+676>:\tcall   0x85308 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008ab9d <+681>:\tpush   r9\n   0x000000000008ab9f <+683>:\tpush   r8\n   0x000000000008aba1 <+685>:\tpush   rbx\n   0x000000000008aba2 <+686>:\tpush   rcx\n   0x000000000008aba3 <+687>:\tpush   rax\n   0x000000000008aba4 <+688>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008abab <+695>:\txor    r10d,r10d\n   0x000000000008abae <+698>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008abb5 <+705>:\tint3\n   0x000000000008abb6 <+706>:\tneg    rax\n   0x000000000008abb9 <+709>:\tjmp    0x8aab5 <cachedCoins+449>\nEnd of assembler dump.\n"
    },
    {
      "name": "coins",
      "source": "int coins(int amount, List<int> coinTypes) {\n  int count = 0;\n\n  /// Just pennies available, so only one way to make change\n  if(coinTypes.length == 1) return (1);\n\n  /// Brute force recursion\n  for(int i=0; i<=amount ~/ coinTypes[0]; i++){\n    /// sublist(1) is like lisp's '(rest ...)'\n    count += coins(amount - (i*coinTypes[0]),coinTypes.sublist(1));\n  }\n\n  /// Uncomment if you want to see intermediate steps\n  /// print(\"there are \" + count.toString() +\" ways to count change for ${amount.toString()} using ${coinTypes} coins.\");\n  return count;\n}",
      "assembly": "Dump of assembler code for function coins:\n   0x000000000008ac98 <+0>:\tpush   rbp\n   0x000000000008ac99 <+1>:\tmov    rbp,rsp\n   0x000000000008ac9c <+4>:\tsub    rsp,0x28\n   0x000000000008aca0 <+8>:\tmov    r8,rdi\n   0x000000000008aca3 <+11>:\tmov    rcx,rsi\n   0x000000000008aca6 <+14>:\tmov    QWORD PTR [rbp-0x20],rdi\n   0x000000000008acaa <+18>:\tmov    QWORD PTR [rbp-0x28],rsi\n   0x000000000008acae <+22>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008acb2 <+26>:\tjbe    0x8ada4 <coins+268>\n   0x000000000008acb8 <+32>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008acbc <+36>:\tcmp    rax,0x2\n   0x000000000008acc0 <+40>:\tjne    0x8acd0 <coins+56>\n   0x000000000008acc6 <+46>:\tmov    eax,0x1\n   0x000000000008accb <+51>:\tmov    rsp,rbp\n   0x000000000008acce <+54>:\tpop    rbp\n   0x000000000008accf <+55>:\tret\n   0x000000000008acd0 <+56>:\txor    r10d,r10d\n   0x000000000008acd3 <+59>:\txor    r9d,r9d\n   0x000000000008acd6 <+62>:\tmov    QWORD PTR [rbp-0x10],r10\n   0x000000000008acda <+66>:\tmov    QWORD PTR [rbp-0x18],r9\n   0x000000000008acde <+70>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ace2 <+74>:\tjbe    0x8adb0 <coins+280>\n   0x000000000008ace8 <+80>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008acec <+84>:\tsar    rax,1\n   0x000000000008acef <+87>:\txor    ebx,ebx\n   0x000000000008acf1 <+89>:\tcmp    rbx,rax\n   0x000000000008acf4 <+92>:\tjae    0x8adbc <coins+292>\n   0x000000000008acfa <+98>:\tmov    rax,QWORD PTR [rcx+0x17]\n   0x000000000008acfe <+102>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008ad02 <+106>:\tmov    rbx,rdx\n   0x000000000008ad05 <+109>:\tsar    rbx,1\n   0x000000000008ad08 <+112>:\tjae    0x8ad0f <coins+119>\n   0x000000000008ad0a <+114>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008ad0f <+119>:\tmov    rax,r8\n   0x000000000008ad12 <+122>:\ttest   rbx,rbx\n   0x000000000008ad15 <+125>:\tje     0x8adc1 <coins+297>\n   0x000000000008ad1b <+131>:\tcmp    rbx,0xffffffffffffffff\n   0x000000000008ad1f <+135>:\tje     0x8addc <coins+324>\n   0x000000000008ad25 <+141>:\tmovsxd rdx,eax\n   0x000000000008ad28 <+144>:\tcmp    rdx,rax\n   0x000000000008ad2b <+147>:\tjne    0x8ad3d <coins+165>\n   0x000000000008ad2d <+149>:\tmovsxd rdx,ebx\n   0x000000000008ad30 <+152>:\tcmp    rdx,rbx\n   0x000000000008ad33 <+155>:\tjne    0x8ad3d <coins+165>\n   0x000000000008ad35 <+157>:\tcdq\n   0x000000000008ad36 <+158>:\tidiv   ebx\n   0x000000000008ad38 <+160>:\tmovsxd rax,eax\n   0x000000000008ad3b <+163>:\tjmp    0x8ad42 <coins+170>\n   0x000000000008ad3d <+165>:\tcqo\n   0x000000000008ad3f <+167>:\tidiv   rbx\n   0x000000000008ad42 <+170>:\tcmp    r9,rax\n   0x000000000008ad45 <+173>:\tjg     0x8ad9b <coins+259>\n   0x000000000008ad4b <+179>:\timul   rbx,r9\n   0x000000000008ad4f <+183>:\tmov    rax,r8\n   0x000000000008ad52 <+186>:\tsub    rax,rbx\n   0x000000000008ad55 <+189>:\tmov    rdi,rcx\n   0x000000000008ad58 <+192>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008ad5c <+196>:\tmov    esi,0x1\n   0x000000000008ad61 <+201>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008ad68 <+208>:\tcall   0x52dcc <List.sublist>\n   0x000000000008ad6d <+213>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008ad71 <+217>:\tmov    rsi,rax\n   0x000000000008ad74 <+220>:\tcall   0x8ac98 <coins>\n   0x000000000008ad79 <+225>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008ad7d <+229>:\tadd    rcx,rax\n   0x000000000008ad80 <+232>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008ad84 <+236>:\tadd    rdx,0x1\n   0x000000000008ad88 <+240>:\tmov    r10,rcx\n   0x000000000008ad8b <+243>:\tmov    r9,rdx\n   0x000000000008ad8e <+246>:\tmov    r8,QWORD PTR [rbp-0x20]\n   0x000000000008ad92 <+250>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008ad96 <+254>:\tjmp    0x8acd6 <coins+62>\n   0x000000000008ad9b <+259>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008ad9f <+263>:\tmov    rsp,rbp\n   0x000000000008ada2 <+266>:\tpop    rbp\n   0x000000000008ada3 <+267>:\tret\n   0x000000000008ada4 <+268>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008adab <+275>:\tjmp    0x8acb8 <coins+32>\n   0x000000000008adb0 <+280>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008adb7 <+287>:\tjmp    0x8ace8 <coins+80>\n   0x000000000008adbc <+292>:\tcall   0x85308 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008adc1 <+297>:\tpush   r10\n   0x000000000008adc3 <+299>:\tpush   r9\n   0x000000000008adc5 <+301>:\tpush   r8\n   0x000000000008adc7 <+303>:\tpush   rbx\n   0x000000000008adc8 <+304>:\tpush   rcx\n   0x000000000008adc9 <+305>:\tpush   rax\n   0x000000000008adca <+306>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008add1 <+313>:\txor    r10d,r10d\n   0x000000000008add4 <+316>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008addb <+323>:\tint3\n   0x000000000008addc <+324>:\tneg    rax\n   0x000000000008addf <+327>:\tjmp    0x8ad42 <coins+170>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "count-the-coins-3.dart",
  "functions": [
    {
      "name": "changes",
      "source": "BigInt changes(int amount, List<int> coins) {\n  final ways = List<BigInt>.filled(amount + 1, BigInt.zero)..[0] = BigInt.one;\n  for (final coin in coins) {\n    for (int j = coin; j <= amount; j++) {\n      ways[j] += ways[j - coin];\n    }\n  }\n  return ways[amount];\n}",
      "assembly": "Dump of assembler code for function changes:\n   0x00000000000918a8 <+0>:\tpush   rbp\n   0x00000000000918a9 <+1>:\tmov    rbp,rsp\n   0x00000000000918ac <+4>:\tsub    rsp,0x40\n   0x00000000000918b0 <+8>:\tmov    rbx,rdi\n   0x00000000000918b3 <+11>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x00000000000918b7 <+15>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x00000000000918bb <+19>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000918bf <+23>:\tjbe    0x91a80 <changes+472>\n   0x00000000000918c5 <+29>:\tmov    rax,rbx\n   0x00000000000918c8 <+32>:\tadd    rax,0x1\n   0x00000000000918cc <+36>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x00000000000918d0 <+40>:\tcall   0x91bbc <BigInt.zero>\n   0x00000000000918d5 <+45>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x00000000000918d9 <+49>:\tmov    rdx,rax\n   0x00000000000918dc <+52>:\tmov    rdi,QWORD PTR [r15+0x1897]\n   0x00000000000918e3 <+59>:\tcall   0x70cd0 <new _List.filled>\n   0x00000000000918e8 <+64>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x00000000000918ec <+68>:\tcall   0x91b7c <BigInt.one>\n   0x00000000000918f1 <+73>:\tmov    rcx,rax\n   0x00000000000918f4 <+76>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x00000000000918f8 <+80>:\txor    ebx,ebx\n   0x00000000000918fa <+82>:\tcmp    rbx,rax\n   0x00000000000918fd <+85>:\tjae    0x91a8c <changes+484>\n   0x0000000000091903 <+91>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x0000000000091907 <+95>:\tmov    rax,rcx\n   0x000000000009190a <+98>:\tlea    r13,[rdx+0x17]\n   0x000000000009190e <+102>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000091912 <+106>:\ttest   al,0x1\n   0x0000000000091914 <+108>:\tje     0x9192d <changes+133>\n   0x0000000000091916 <+110>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000009191a <+114>:\tshr    r11d,0x2\n   0x000000000009191e <+118>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091922 <+122>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091926 <+126>:\tje     0x9192d <changes+133>\n   0x0000000000091928 <+128>:\tcall   0x8a854 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000009192d <+133>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000091931 <+137>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x0000000000091935 <+141>:\tmov    rdx,rax\n   0x0000000000091938 <+144>:\tsar    rdx,1\n   0x000000000009193b <+147>:\tmov    QWORD PTR [rbp-0x40],rdx\n   0x000000000009193f <+151>:\txor    eax,eax\n   0x0000000000091941 <+153>:\tmov    r9,QWORD PTR [rbp-0x10]\n   0x0000000000091945 <+157>:\tmov    r8,QWORD PTR [rbp-0x20]\n   0x0000000000091949 <+161>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009194d <+165>:\tjbe    0x91a91 <changes+489>\n   0x0000000000091953 <+171>:\tmov    rbx,QWORD PTR [rcx+0xf]\n   0x0000000000091957 <+175>:\tsar    rbx,1\n   0x000000000009195a <+178>:\tcmp    rdx,rbx\n   0x000000000009195d <+181>:\tjne    0x91a64 <changes+444>\n   0x0000000000091963 <+187>:\tcmp    rax,rbx\n   0x0000000000091966 <+190>:\tjge    0x91a44 <changes+412>\n   0x000000000009196c <+196>:\tmov    rbx,QWORD PTR [rcx+0x17]\n   0x0000000000091970 <+200>:\tmov    rsi,QWORD PTR [rbx+rax*8+0x17]\n   0x0000000000091975 <+205>:\tmov    r10,rax\n   0x0000000000091978 <+208>:\tadd    r10,0x1\n   0x000000000009197c <+212>:\tmov    QWORD PTR [rbp-0x38],r10\n   0x0000000000091980 <+216>:\tmov    r12,rsi\n   0x0000000000091983 <+219>:\tsar    r12,1\n   0x0000000000091986 <+222>:\tjae    0x9198d <changes+229>\n   0x0000000000091988 <+224>:\tmov    r12,QWORD PTR [r12+r12*1+0x8]\n   0x000000000009198d <+229>:\tmov    QWORD PTR [rbp-0x30],r12\n   0x0000000000091991 <+233>:\tmov    r13,r12\n   0x0000000000091994 <+236>:\tmov    QWORD PTR [rbp-0x28],r13\n   0x0000000000091998 <+240>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009199c <+244>:\tjbe    0x91a9d <changes+501>\n   0x00000000000919a2 <+250>:\tcmp    r13,r9\n   0x00000000000919a5 <+253>:\tjg     0x91a33 <changes+395>\n   0x00000000000919ab <+259>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x00000000000919af <+263>:\tmov    rbx,r13\n   0x00000000000919b2 <+266>:\tcmp    rbx,rax\n   0x00000000000919b5 <+269>:\tjae    0x91aa9 <changes+513>\n   0x00000000000919bb <+275>:\tmov    rdi,QWORD PTR [r8+r13*8+0x17]\n   0x00000000000919c0 <+280>:\tmov    rsi,r13\n   0x00000000000919c3 <+283>:\tsub    rsi,r12\n   0x00000000000919c6 <+286>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x00000000000919ca <+290>:\tmov    rbx,rsi\n   0x00000000000919cd <+293>:\tcmp    rbx,rax\n   0x00000000000919d0 <+296>:\tjae    0x91aae <changes+518>\n   0x00000000000919d6 <+302>:\tmov    rax,QWORD PTR [r8+rsi*8+0x17]\n   0x00000000000919db <+307>:\tmov    rsi,rax\n   0x00000000000919de <+310>:\tcall   0x91ab8 <_BigIntImpl.+>\n   0x00000000000919e3 <+315>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x00000000000919e7 <+319>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x00000000000919eb <+323>:\tlea    r13,[rdx+rcx*8+0x17]\n   0x00000000000919f0 <+328>:\tmov    QWORD PTR [r13+0x0],rax\n   0x00000000000919f4 <+332>:\ttest   al,0x1\n   0x00000000000919f6 <+334>:\tje     0x91a0f <changes+359>\n   0x00000000000919f8 <+336>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x00000000000919fc <+340>:\tshr    r11d,0x2\n   0x0000000000091a00 <+344>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091a04 <+348>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091a08 <+352>:\tje     0x91a0f <changes+359>\n   0x0000000000091a0a <+354>:\tcall   0x8a854 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x0000000000091a0f <+359>:\tadd    rcx,0x1\n   0x0000000000091a13 <+363>:\tmov    r13,rcx\n   0x0000000000091a16 <+366>:\tmov    r9,QWORD PTR [rbp-0x10]\n   0x0000000000091a1a <+370>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000091a1e <+374>:\tmov    r8,QWORD PTR [rbp-0x20]\n   0x0000000000091a22 <+378>:\tmov    r10,QWORD PTR [rbp-0x38]\n   0x0000000000091a26 <+382>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x0000000000091a2a <+386>:\tmov    r12,QWORD PTR [rbp-0x30]\n   0x0000000000091a2e <+390>:\tjmp    0x91994 <changes+236>\n   0x0000000000091a33 <+395>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x0000000000091a37 <+399>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000091a3b <+403>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x0000000000091a3f <+407>:\tjmp    0x91941 <changes+153>\n   0x0000000000091a44 <+412>:\tmov    rdx,r9\n   0x0000000000091a47 <+415>:\tmov    rcx,r8\n   0x0000000000091a4a <+418>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000091a4e <+422>:\tmov    rbx,rdx\n   0x0000000000091a51 <+425>:\tcmp    rbx,rax\n   0x0000000000091a54 <+428>:\tjae    0x91ab3 <changes+523>\n   0x0000000000091a5a <+434>:\tmov    rax,QWORD PTR [rcx+rdx*8+0x17]\n   0x0000000000091a5f <+439>:\tmov    rsp,rbp\n   0x0000000000091a62 <+442>:\tpop    rbp\n   0x0000000000091a63 <+443>:\tret\n   0x0000000000091a64 <+444>:\tmov    rax,rcx\n   0x0000000000091a67 <+447>:\tcall   0x575a8 <new ConcurrentModificationError>\n   0x0000000000091a6c <+452>:\tmov    rcx,rax\n   0x0000000000091a6f <+455>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x0000000000091a73 <+459>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x0000000000091a77 <+463>:\tmov    rax,rcx\n   0x0000000000091a7a <+466>:\tcall   0x8a834 <stub _iso_stub_ThrowStub>\n   0x0000000000091a7f <+471>:\tint3\n   0x0000000000091a80 <+472>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091a87 <+479>:\tjmp    0x918c5 <changes+29>\n   0x0000000000091a8c <+484>:\tcall   0x8c780 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x0000000000091a91 <+489>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091a98 <+496>:\tjmp    0x91953 <changes+171>\n   0x0000000000091a9d <+501>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091aa4 <+508>:\tjmp    0x919a2 <changes+250>\n   0x0000000000091aa9 <+513>:\tcall   0x8c780 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x0000000000091aae <+518>:\tcall   0x8c780 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x0000000000091ab3 <+523>:\tcall   0x8c780 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print(changes(100, [25, 10, 5, 1]));\n  print(changes(100000, [100, 50, 25, 10, 5, 1]));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000091704 <+0>:\tpush   rbp\n   0x0000000000091705 <+1>:\tmov    rbp,rsp\n   0x0000000000091708 <+4>:\tsub    rsp,0x8\n   0x000000000009170c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091710 <+12>:\tjbe    0x917fd <main+249>\n   0x0000000000091716 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000009171a <+22>:\tmov    r10d,0x8\n   0x0000000000091720 <+28>:\tcall   0x8c23c <stub _iso_stub_AllocateArrayStub>\n   0x0000000000091725 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000091729 <+37>:\tmov    QWORD PTR [rax+0x17],0x32\n   0x0000000000091731 <+45>:\tmov    QWORD PTR [rax+0x1f],0x14\n   0x0000000000091739 <+53>:\tmov    QWORD PTR [rax+0x27],0xa\n   0x0000000000091741 <+61>:\tmov    QWORD PTR [rax+0x2f],0x2\n   0x0000000000091749 <+69>:\tmov    rdx,QWORD PTR [r15+0x23f]\n   0x0000000000091750 <+76>:\tcall   0x8b2fc <stub _iso_stub_AllocateGrowableArrayStub>\n   0x0000000000091755 <+81>:\tmov    rcx,rax\n   0x0000000000091758 <+84>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000009175c <+88>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x0000000000091760 <+92>:\tmov    QWORD PTR [rcx+0xf],0x8\n   0x0000000000091768 <+100>:\tmov    rsi,rcx\n   0x000000000009176b <+103>:\tmov    edi,0x64\n   0x0000000000091770 <+108>:\tcall   0x918a8 <changes>\n   0x0000000000091775 <+113>:\tmov    rdi,rax\n   0x0000000000091778 <+116>:\tcall   0x9180c <print>\n   0x000000000009177d <+121>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000091781 <+125>:\tmov    r10d,0xc\n   0x0000000000091787 <+131>:\tcall   0x8c23c <stub _iso_stub_AllocateArrayStub>\n   0x000000000009178c <+136>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000091790 <+140>:\tmov    QWORD PTR [rax+0x17],0xc8\n   0x0000000000091798 <+148>:\tmov    QWORD PTR [rax+0x1f],0x64\n   0x00000000000917a0 <+156>:\tmov    QWORD PTR [rax+0x27],0x32\n   0x00000000000917a8 <+164>:\tmov    QWORD PTR [rax+0x2f],0x14\n   0x00000000000917b0 <+172>:\tmov    QWORD PTR [rax+0x37],0xa\n   0x00000000000917b8 <+180>:\tmov    QWORD PTR [rax+0x3f],0x2\n   0x00000000000917c0 <+188>:\tmov    rdx,QWORD PTR [r15+0x23f]\n   0x00000000000917c7 <+195>:\tcall   0x8b2fc <stub _iso_stub_AllocateGrowableArrayStub>\n   0x00000000000917cc <+200>:\tmov    rcx,rax\n   0x00000000000917cf <+203>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x00000000000917d3 <+207>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x00000000000917d7 <+211>:\tmov    QWORD PTR [rcx+0xf],0xc\n   0x00000000000917df <+219>:\tmov    rsi,rcx\n   0x00000000000917e2 <+222>:\tmov    edi,0x186a0\n   0x00000000000917e7 <+227>:\tcall   0x918a8 <changes>\n   0x00000000000917ec <+232>:\tmov    rdi,rax\n   0x00000000000917ef <+235>:\tcall   0x9180c <print>\n   0x00000000000917f4 <+240>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x00000000000917f8 <+244>:\tmov    rsp,rbp\n   0x00000000000917fb <+247>:\tpop    rbp\n   0x00000000000917fc <+248>:\tret\n   0x00000000000917fd <+249>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091804 <+256>:\tjmp    0x91716 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "cullen-and-woodall-numbers.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  int n, num;\n  print(\"First 20 Cullen numbers:\");\n\n  for (n = 1; n <= 20; n++) {\n    num = n * (1 << n) + 1;\n    print(\"$num \");\n  }\n\n  print(\"\\n\\nFirst 20 Woodall numbers:\");\n\n  for (n = 1; n <= 20; n++) {\n    num = n * (1 << n) - 1;\n    print(\"$num \");\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x18\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a2c2 <main+366>\n   0x000000000008a166 <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a16d <+25>:\tcall   0x8a340 <printToConsole>\n   0x000000000008a172 <+30>:\tmov    esi,0x1\n   0x000000000008a177 <+35>:\tmov    edx,0x1\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008a180 <+44>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a184 <+48>:\tjbe    0x8a2ce <main+378>\n   0x000000000008a18a <+54>:\tcmp    rsi,0x14\n   0x000000000008a18e <+58>:\tjg     0x8a211 <main+189>\n   0x000000000008a194 <+64>:\tmov    rcx,rsi\n   0x000000000008a197 <+67>:\tmov    rax,rdx\n   0x000000000008a19a <+70>:\tcmp    rcx,0x3f\n   0x000000000008a19e <+74>:\tja     0x8a2da <main+390>\n   0x000000000008a1a4 <+80>:\tshl    rax,cl\n   0x000000000008a1a7 <+83>:\timul   rax,rsi\n   0x000000000008a1ab <+87>:\tmov    rcx,rax\n   0x000000000008a1ae <+90>:\tadd    rcx,0x1\n   0x000000000008a1b2 <+94>:\tmov    rax,rcx\n   0x000000000008a1b5 <+97>:\tadd    rax,rax\n   0x000000000008a1b8 <+100>:\tjno    0x8a1c7 <main+115>\n   0x000000000008a1be <+106>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1c3 <+111>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a1c7 <+115>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1cb <+119>:\tmov    r10d,0x4\n   0x000000000008a1d1 <+125>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a1d5 <+129>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a1da <+134>:\tmov    rcx,rax\n   0x000000000008a1dd <+137>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1e1 <+141>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a1e5 <+145>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x000000000008a1ec <+152>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a1f0 <+156>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a1f4 <+160>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1f9 <+165>:\tmov    rdi,rax\n   0x000000000008a1fc <+168>:\tcall   0x8a340 <printToConsole>\n   0x000000000008a201 <+173>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a205 <+177>:\tadd    rax,0x1\n   0x000000000008a209 <+181>:\tmov    rsi,rax\n   0x000000000008a20c <+184>:\tjmp    0x8a177 <main+35>\n   0x000000000008a211 <+189>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a218 <+196>:\tcall   0x8a340 <printToConsole>\n   0x000000000008a21d <+201>:\tmov    edx,0x1\n   0x000000000008a222 <+206>:\tmov    QWORD PTR [rbp-0x10],rdx\n   0x000000000008a226 <+210>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a22a <+214>:\tjbe    0x8a306 <main+434>\n   0x000000000008a230 <+220>:\tcmp    rdx,0x14\n   0x000000000008a234 <+224>:\tjg     0x8a2b9 <main+357>\n   0x000000000008a23a <+230>:\tmov    rcx,rdx\n   0x000000000008a23d <+233>:\tmov    eax,0x1\n   0x000000000008a242 <+238>:\tcmp    rcx,0x3f\n   0x000000000008a246 <+242>:\tja     0x8a312 <main+446>\n   0x000000000008a24c <+248>:\tshl    rax,cl\n   0x000000000008a24f <+251>:\timul   rax,rdx\n   0x000000000008a253 <+255>:\tmov    rcx,rax\n   0x000000000008a256 <+258>:\tsub    rcx,0x1\n   0x000000000008a25a <+262>:\tmov    rax,rcx\n   0x000000000008a25d <+265>:\tadd    rax,rax\n   0x000000000008a260 <+268>:\tjno    0x8a26f <main+283>\n   0x000000000008a266 <+274>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a26b <+279>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a26f <+283>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a273 <+287>:\tmov    r10d,0x4\n   0x000000000008a279 <+293>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a27d <+297>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a282 <+302>:\tmov    rcx,rax\n   0x000000000008a285 <+305>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a289 <+309>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a28d <+313>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x000000000008a294 <+320>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a298 <+324>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a29c <+328>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a2a1 <+333>:\tmov    rdi,rax\n   0x000000000008a2a4 <+336>:\tcall   0x8a340 <printToConsole>\n   0x000000000008a2a9 <+341>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a2ad <+345>:\tadd    rcx,0x1\n   0x000000000008a2b1 <+349>:\tmov    rdx,rcx\n   0x000000000008a2b4 <+352>:\tjmp    0x8a222 <main+206>\n   0x000000000008a2b9 <+357>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a2bd <+361>:\tmov    rsp,rbp\n   0x000000000008a2c0 <+364>:\tpop    rbp\n   0x000000000008a2c1 <+365>:\tret\n   0x000000000008a2c2 <+366>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2c9 <+373>:\tjmp    0x8a166 <main+18>\n   0x000000000008a2ce <+378>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2d5 <+385>:\tjmp    0x8a18a <main+54>\n   0x000000000008a2da <+390>:\ttest   rcx,rcx\n   0x000000000008a2dd <+393>:\tjl     0x8a2ea <main+406>\n   0x000000000008a2e3 <+399>:\txor    eax,eax\n   0x000000000008a2e5 <+401>:\tjmp    0x8a1a7 <main+83>\n   0x000000000008a2ea <+406>:\tmov    QWORD PTR [r14+0x750],rcx\n   0x000000000008a2f1 <+413>:\tpush   rsi\n   0x000000000008a2f2 <+414>:\tpush   rdx\n   0x000000000008a2f3 <+415>:\tpush   rcx\n   0x000000000008a2f4 <+416>:\tmov    rbx,QWORD PTR [r14+0x458]\n   0x000000000008a2fb <+423>:\txor    r10d,r10d\n   0x000000000008a2fe <+426>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a305 <+433>:\tint3\n   0x000000000008a306 <+434>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a30d <+441>:\tjmp    0x8a230 <main+220>\n   0x000000000008a312 <+446>:\ttest   rcx,rcx\n   0x000000000008a315 <+449>:\tjl     0x8a322 <main+462>\n   0x000000000008a31b <+455>:\txor    eax,eax\n   0x000000000008a31d <+457>:\tjmp    0x8a24f <main+251>\n   0x000000000008a322 <+462>:\tmov    QWORD PTR [r14+0x750],rcx\n   0x000000000008a329 <+469>:\tpush   rdx\n   0x000000000008a32a <+470>:\tpush   rcx\n   0x000000000008a32b <+471>:\tmov    rbx,QWORD PTR [r14+0x458]\n   0x000000000008a332 <+478>:\txor    r10d,r10d\n   0x000000000008a335 <+481>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a33c <+488>:\tint3\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "day-of-the-week.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  print('Yuletide holidays must be allowed in the following years:');\n  for (var year = 2008; year < 2121; year++) {\n    var date = DateTime(year, 12, 25);\n    if (date.weekday == DateTime.sunday) {\n      print(year);\n    }\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008f52c <+0>:\tpush   rbp\n   0x000000000008f52d <+1>:\tmov    rbp,rsp\n   0x000000000008f530 <+4>:\tsub    rsp,0x18\n   0x000000000008f534 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f538 <+12>:\tjbe    0x8f5f1 <main+197>\n   0x000000000008f53e <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008f545 <+25>:\tcall   0x8faa0 <printToConsole>\n   0x000000000008f54a <+30>:\tmov    esi,0x7d8\n   0x000000000008f54f <+35>:\tmov    QWORD PTR [rbp-0x8],rsi\n   0x000000000008f553 <+39>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f557 <+43>:\tjbe    0x8f5fd <main+209>\n   0x000000000008f55d <+49>:\tcmp    rsi,0x849\n   0x000000000008f564 <+56>:\tjge    0x8f5e8 <main+188>\n   0x000000000008f56a <+62>:\tcall   0x8fa94 <new DateTime>\n   0x000000000008f56f <+67>:\tmov    rdi,rax\n   0x000000000008f572 <+70>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008f576 <+74>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008f57a <+78>:\tcall   0x8f610 <new DateTime._internal>\n   0x000000000008f57f <+83>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008f583 <+87>:\tcall   0x77830 <DateTime._parts>\n   0x000000000008f588 <+92>:\tmov    rcx,rax\n   0x000000000008f58b <+95>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008f58f <+99>:\tsar    rax,1\n   0x000000000008f592 <+102>:\tmov    ebx,0x6\n   0x000000000008f597 <+107>:\tcmp    rbx,rax\n   0x000000000008f59a <+110>:\tjae    0x8f609 <main+221>\n   0x000000000008f5a0 <+116>:\tmov    rax,QWORD PTR [rcx+0x47]\n   0x000000000008f5a4 <+120>:\tcmp    rax,0xe\n   0x000000000008f5a8 <+124>:\tjne    0x8f5d8 <main+172>\n   0x000000000008f5ae <+130>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008f5b2 <+134>:\tmov    rax,rcx\n   0x000000000008f5b5 <+137>:\tadd    rax,rax\n   0x000000000008f5b8 <+140>:\tjno    0x8f5c7 <main+155>\n   0x000000000008f5be <+146>:\tcall   0x8a2c8 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008f5c3 <+151>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008f5c7 <+155>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008f5cb <+159>:\tcall   0x5ce50 <_StringBase._interpolateSingle>\n   0x000000000008f5d0 <+164>:\tmov    rdi,rax\n   0x000000000008f5d3 <+167>:\tcall   0x8faa0 <printToConsole>\n   0x000000000008f5d8 <+172>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008f5dc <+176>:\tadd    rcx,0x1\n   0x000000000008f5e0 <+180>:\tmov    rsi,rcx\n   0x000000000008f5e3 <+183>:\tjmp    0x8f54f <main+35>\n   0x000000000008f5e8 <+188>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008f5ec <+192>:\tmov    rsp,rbp\n   0x000000000008f5ef <+195>:\tpop    rbp\n   0x000000000008f5f0 <+196>:\tret\n   0x000000000008f5f1 <+197>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f5f8 <+204>:\tjmp    0x8f53e <main+18>\n   0x000000000008f5fd <+209>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f604 <+216>:\tjmp    0x8f55d <main+49>\n   0x000000000008f609 <+221>:\tcall   0x8a588 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "determine-sentence-type.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  List<String> spam = [\n    \"hi there, how are you today?\",\n    \"I'd like to present to you the washing machine 9001.\",\n    \"You have been nominated to win one of these!\",\n    \"Just make sure you don't break it\"\n  ];\n\n  for (var s in spam) {\n    print('$s -> ${sentenceType(s)}');\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a20c <+0>:\tpush   rbp\n   0x000000000008a20d <+1>:\tmov    rbp,rsp\n   0x000000000008a210 <+4>:\tsub    rsp,0x30\n   0x000000000008a214 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a218 <+12>:\tjbe    0x8a413 <main+519>\n   0x000000000008a21e <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a222 <+22>:\tmov    r10d,0x8\n   0x000000000008a228 <+28>:\tcall   0x84d08 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a22d <+33>:\tmov    rbx,rax\n   0x000000000008a230 <+36>:\tmov    QWORD PTR [rbp-0x18],rbx\n   0x000000000008a234 <+40>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a23b <+47>:\tmov    QWORD PTR [rbx+0x17],r11\n   0x000000000008a23f <+51>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a246 <+58>:\tmov    QWORD PTR [rbx+0x1f],r11\n   0x000000000008a24a <+62>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a251 <+69>:\tmov    QWORD PTR [rbx+0x27],r11\n   0x000000000008a255 <+73>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a25c <+80>:\tmov    QWORD PTR [rbx+0x2f],r11\n   0x000000000008a260 <+84>:\txor    eax,eax\n   0x000000000008a262 <+86>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a266 <+90>:\tjbe    0x8a41f <main+531>\n   0x000000000008a26c <+96>:\tcmp    rax,0x4\n   0x000000000008a270 <+100>:\tjge    0x8a40a <main+510>\n   0x000000000008a276 <+106>:\tmov    rsi,QWORD PTR [rbx+rax*8+0x17]\n   0x000000000008a27b <+111>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008a27f <+115>:\tmov    rdi,rax\n   0x000000000008a282 <+118>:\tadd    rdi,0x1\n   0x000000000008a286 <+122>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a28a <+126>:\tcmp    rsi,QWORD PTR [r14+0x70]\n   0x000000000008a28e <+130>:\tjne    0x8a2cf <main+195>\n   0x000000000008a294 <+136>:\tmov    rax,rsi\n   0x000000000008a297 <+139>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a29b <+143>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a29f <+147>:\ttest   al,0x1\n   0x000000000008a2a1 <+149>:\tmov    esi,0x3c\n   0x000000000008a2a6 <+154>:\tje     0x8a2ae <main+162>\n   0x000000000008a2a8 <+156>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a2ab <+159>:\tshr    esi,0xc\n   0x000000000008a2ae <+162>:\tsub    rsi,0x5e\n   0x000000000008a2b2 <+166>:\tcmp    rsi,0x1\n   0x000000000008a2b6 <+170>:\tjbe    0x8a2cf <main+195>\n   0x000000000008a2bc <+176>:\tmov    rbx,QWORD PTR [r15+0x107]\n   0x000000000008a2c3 <+183>:\tmov    r9,QWORD PTR [r15+0x1817]\n   0x000000000008a2ca <+190>:\tcall   0x8ad10 <assert type is String>\n   0x000000000008a2cf <+195>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a2d3 <+199>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a2d7 <+203>:\tmov    r10d,0x6\n   0x000000000008a2dd <+209>:\tcall   0x84d08 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2e2 <+214>:\tmov    rcx,rax\n   0x000000000008a2e5 <+217>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a2e9 <+221>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008a2ed <+225>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a2f1 <+229>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a2f8 <+236>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a2fc <+240>:\tmov    rdx,QWORD PTR [rax+0x7]\n   0x000000000008a300 <+244>:\tsar    rdx,1\n   0x000000000008a303 <+247>:\tsub    rdx,0x1\n   0x000000000008a307 <+251>:\tmov    rbx,rdx\n   0x000000000008a30a <+254>:\tadd    rbx,rbx\n   0x000000000008a30d <+257>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a312 <+262>:\tmov    QWORD PTR [rsp],rbx\n   0x000000000008a316 <+266>:\tcall   0x5b73c <_StringBase.[]>\n   0x000000000008a31b <+271>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a31f <+275>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a322 <+278>:\tshr    ecx,0xc\n   0x000000000008a325 <+281>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a32a <+286>:\tmov    r11,QWORD PTR [r15+0x4e7]\n   0x000000000008a331 <+293>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a335 <+297>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a339 <+301>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a33c <+304>:\ttest   al,0x10\n   0x000000000008a33e <+306>:\tjne    0x8a350 <main+324>\n   0x000000000008a344 <+312>:\tmov    rax,QWORD PTR [r15+0x182f]\n   0x000000000008a34b <+319>:\tjmp    0x8a3c1 <main+437>\n   0x000000000008a350 <+324>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a354 <+328>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a357 <+331>:\tshr    ecx,0xc\n   0x000000000008a35a <+334>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a35f <+339>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a366 <+346>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a36a <+350>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a36e <+354>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a371 <+357>:\ttest   al,0x10\n   0x000000000008a373 <+359>:\tjne    0x8a385 <main+377>\n   0x000000000008a379 <+365>:\tmov    rax,QWORD PTR [r15+0x183f]\n   0x000000000008a380 <+372>:\tjmp    0x8a3c1 <main+437>\n   0x000000000008a385 <+377>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a389 <+381>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a38c <+384>:\tshr    ecx,0xc\n   0x000000000008a38f <+387>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a394 <+392>:\tmov    r11,QWORD PTR [r15+0xbf]\n   0x000000000008a39b <+399>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a39f <+403>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3a3 <+407>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a3a6 <+410>:\ttest   al,0x10\n   0x000000000008a3a8 <+412>:\tjne    0x8a3ba <main+430>\n   0x000000000008a3ae <+418>:\tmov    rax,QWORD PTR [r15+0x1847]\n   0x000000000008a3b5 <+425>:\tjmp    0x8a3c1 <main+437>\n   0x000000000008a3ba <+430>:\tmov    rax,QWORD PTR [r15+0x184f]\n   0x000000000008a3c1 <+437>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a3c5 <+441>:\tlea    r13,[rdx+0x27]\n   0x000000000008a3c9 <+445>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a3cd <+449>:\ttest   al,0x1\n   0x000000000008a3cf <+451>:\tje     0x8a3e8 <main+476>\n   0x000000000008a3d1 <+453>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a3d5 <+457>:\tshr    r11d,0x2\n   0x000000000008a3d9 <+461>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a3dd <+465>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a3e1 <+469>:\tje     0x8a3e8 <main+476>\n   0x000000000008a3e3 <+471>:\tcall   0x83320 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a3e8 <+476>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008a3ec <+480>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a3f0 <+484>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008a3f5 <+489>:\tmov    rdi,rax\n   0x000000000008a3f8 <+492>:\tcall   0x8a42c <printToConsole>\n   0x000000000008a3fd <+497>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a401 <+501>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008a405 <+505>:\tjmp    0x8a262 <main+86>\n   0x000000000008a40a <+510>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a40e <+514>:\tmov    rsp,rbp\n   0x000000000008a411 <+517>:\tpop    rbp\n   0x000000000008a412 <+518>:\tret\n   0x000000000008a413 <+519>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a41a <+526>:\tjmp    0x8a21e <main+18>\n   0x000000000008a41f <+531>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a426 <+538>:\tjmp    0x8a26c <main+96>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "disarium-numbers.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n    var count = 0;\n    var i = 0;\n    while (count < 19) {\n        if (is_disarium(i)) {\n            stdout.write(\"$i \");\n            count++;\n        }\n        i++;\n    }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090c14 <+0>:\tpush   rbp\n   0x0000000000090c15 <+1>:\tmov    rbp,rsp\n   0x0000000000090c18 <+4>:\tsub    rsp,0x48\n   0x0000000000090c1c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090c20 <+12>:\tjbe    0x91028 <main+1044>\n   0x0000000000090c26 <+18>:\txor    esi,esi\n   0x0000000000090c28 <+20>:\txor    edx,edx\n   0x0000000000090c2a <+22>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x0000000000090c2e <+26>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x0000000000090c32 <+30>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090c36 <+34>:\tjbe    0x91034 <main+1056>\n   0x0000000000090c3c <+40>:\tcmp    rsi,0x13\n   0x0000000000090c40 <+44>:\tjge    0x9101f <main+1035>\n   0x0000000000090c46 <+50>:\tmov    rax,rdx\n   0x0000000000090c49 <+53>:\tadd    rax,rax\n   0x0000000000090c4c <+56>:\tjno    0x90c5b <main+71>\n   0x0000000000090c52 <+62>:\tcall   0x8b98c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x0000000000090c57 <+67>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x0000000000090c5b <+71>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000090c5f <+75>:\ttest   al,0x1\n   0x0000000000090c61 <+77>:\tmov    ecx,0x3c\n   0x0000000000090c66 <+82>:\tje     0x90c6e <main+90>\n   0x0000000000090c68 <+84>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x0000000000090c6b <+87>:\tshr    ecx,0xc\n   0x0000000000090c6e <+90>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000090c72 <+94>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090c76 <+98>:\tcall   QWORD PTR [rax+rcx*8+0x11d0]\n   0x0000000000090c7d <+105>:\tmov    rcx,QWORD PTR [rax+0x7]\n   0x0000000000090c81 <+109>:\tsar    rcx,1\n   0x0000000000090c84 <+112>:\tmov    r8,QWORD PTR [rbp-0x18]\n   0x0000000000090c88 <+116>:\tmov    rdi,rcx\n   0x0000000000090c8b <+119>:\txor    esi,esi\n   0x0000000000090c8d <+121>:\tmov    ecx,0xa\n   0x0000000000090c92 <+126>:\tmov    QWORD PTR [rbp-0x20],r8\n   0x0000000000090c96 <+130>:\tmov    QWORD PTR [rbp-0x28],rdi\n   0x0000000000090c9a <+134>:\tmov    QWORD PTR [rbp-0x30],rsi\n   0x0000000000090c9e <+138>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090ca2 <+142>:\tjbe    0x91040 <main+1068>\n   0x0000000000090ca8 <+148>:\tcmp    r8,0x0\n   0x0000000000090cac <+152>:\tjle    0x90f3d <main+809>\n   0x0000000000090cb2 <+158>:\tmov    rax,r8\n   0x0000000000090cb5 <+161>:\tmov    r11,rax\n   0x0000000000090cb8 <+164>:\tmov    rax,QWORD PTR [r15+0x1837]\n   0x0000000000090cbf <+171>:\timul   r11\n   0x0000000000090cc2 <+174>:\tsar    rdx,0x2\n   0x0000000000090cc6 <+178>:\tmov    rax,rdx\n   0x0000000000090cc9 <+181>:\tshr    rdx,0x3f\n   0x0000000000090ccd <+185>:\tadd    rdx,rax\n   0x0000000000090cd0 <+188>:\tmov    rax,r11\n   0x0000000000090cd3 <+191>:\tmov    r11d,0xa\n   0x0000000000090cd9 <+197>:\timul   rdx,r11\n   0x0000000000090cdd <+201>:\tsub    rax,rdx\n   0x0000000000090ce0 <+204>:\tjge    0x90ce9 <main+213>\n   0x0000000000090ce6 <+210>:\tadd    rax,r11\n   0x0000000000090ce9 <+213>:\tmov    rdx,rax\n   0x0000000000090cec <+216>:\tcmp    rdi,0x0\n   0x0000000000090cf0 <+220>:\tjl     0x90d56 <main+322>\n   0x0000000000090cf6 <+226>:\tmov    rbx,rdx\n   0x0000000000090cf9 <+229>:\tmov    rax,rdi\n   0x0000000000090cfc <+232>:\tmov    edx,0x1\n   0x0000000000090d01 <+237>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090d05 <+241>:\tjbe    0x9104c <main+1080>\n   0x0000000000090d0b <+247>:\tcmp    rax,0x0\n   0x0000000000090d0f <+251>:\tje     0x90d36 <main+290>\n   0x0000000000090d15 <+257>:\ttest   al,0x1\n   0x0000000000090d17 <+259>:\tje     0x90d21 <main+269>\n   0x0000000000090d1d <+265>:\timul   rdx,rbx\n   0x0000000000090d21 <+269>:\tsar    rax,1\n   0x0000000000090d24 <+272>:\tcmp    rax,0x0\n   0x0000000000090d28 <+276>:\tje     0x90d01 <main+237>\n   0x0000000000090d2a <+278>:\tmov    r9,rbx\n   0x0000000000090d2d <+281>:\timul   r9,rbx\n   0x0000000000090d31 <+285>:\tmov    rbx,r9\n   0x0000000000090d34 <+288>:\tjmp    0x90d01 <main+237>\n   0x0000000000090d36 <+290>:\tmov    rax,rdx\n   0x0000000000090d39 <+293>:\tadd    rax,rax\n   0x0000000000090d3c <+296>:\tjno    0x90d4b <main+311>\n   0x0000000000090d42 <+302>:\tcall   0x8b98c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x0000000000090d47 <+307>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x0000000000090d4b <+311>:\tmov    rcx,rax\n   0x0000000000090d4e <+314>:\tmov    rax,r8\n   0x0000000000090d51 <+317>:\tjmp    0x90ebd <main+681>\n   0x0000000000090d56 <+322>:\tmov    rax,rdx\n   0x0000000000090d59 <+325>:\tadd    rax,rax\n   0x0000000000090d5c <+328>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000090d60 <+332>:\tcall   0x89058 <int.toDouble>\n   0x0000000000090d65 <+337>:\tmov    rdx,rax\n   0x0000000000090d68 <+340>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x0000000000090d6c <+344>:\tmov    QWORD PTR [rbp-0x38],rdx\n   0x0000000000090d70 <+348>:\tmov    rax,rcx\n   0x0000000000090d73 <+351>:\tadd    rax,rax\n   0x0000000000090d76 <+354>:\tjno    0x90d85 <main+369>\n   0x0000000000090d7c <+360>:\tcall   0x8b98c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x0000000000090d81 <+365>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x0000000000090d85 <+369>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x0000000000090d89 <+373>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x0000000000090d8e <+378>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000090d92 <+382>:\tcall   0x89090 <new _Double.fromInteger>\n   0x0000000000090d97 <+387>:\tmov    rcx,rax\n   0x0000000000090d9a <+390>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x0000000000090d9e <+394>:\tmovsd  xmm2,QWORD PTR [rax+0x7]\n   0x0000000000090da3 <+399>:\tmovsd  xmm1,QWORD PTR [rcx+0x7]\n   0x0000000000090da8 <+404>:\txorps  xmm4,xmm4\n   0x0000000000090dab <+407>:\tmovsd  xmm3,QWORD PTR [r15+0x183f]\n   0x0000000000090db4 <+416>:\tcomisd xmm1,xmm4\n   0x0000000000090db8 <+420>:\tjp     0x90e0f <main+507>\n   0x0000000000090dba <+422>:\tje     0x90e8f <main+635>\n   0x0000000000090dc0 <+428>:\tcomisd xmm1,xmm3\n   0x0000000000090dc4 <+432>:\tje     0x90df9 <main+485>\n   0x0000000000090dc6 <+434>:\tmovsd  xmm0,QWORD PTR [r15+0x1847]\n   0x0000000000090dcf <+443>:\tcomisd xmm1,xmm0\n   0x0000000000090dd3 <+447>:\tje     0x90e02 <main+494>\n   0x0000000000090dd5 <+449>:\tmovsd  xmm0,QWORD PTR [r15+0x184f]\n   0x0000000000090dde <+458>:\tcomisd xmm1,xmm0\n   0x0000000000090de2 <+462>:\tjne    0x90e0f <main+507>\n   0x0000000000090de8 <+468>:\tmovsd  xmm3,xmm2\n   0x0000000000090dec <+472>:\tmulsd  xmm3,xmm2\n   0x0000000000090df0 <+476>:\tmulsd  xmm3,xmm2\n   0x0000000000090df4 <+480>:\tjmp    0x90e8f <main+635>\n   0x0000000000090df9 <+485>:\tmovsd  xmm3,xmm2\n   0x0000000000090dfd <+489>:\tjmp    0x90e8f <main+635>\n   0x0000000000090e02 <+494>:\tmovsd  xmm3,xmm2\n   0x0000000000090e06 <+498>:\tmulsd  xmm3,xmm2\n   0x0000000000090e0a <+502>:\tjmp    0x90e8f <main+635>\n   0x0000000000090e0f <+507>:\tcomisd xmm2,xmm3\n   0x0000000000090e13 <+511>:\tjp     0x90e1d <main+521>\n   0x0000000000090e15 <+513>:\tje     0x90e8f <main+635>\n   0x0000000000090e17 <+515>:\tcomisd xmm1,xmm2\n   0x0000000000090e1b <+519>:\tjnp    0x90e2b <main+535>\n   0x0000000000090e1d <+521>:\tmovsd  xmm3,QWORD PTR [r15+0x1857]\n   0x0000000000090e26 <+530>:\tjmp    0x90e8f <main+635>\n   0x0000000000090e2b <+535>:\tmovsd  xmm3,QWORD PTR [r15+0x185f]\n   0x0000000000090e34 <+544>:\tcomisd xmm2,xmm3\n   0x0000000000090e38 <+548>:\tje     0x90e5e <main+586>\n   0x0000000000090e3a <+550>:\tmovsd  xmm3,QWORD PTR [r15+0x1867]\n   0x0000000000090e43 <+559>:\tcomisd xmm1,xmm3\n   0x0000000000090e47 <+563>:\tjne    0x90e5e <main+586>\n   0x0000000000090e49 <+565>:\tcomisd xmm2,xmm4\n   0x0000000000090e4d <+569>:\tje     0x90e55 <main+577>\n   0x0000000000090e4f <+571>:\tsqrtsd xmm3,xmm2\n   0x0000000000090e53 <+575>:\tjmp    0x90e8f <main+635>\n   0x0000000000090e55 <+577>:\tmovsd  xmm3,xmm4\n   0x0000000000090e59 <+581>:\tjmp    0x90e8f <main+635>\n   0x0000000000090e5e <+586>:\tpush   rbp\n   0x0000000000090e5f <+587>:\tmov    rbp,rsp\n   0x0000000000090e62 <+590>:\tand    rsp,0xfffffffffffffff0\n   0x0000000000090e66 <+594>:\tmovaps xmm0,xmm2\n   0x0000000000090e69 <+597>:\tmov    rax,QWORD PTR [r14+0x558]\n   0x0000000000090e70 <+604>:\tmov    QWORD PTR [r14+0x748],rax\n   0x0000000000090e77 <+611>:\tcall   rax\n   0x0000000000090e79 <+613>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x0000000000090e84 <+624>:\tmovaps xmm3,xmm0\n   0x0000000000090e87 <+627>:\tlea    rsp,[rbp+0x0]\n   0x0000000000090e8b <+631>:\tmov    rsp,rbp\n   0x0000000000090e8e <+634>:\tpop    rbp\n   0x0000000000090e8f <+635>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x0000000000090e93 <+639>:\tadd    rax,0x10\n   0x0000000000090e97 <+643>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x0000000000090e9b <+647>:\tjae    0x91058 <main+1092>\n   0x0000000000090ea1 <+653>:\tmov    QWORD PTR [r14+0x48],rax\n   0x0000000000090ea5 <+657>:\tsub    rax,0xf\n   0x0000000000090ea9 <+661>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x0000000000090eb1 <+669>:\tmovsd  QWORD PTR [rax+0x7],xmm3\n   0x0000000000090eb6 <+674>:\tmov    rcx,rax\n   0x0000000000090eb9 <+677>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x0000000000090ebd <+681>:\ttest   cl,0x1\n   0x0000000000090ec0 <+684>:\tmov    edx,0x3c\n   0x0000000000090ec5 <+689>:\tje     0x90ecd <main+697>\n   0x0000000000090ec7 <+691>:\tmov    edx,DWORD PTR [rcx-0x1]\n   0x0000000000090eca <+694>:\tshr    edx,0xc\n   0x0000000000090ecd <+697>:\tmov    QWORD PTR [rsp],rcx\n   0x0000000000090ed1 <+701>:\tmov    rcx,rdx\n   0x0000000000090ed4 <+704>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090ed8 <+708>:\tcall   QWORD PTR [rax+rcx*8+0xa68]\n   0x0000000000090edf <+715>:\tsar    rax,1\n   0x0000000000090ee2 <+718>:\tjae    0x90ee9 <main+725>\n   0x0000000000090ee4 <+720>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x0000000000090ee9 <+725>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x0000000000090eed <+729>:\tadd    rcx,rax\n   0x0000000000090ef0 <+732>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x0000000000090ef4 <+736>:\txorps  xmm0,xmm0\n   0x0000000000090ef7 <+739>:\tcvtsi2sd xmm0,rax\n   0x0000000000090efc <+744>:\tmovsd  xmm1,QWORD PTR [r15+0x186f]\n   0x0000000000090f05 <+753>:\tdivsd  xmm0,xmm1\n   0x0000000000090f09 <+757>:\tcvttsd2si rax,xmm0\n   0x0000000000090f0e <+762>:\tmov    rdx,rax\n   0x0000000000090f11 <+765>:\tshl    rdx,1\n   0x0000000000090f14 <+768>:\tjo     0x91072 <main+1118>\n   0x0000000000090f1a <+774>:\tadd    rax,rax\n   0x0000000000090f1d <+777>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x0000000000090f21 <+781>:\tsub    rdx,0x1\n   0x0000000000090f25 <+785>:\tsar    rax,1\n   0x0000000000090f28 <+788>:\tjae    0x90f2f <main+795>\n   0x0000000000090f2a <+790>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x0000000000090f2f <+795>:\tmov    r8,rax\n   0x0000000000090f32 <+798>:\tmov    rdi,rdx\n   0x0000000000090f35 <+801>:\tmov    rsi,rcx\n   0x0000000000090f38 <+804>:\tjmp    0x90c8d <main+121>\n   0x0000000000090f3d <+809>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000090f41 <+813>:\tmov    rax,rsi\n   0x0000000000090f44 <+816>:\tmovsd  xmm1,QWORD PTR [r15+0x186f]\n   0x0000000000090f4d <+825>:\tcmp    rcx,rax\n   0x0000000000090f50 <+828>:\tjne    0x9100b <main+1015>\n   0x0000000000090f56 <+834>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090f5a <+838>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090f5e <+842>:\tmov    rax,QWORD PTR [rax+0x6c0]\n   0x0000000000090f65 <+849>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090f69 <+853>:\tjne    0x90f7b <main+871>\n   0x0000000000090f6f <+859>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000090f76 <+866>:\tcall   0x89c64 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090f7b <+871>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090f7f <+875>:\tmov    rax,QWORD PTR [rax+0x7c8]\n   0x0000000000090f86 <+882>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090f8a <+886>:\tjne    0x90f9c <main+904>\n   0x0000000000090f90 <+892>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000090f97 <+899>:\tcall   0x89c1c <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090f9c <+904>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090fa0 <+908>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000090fa7 <+915>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090fab <+919>:\tjne    0x90fbd <main+937>\n   0x0000000000090fb1 <+925>:\tmov    rdx,QWORD PTR [r15+0x1877]\n   0x0000000000090fb8 <+932>:\tcall   0x89c1c <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090fbd <+937>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000090fc1 <+941>:\tmov    r10d,0x4\n   0x0000000000090fc7 <+947>:\tmov    QWORD PTR [rbp-0x38],rax\n   0x0000000000090fcb <+951>:\tcall   0x8b708 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000090fd0 <+956>:\tmov    rcx,rax\n   0x0000000000090fd3 <+959>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090fd7 <+963>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x0000000000090fdb <+967>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x0000000000090fe2 <+974>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x0000000000090fe6 <+978>:\tmov    QWORD PTR [rsp],rcx\n   0x0000000000090fea <+982>:\tcall   0x5ef94 <_StringBase._interpolate>\n   0x0000000000090fef <+987>:\tmov    rdi,QWORD PTR [rbp-0x38]\n   0x0000000000090ff3 <+991>:\tmov    rsi,rax\n   0x0000000000090ff6 <+994>:\tcall   0x910a4 <_StdSink._write>\n   0x0000000000090ffb <+999>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x0000000000090fff <+1003>:\tadd    rcx,0x1\n   0x0000000000091003 <+1007>:\tmov    rsi,rcx\n   0x0000000000091006 <+1010>:\tjmp    0x9100f <main+1019>\n   0x000000000009100b <+1015>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000009100f <+1019>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000091013 <+1023>:\tadd    rcx,0x1\n   0x0000000000091017 <+1027>:\tmov    rdx,rcx\n   0x000000000009101a <+1030>:\tjmp    0x90c2a <main+22>\n   0x000000000009101f <+1035>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000091023 <+1039>:\tmov    rsp,rbp\n   0x0000000000091026 <+1042>:\tpop    rbp\n   0x0000000000091027 <+1043>:\tret\n   0x0000000000091028 <+1044>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009102f <+1051>:\tjmp    0x90c26 <main+18>\n   0x0000000000091034 <+1056>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009103b <+1063>:\tjmp    0x90c3c <main+40>\n   0x0000000000091040 <+1068>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091047 <+1075>:\tjmp    0x90ca8 <main+148>\n   0x000000000009104c <+1080>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091053 <+1087>:\tjmp    0x90d0b <main+247>\n   0x0000000000091058 <+1092>:\tsub    rsp,0x10\n   0x000000000009105c <+1096>:\tmovups XMMWORD PTR [rsp],xmm3\n   0x0000000000091060 <+1100>:\tcall   0x8b688 <stub _iso_stub_AllocateDoubleStub>\n   0x0000000000091065 <+1105>:\tmovups xmm3,XMMWORD PTR [rsp]\n   0x0000000000091069 <+1109>:\tadd    rsp,0x10\n   0x000000000009106d <+1113>:\tjmp    0x90eb1 <main+669>\n   0x0000000000091072 <+1118>:\tsub    rsp,0x20\n   0x0000000000091076 <+1122>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000009107a <+1126>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x000000000009107f <+1131>:\tpush   rcx\n   0x0000000000091080 <+1132>:\tmov    eax,0x4a\n   0x0000000000091085 <+1137>:\tmov    r11,QWORD PTR [r15+0x187f]\n   0x000000000009108c <+1144>:\tcall   QWORD PTR [r11+0x7]\n   0x0000000000091090 <+1148>:\tpop    rcx\n   0x0000000000091091 <+1149>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x0000000000091095 <+1153>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x000000000009109a <+1158>:\tadd    rsp,0x20\n   0x000000000009109e <+1162>:\tjmp    0x90f1d <main+777>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "dot-product.dart",
  "functions": [
    {
      "name": "dot",
      "source": "num dot(List<num> A, List<num> B){\n  if (A.length != B.length){\n    throw new Exception('Vectors must be of equal size');\n  }\n  num result = 0;\n  for (int i = 0; i < A.length; i++){\n    result += A[i] * B[i];\n  }\n  return result;\n}",
      "assembly": "Dump of assembler code for function dot:\n   0x000000000008a4a4 <+0>:\tpush   rbp\n   0x000000000008a4a5 <+1>:\tmov    rbp,rsp\n   0x000000000008a4a8 <+4>:\tsub    rsp,0x28\n   0x000000000008a4ac <+8>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x000000000008a4b0 <+12>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a4b4 <+16>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a4b8 <+20>:\tjbe    0x8a596 <dot+242>\n   0x000000000008a4be <+26>:\tmov    rax,QWORD PTR [rdi+0xf]\n   0x000000000008a4c2 <+30>:\tmov    rcx,QWORD PTR [rsi+0xf]\n   0x000000000008a4c6 <+34>:\tcmp    rax,rcx\n   0x000000000008a4c9 <+37>:\tjne    0x8a587 <dot+227>\n   0x000000000008a4cf <+43>:\txor    ecx,ecx\n   0x000000000008a4d1 <+45>:\txor    edx,edx\n   0x000000000008a4d3 <+47>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a4d7 <+51>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a4db <+55>:\tjbe    0x8a5a2 <dot+254>\n   0x000000000008a4e1 <+61>:\tmov    rax,QWORD PTR [rdi+0xf]\n   0x000000000008a4e5 <+65>:\tsar    rax,1\n   0x000000000008a4e8 <+68>:\tcmp    rdx,rax\n   0x000000000008a4eb <+71>:\tjge    0x8a57f <dot+219>\n   0x000000000008a4f1 <+77>:\tmov    rax,QWORD PTR [rdi+0x17]\n   0x000000000008a4f5 <+81>:\tmov    r8,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a4fa <+86>:\tmov    rax,QWORD PTR [rsi+0xf]\n   0x000000000008a4fe <+90>:\tsar    rax,1\n   0x000000000008a501 <+93>:\tmov    rbx,rdx\n   0x000000000008a504 <+96>:\tcmp    rbx,rax\n   0x000000000008a507 <+99>:\tjae    0x8a5ae <dot+266>\n   0x000000000008a50d <+105>:\tmov    rax,QWORD PTR [rsi+0x17]\n   0x000000000008a511 <+109>:\tmov    rbx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a516 <+114>:\tsar    r8,1\n   0x000000000008a519 <+117>:\tjae    0x8a520 <dot+124>\n   0x000000000008a51b <+119>:\tmov    r8,QWORD PTR [r8+r8*1+0x8]\n   0x000000000008a520 <+124>:\tsar    rbx,1\n   0x000000000008a523 <+127>:\tjae    0x8a52a <dot+134>\n   0x000000000008a525 <+129>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a52a <+134>:\timul   r8,rbx\n   0x000000000008a52e <+138>:\tmov    rax,r8\n   0x000000000008a531 <+141>:\tadd    rax,rax\n   0x000000000008a534 <+144>:\tjno    0x8a543 <dot+159>\n   0x000000000008a53a <+150>:\tcall   0x850d0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a53f <+155>:\tmov    QWORD PTR [rax+0x7],r8\n   0x000000000008a543 <+159>:\ttest   cl,0x1\n   0x000000000008a546 <+162>:\tmov    ebx,0x3c\n   0x000000000008a54b <+167>:\tje     0x8a553 <dot+175>\n   0x000000000008a54d <+169>:\tmov    ebx,DWORD PTR [rcx-0x1]\n   0x000000000008a550 <+172>:\tshr    ebx,0xc\n   0x000000000008a553 <+175>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008a558 <+180>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a55c <+184>:\tmov    rcx,rbx\n   0x000000000008a55f <+187>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a563 <+191>:\tcall   QWORD PTR [rax+rcx*8-0x60]\n   0x000000000008a567 <+195>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a56b <+199>:\tadd    rdx,0x1\n   0x000000000008a56f <+203>:\tmov    rcx,rax\n   0x000000000008a572 <+206>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a576 <+210>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a57a <+214>:\tjmp    0x8a4d3 <dot+47>\n   0x000000000008a57f <+219>:\tmov    rax,rcx\n   0x000000000008a582 <+222>:\tmov    rsp,rbp\n   0x000000000008a585 <+225>:\tpop    rbp\n   0x000000000008a586 <+226>:\tret\n   0x000000000008a587 <+227>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a58b <+231>:\tcall   0x8a5b4 <new Exception>\n   0x000000000008a590 <+236>:\tcall   0x83444 <stub _iso_stub_ThrowStub>\n   0x000000000008a595 <+241>:\tint3\n   0x000000000008a596 <+242>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a59d <+249>:\tjmp    0x8a4be <dot+26>\n   0x000000000008a5a2 <+254>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a5a9 <+261>:\tjmp    0x8a4e1 <dot+61>\n   0x000000000008a5ae <+266>:\tcall   0x85390 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main(){\n  var l = [1,3,-5];\n  var k = [4,-2,-1];\n  print(dot(l,k));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a334 <+0>:\tpush   rbp\n   0x000000000008a335 <+1>:\tmov    rbp,rsp\n   0x000000000008a338 <+4>:\tsub    rsp,0x10\n   0x000000000008a33c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a340 <+12>:\tjbe    0x8a3fb <main+199>\n   0x000000000008a346 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a34a <+22>:\tmov    r10d,0x6\n   0x000000000008a350 <+28>:\tcall   0x84e4c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a355 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a359 <+37>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a361 <+45>:\tmov    QWORD PTR [rax+0x1f],0x6\n   0x000000000008a369 <+53>:\tmov    QWORD PTR [rax+0x27],0xfffffffffffffff6\n   0x000000000008a371 <+61>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a378 <+68>:\tcall   0x83f0c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a37d <+73>:\tmov    rcx,rax\n   0x000000000008a380 <+76>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a384 <+80>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a388 <+84>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a38c <+88>:\tmov    QWORD PTR [rcx+0xf],0x6\n   0x000000000008a394 <+96>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a398 <+100>:\tmov    r10d,0x6\n   0x000000000008a39e <+106>:\tcall   0x84e4c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a3a3 <+111>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a3a7 <+115>:\tmov    QWORD PTR [rax+0x17],0x8\n   0x000000000008a3af <+123>:\tmov    QWORD PTR [rax+0x1f],0xfffffffffffffffc\n   0x000000000008a3b7 <+131>:\tmov    QWORD PTR [rax+0x27],0xfffffffffffffffe\n   0x000000000008a3bf <+139>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a3c6 <+146>:\tcall   0x83f0c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a3cb <+151>:\tmov    rcx,rax\n   0x000000000008a3ce <+154>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a3d2 <+158>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a3d6 <+162>:\tmov    QWORD PTR [rcx+0xf],0x6\n   0x000000000008a3de <+170>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a3e2 <+174>:\tmov    rsi,rcx\n   0x000000000008a3e5 <+177>:\tcall   0x8a4a4 <dot>\n   0x000000000008a3ea <+182>:\tmov    rdi,rax\n   0x000000000008a3ed <+185>:\tcall   0x8a408 <print>\n   0x000000000008a3f2 <+190>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a3f6 <+194>:\tmov    rsp,rbp\n   0x000000000008a3f9 <+197>:\tpop    rbp\n   0x000000000008a3fa <+198>:\tret\n   0x000000000008a3fb <+199>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a402 <+206>:\tjmp    0x8a346 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "empty-string.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  var empty = '';\n\n  if (empty.isEmpty) {\n    print('it is empty');\n  }\n\n  if (empty.isNotEmpty) {\n    print('it is not empty');\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a177 <main+35>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tcall   0x8a180 <printToConsole>\n   0x000000000008a16e <+26>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a172 <+30>:\tmov    rsp,rbp\n   0x000000000008a175 <+33>:\tpop    rbp\n   0x000000000008a176 <+34>:\tret\n   0x000000000008a177 <+35>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a17e <+42>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "euler-method.dart",
  "functions": [
    {
      "name": "ivpEuler",
      "source": "void ivpEuler(double Function(double, double) function, double initialValue, int step) {\n  stdout.write(' Step ${step.toString().padLeft(2)}: ');\n  var y = initialValue;\n  for (int t = startTime; t <= endTime; t += step) {\n    if (t % 10 == 0) {\n      stdout.write(y.toStringAsFixed(3).padLeft(7));\n    }\n    y += step * function(t.toDouble(), y);\n  }\n  print('');\n}",
      "assembly": "Dump of assembler code for function ivpEuler:\n   0x0000000000090d34 <+0>:\tpush   rbp\n   0x0000000000090d35 <+1>:\tmov    rbp,rsp\n   0x0000000000090d38 <+4>:\tsub    rsp,0x48\n   0x0000000000090d3c <+8>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x0000000000090d40 <+12>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090d44 <+16>:\tjbe    0x91073 <ivpEuler+831>\n   0x0000000000090d4a <+22>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090d4e <+26>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x0000000000090d55 <+33>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090d59 <+37>:\tjne    0x90d6b <ivpEuler+55>\n   0x0000000000090d5f <+43>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000090d66 <+50>:\tcall   0x89d60 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090d6b <+55>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090d6f <+59>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000090d76 <+66>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090d7a <+70>:\tjne    0x90d8c <ivpEuler+88>\n   0x0000000000090d80 <+76>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000090d87 <+83>:\tcall   0x89d18 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090d8c <+88>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090d90 <+92>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x0000000000090d97 <+99>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090d9b <+103>:\tjne    0x90dad <ivpEuler+121>\n   0x0000000000090da1 <+109>:\tmov    rdx,QWORD PTR [r15+0x1847]\n   0x0000000000090da8 <+116>:\tcall   0x89d18 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090dad <+121>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000090db1 <+125>:\tmov    r10d,0x6\n   0x0000000000090db7 <+131>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000090dbb <+135>:\tcall   0x8b804 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000090dc0 <+140>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x0000000000090dc4 <+144>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x0000000000090dcb <+151>:\tmov    QWORD PTR [rax+0x17],r11\n   0x0000000000090dcf <+155>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000090dd3 <+159>:\tmov    rdx,rcx\n   0x0000000000090dd6 <+162>:\tadd    rdx,rdx\n   0x0000000000090dd9 <+165>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x0000000000090ddd <+169>:\tmov    QWORD PTR [rsp],rdx\n   0x0000000000090de1 <+173>:\tcall   0x7afe0 <int.toString>\n   0x0000000000090de6 <+178>:\tmov    rdi,rax\n   0x0000000000090de9 <+181>:\tmov    esi,0x2\n   0x0000000000090dee <+186>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x0000000000090df5 <+193>:\tcall   0x88728 <String.padLeft>\n   0x0000000000090dfa <+198>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x0000000000090dfe <+202>:\tlea    r13,[rdx+0x1f]\n   0x0000000000090e02 <+206>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000090e06 <+210>:\ttest   al,0x1\n   0x0000000000090e08 <+212>:\tje     0x90e21 <ivpEuler+237>\n   0x0000000000090e0a <+214>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000090e0e <+218>:\tshr    r11d,0x2\n   0x0000000000090e12 <+222>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000090e16 <+226>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000090e1a <+230>:\tje     0x90e21 <ivpEuler+237>\n   0x0000000000090e1c <+232>:\tcall   0x89e1c <stub _iso_stub_ArrayWriteBarrierStub>\n   0x0000000000090e21 <+237>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x0000000000090e25 <+241>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x0000000000090e2c <+248>:\tmov    QWORD PTR [rax+0x27],r11\n   0x0000000000090e30 <+252>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000090e34 <+256>:\tcall   0x5cd34 <_StringBase._interpolate>\n   0x0000000000090e39 <+261>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x0000000000090e3d <+265>:\tmov    rsi,rax\n   0x0000000000090e40 <+268>:\tcall   0x911f0 <_StdSink._write>\n   0x0000000000090e45 <+273>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x0000000000090e49 <+277>:\tsar    rax,1\n   0x0000000000090e4c <+280>:\txorps  xmm0,xmm0\n   0x0000000000090e4f <+283>:\tcvtsi2sd xmm0,rax\n   0x0000000000090e54 <+288>:\tmovsd  QWORD PTR [rbp-0x38],xmm0\n   0x0000000000090e59 <+293>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000090e5d <+297>:\tmovsd  xmm1,QWORD PTR [r15+0x185f]\n   0x0000000000090e66 <+306>:\txor    esi,esi\n   0x0000000000090e68 <+308>:\tmov    ebx,0xa\n   0x0000000000090e6d <+313>:\tmov    QWORD PTR [rbp-0x28],rsi\n   0x0000000000090e71 <+317>:\tmovsd  QWORD PTR [rbp-0x30],xmm1\n   0x0000000000090e76 <+322>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090e7a <+326>:\tjbe    0x9107f <ivpEuler+843>\n   0x0000000000090e80 <+332>:\tcmp    rsi,0x64\n   0x0000000000090e84 <+336>:\tjg     0x91065 <ivpEuler+817>\n   0x0000000000090e8a <+342>:\tmov    rax,rsi\n   0x0000000000090e8d <+345>:\tmov    r11,rax\n   0x0000000000090e90 <+348>:\tmov    rax,QWORD PTR [r15+0x1867]\n   0x0000000000090e97 <+355>:\timul   r11\n   0x0000000000090e9a <+358>:\tsar    rdx,0x2\n   0x0000000000090e9e <+362>:\tmov    rax,rdx\n   0x0000000000090ea1 <+365>:\tshr    rdx,0x3f\n   0x0000000000090ea5 <+369>:\tadd    rdx,rax\n   0x0000000000090ea8 <+372>:\tmov    rax,r11\n   0x0000000000090eab <+375>:\tmov    r11d,0xa\n   0x0000000000090eb1 <+381>:\timul   rdx,r11\n   0x0000000000090eb5 <+385>:\tsub    rax,rdx\n   0x0000000000090eb8 <+388>:\tjge    0x90ec1 <ivpEuler+397>\n   0x0000000000090ebe <+394>:\tadd    rax,r11\n   0x0000000000090ec1 <+397>:\tmov    rdx,rax\n   0x0000000000090ec4 <+400>:\tcmp    rdx,0x0\n   0x0000000000090ec8 <+404>:\tjne    0x90fe4 <ivpEuler+688>\n   0x0000000000090ece <+410>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090ed2 <+414>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x0000000000090ed9 <+421>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090edd <+425>:\tjne    0x90eef <ivpEuler+443>\n   0x0000000000090ee3 <+431>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000090eea <+438>:\tcall   0x89d60 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090eef <+443>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x0000000000090ef4 <+448>:\tcomisd xmm0,xmm0\n   0x0000000000090ef8 <+452>:\tjnp    0x90f0a <ivpEuler+470>\n   0x0000000000090efe <+458>:\tmov    rdi,QWORD PTR [r15+0x186f]\n   0x0000000000090f05 <+465>:\tjmp    0x90fbe <ivpEuler+650>\n   0x0000000000090f0a <+470>:\tmovsd  xmm1,QWORD PTR [r15+0x1877]\n   0x0000000000090f13 <+479>:\tcomisd xmm0,xmm1\n   0x0000000000090f17 <+483>:\tjp     0x90f31 <ivpEuler+509>\n   0x0000000000090f1d <+489>:\tjb     0x90f31 <ivpEuler+509>\n   0x0000000000090f23 <+495>:\tmovsd  xmm2,QWORD PTR [r15+0x187f]\n   0x0000000000090f2c <+504>:\tjmp    0x90f4a <ivpEuler+534>\n   0x0000000000090f31 <+509>:\tmovsd  xmm2,QWORD PTR [r15+0x187f]\n   0x0000000000090f3a <+518>:\tcomisd xmm0,xmm2\n   0x0000000000090f3e <+522>:\tjp     0x90f82 <ivpEuler+590>\n   0x0000000000090f44 <+528>:\tja     0x90f82 <ivpEuler+590>\n   0x0000000000090f4a <+534>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x0000000000090f4e <+538>:\tadd    rax,0x10\n   0x0000000000090f52 <+542>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x0000000000090f56 <+546>:\tjae    0x9108b <ivpEuler+855>\n   0x0000000000090f5c <+552>:\tmov    QWORD PTR [r14+0x48],rax\n   0x0000000000090f60 <+556>:\tsub    rax,0xf\n   0x0000000000090f64 <+560>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x0000000000090f6c <+568>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x0000000000090f71 <+573>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000090f75 <+577>:\tcall   0x7acf0 <double.toString>\n   0x0000000000090f7a <+582>:\tmov    rdi,rax\n   0x0000000000090f7d <+585>:\tjmp    0x90fbe <ivpEuler+650>\n   0x0000000000090f82 <+590>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x0000000000090f86 <+594>:\tadd    rax,0x10\n   0x0000000000090f8a <+598>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x0000000000090f8e <+602>:\tjae    0x910b9 <ivpEuler+901>\n   0x0000000000090f94 <+608>:\tmov    QWORD PTR [r14+0x48],rax\n   0x0000000000090f98 <+612>:\tsub    rax,0xf\n   0x0000000000090f9c <+616>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x0000000000090fa4 <+624>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x0000000000090fa9 <+629>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x0000000000090fae <+634>:\tmov    QWORD PTR [rsp],0x6\n   0x0000000000090fb6 <+642>:\tcall   0x91164 <double._toStringAsFixed>\n   0x0000000000090fbb <+647>:\tmov    rdi,rax\n   0x0000000000090fbe <+650>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x0000000000090fc1 <+653>:\tshr    ecx,0xc\n   0x0000000000090fc4 <+656>:\tmov    esi,0x7\n   0x0000000000090fc9 <+661>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x0000000000090fd0 <+668>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090fd4 <+672>:\tcall   QWORD PTR [rax+rcx*8-0x60]\n   0x0000000000090fd8 <+676>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x0000000000090fdc <+680>:\tmov    rsi,rax\n   0x0000000000090fdf <+683>:\tcall   0x911f0 <_StdSink._write>\n   0x0000000000090fe4 <+688>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000090fe8 <+692>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x0000000000090fec <+696>:\tmovsd  xmm0,QWORD PTR [rbp-0x38]\n   0x0000000000090ff1 <+701>:\tmov    rax,rdx\n   0x0000000000090ff4 <+704>:\tadd    rax,rax\n   0x0000000000090ff7 <+707>:\tjno    0x91006 <ivpEuler+722>\n   0x0000000000090ffd <+713>:\tcall   0x8bafc <stub _iso_stub_AllocateMintSharedWithFPURegsStub>\n   0x0000000000091002 <+718>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x0000000000091006 <+722>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000009100a <+726>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000009100f <+731>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000091013 <+735>:\tcall   0x89688 <new _Double.fromInteger>\n   0x0000000000091018 <+740>:\tmovsd  xmm0,QWORD PTR [r15+0x1887]\n   0x0000000000091021 <+749>:\tmovsd  xmm1,QWORD PTR [rbp-0x30]\n   0x0000000000091026 <+754>:\tsubsd  xmm1,xmm0\n   0x000000000009102a <+758>:\tmovsd  xmm2,QWORD PTR [r15+0x188f]\n   0x0000000000091033 <+767>:\tmulsd  xmm1,xmm2\n   0x0000000000091037 <+771>:\tmovsd  xmm3,QWORD PTR [rbp-0x38]\n   0x000000000009103c <+776>:\tmulsd  xmm1,xmm3\n   0x0000000000091040 <+780>:\tmovsd  xmm4,QWORD PTR [rbp-0x30]\n   0x0000000000091045 <+785>:\taddsd  xmm4,xmm1\n   0x0000000000091049 <+789>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000009104d <+793>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x0000000000091051 <+797>:\tadd    rcx,rax\n   0x0000000000091054 <+800>:\tmovaps xmm1,xmm4\n   0x0000000000091057 <+803>:\tmov    rsi,rcx\n   0x000000000009105a <+806>:\tmov    rcx,rax\n   0x000000000009105d <+809>:\tmovaps xmm0,xmm3\n   0x0000000000091060 <+812>:\tjmp    0x90e68 <ivpEuler+308>\n   0x0000000000091065 <+817>:\tcall   0x910d4 <print>\n   0x000000000009106a <+822>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000009106e <+826>:\tmov    rsp,rbp\n   0x0000000000091071 <+829>:\tpop    rbp\n   0x0000000000091072 <+830>:\tret\n   0x0000000000091073 <+831>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009107a <+838>:\tjmp    0x90d4a <ivpEuler+22>\n   0x000000000009107f <+843>:\tcall   QWORD PTR [r14+0x238]\n   0x0000000000091086 <+850>:\tjmp    0x90e80 <ivpEuler+332>\n   0x000000000009108b <+855>:\tsub    rsp,0x30\n   0x000000000009108f <+859>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x0000000000091093 <+863>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x0000000000091098 <+868>:\tmovups XMMWORD PTR [rsp+0x20],xmm2\n   0x000000000009109d <+873>:\tcall   0x8b784 <stub _iso_stub_AllocateDoubleStub>\n   0x00000000000910a2 <+878>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x00000000000910a6 <+882>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x00000000000910ab <+887>:\tmovups xmm2,XMMWORD PTR [rsp+0x20]\n   0x00000000000910b0 <+892>:\tadd    rsp,0x30\n   0x00000000000910b4 <+896>:\tjmp    0x90f6c <ivpEuler+568>\n   0x00000000000910b9 <+901>:\tsub    rsp,0x10\n   0x00000000000910bd <+905>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x00000000000910c1 <+909>:\tcall   0x8b784 <stub _iso_stub_AllocateDoubleStub>\n   0x00000000000910c6 <+914>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x00000000000910ca <+918>:\tadd    rsp,0x10\n   0x00000000000910ce <+922>:\tjmp    0x90fa4 <ivpEuler+624>\nEnd of assembler dump.\n"
    },
    {
      "name": "analytic",
      "source": "void analytic() {\n  stdout.write('    Time: ');\n  for (int t = startTime; t <= endTime; t += 10) {\n    stdout.write(t.toString().padLeft(7));\n  }\n  stdout.write('\\nAnalytic: ');\n  for (int t = startTime; t <= endTime; t += 10) {\n    var temp = finalTemp + (initialTemp - finalTemp) * exp(-k * t);\n    stdout.write(temp.toStringAsFixed(3).padLeft(7));\n  }\n  print('');\n}",
      "assembly": "Dump of assembler code for function analytic:\n   0x0000000000091a6c <+0>:\tpush   rbp\n   0x0000000000091a6d <+1>:\tmov    rbp,rsp\n   0x0000000000091a70 <+4>:\tsub    rsp,0x20\n   0x0000000000091a74 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091a78 <+12>:\tjbe    0x91d12 <analytic+678>\n   0x0000000000091a7e <+18>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000091a82 <+22>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x0000000000091a89 <+29>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000091a8d <+33>:\tjne    0x91a9f <analytic+51>\n   0x0000000000091a93 <+39>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000091a9a <+46>:\tcall   0x89d60 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000091a9f <+51>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000091aa3 <+55>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000091aaa <+62>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000091aae <+66>:\tjne    0x91ac0 <analytic+84>\n   0x0000000000091ab4 <+72>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000091abb <+79>:\tcall   0x89d18 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000091ac0 <+84>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000091ac4 <+88>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x0000000000091acb <+95>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000091acf <+99>:\tjne    0x91ae1 <analytic+117>\n   0x0000000000091ad5 <+105>:\tmov    rdx,QWORD PTR [r15+0x1847]\n   0x0000000000091adc <+112>:\tcall   0x89d18 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000091ae1 <+117>:\tmov    rdi,rax\n   0x0000000000091ae4 <+120>:\tmov    rsi,QWORD PTR [r15+0x1bff]\n   0x0000000000091aeb <+127>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000091aef <+131>:\tcall   0x911f0 <_StdSink._write>\n   0x0000000000091af4 <+136>:\txor    edx,edx\n   0x0000000000091af6 <+138>:\tmov    QWORD PTR [rbp-0x10],rdx\n   0x0000000000091afa <+142>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091afe <+146>:\tjbe    0x91d1e <analytic+690>\n   0x0000000000091b04 <+152>:\tcmp    rdx,0x64\n   0x0000000000091b08 <+156>:\tjg     0x91b7a <analytic+270>\n   0x0000000000091b0e <+162>:\tmov    rax,rdx\n   0x0000000000091b11 <+165>:\tadd    rax,rax\n   0x0000000000091b14 <+168>:\tjno    0x91b23 <analytic+183>\n   0x0000000000091b1a <+174>:\tcall   0x8ba88 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x0000000000091b1f <+179>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x0000000000091b23 <+183>:\ttest   al,0x1\n   0x0000000000091b25 <+185>:\tmov    ecx,0x3c\n   0x0000000000091b2a <+190>:\tje     0x91b32 <analytic+198>\n   0x0000000000091b2c <+192>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x0000000000091b2f <+195>:\tshr    ecx,0xc\n   0x0000000000091b32 <+198>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000091b36 <+202>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000091b3a <+206>:\tcall   QWORD PTR [rax+rcx*8+0x22c0]\n   0x0000000000091b41 <+213>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x0000000000091b44 <+216>:\tshr    ecx,0xc\n   0x0000000000091b47 <+219>:\tmov    rdi,rax\n   0x0000000000091b4a <+222>:\tmov    esi,0x7\n   0x0000000000091b4f <+227>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x0000000000091b56 <+234>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000091b5a <+238>:\tcall   QWORD PTR [rax+rcx*8-0x60]\n   0x0000000000091b5e <+242>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000091b62 <+246>:\tmov    rsi,rax\n   0x0000000000091b65 <+249>:\tcall   0x911f0 <_StdSink._write>\n   0x0000000000091b6a <+254>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000091b6e <+258>:\tadd    rax,0xa\n   0x0000000000091b72 <+262>:\tmov    rdx,rax\n   0x0000000000091b75 <+265>:\tjmp    0x91af6 <analytic+138>\n   0x0000000000091b7a <+270>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000091b7e <+274>:\tmov    rsi,QWORD PTR [r15+0x1c07]\n   0x0000000000091b85 <+281>:\tcall   0x911f0 <_StdSink._write>\n   0x0000000000091b8a <+286>:\txor    eax,eax\n   0x0000000000091b8c <+288>:\tmovsd  xmm1,QWORD PTR [r15+0x188f]\n   0x0000000000091b95 <+297>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000091b99 <+301>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091b9d <+305>:\tjbe    0x91d2a <analytic+702>\n   0x0000000000091ba3 <+311>:\tcmp    rax,0x64\n   0x0000000000091ba7 <+315>:\tjg     0x91d04 <analytic+664>\n   0x0000000000091bad <+321>:\txorps  xmm0,xmm0\n   0x0000000000091bb0 <+324>:\tcvtsi2sd xmm0,rax\n   0x0000000000091bb5 <+329>:\tmulsd  xmm0,xmm1\n   0x0000000000091bb9 <+333>:\tpush   rbp\n   0x0000000000091bba <+334>:\tmov    rbp,rsp\n   0x0000000000091bbd <+337>:\tand    rsp,0xfffffffffffffff0\n   0x0000000000091bc1 <+341>:\tmov    rax,QWORD PTR [r14+0x5c8]\n   0x0000000000091bc8 <+348>:\tmov    QWORD PTR [r14+0x748],rax\n   0x0000000000091bcf <+355>:\tcall   rax\n   0x0000000000091bd1 <+357>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x0000000000091bdc <+368>:\tlea    rsp,[rbp+0x0]\n   0x0000000000091be0 <+372>:\tmov    rsp,rbp\n   0x0000000000091be3 <+375>:\tpop    rbp\n   0x0000000000091be4 <+376>:\tmovaps xmm1,xmm0\n   0x0000000000091be7 <+379>:\tmovsd  xmm0,QWORD PTR [r15+0x1c0f]\n   0x0000000000091bf0 <+388>:\tmulsd  xmm1,xmm0\n   0x0000000000091bf4 <+392>:\tmovsd  xmm2,QWORD PTR [r15+0x1887]\n   0x0000000000091bfd <+401>:\taddsd  xmm1,xmm2\n   0x0000000000091c01 <+405>:\tcomisd xmm1,xmm1\n   0x0000000000091c05 <+409>:\tjnp    0x91c17 <analytic+427>\n   0x0000000000091c0b <+415>:\tmov    rdi,QWORD PTR [r15+0x186f]\n   0x0000000000091c12 <+422>:\tjmp    0x91cd1 <analytic+613>\n   0x0000000000091c17 <+427>:\tmovsd  xmm3,QWORD PTR [r15+0x1877]\n   0x0000000000091c20 <+436>:\tcomisd xmm1,xmm3\n   0x0000000000091c24 <+440>:\tjp     0x91c3e <analytic+466>\n   0x0000000000091c2a <+446>:\tjb     0x91c3e <analytic+466>\n   0x0000000000091c30 <+452>:\tmovsd  xmm4,QWORD PTR [r15+0x187f]\n   0x0000000000091c39 <+461>:\tjmp    0x91c57 <analytic+491>\n   0x0000000000091c3e <+466>:\tmovsd  xmm4,QWORD PTR [r15+0x187f]\n   0x0000000000091c47 <+475>:\tcomisd xmm1,xmm4\n   0x0000000000091c4b <+479>:\tjp     0x91c92 <analytic+550>\n   0x0000000000091c51 <+485>:\tja     0x91c92 <analytic+550>\n   0x0000000000091c57 <+491>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x0000000000091c5b <+495>:\tadd    rax,0x10\n   0x0000000000091c5f <+499>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x0000000000091c63 <+503>:\tjae    0x91d36 <analytic+714>\n   0x0000000000091c69 <+509>:\tmov    QWORD PTR [r14+0x48],rax\n   0x0000000000091c6d <+513>:\tsub    rax,0xf\n   0x0000000000091c71 <+517>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x0000000000091c79 <+525>:\tmovsd  QWORD PTR [rax+0x7],xmm1\n   0x0000000000091c7e <+530>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000091c82 <+534>:\tcall   0x7acf0 <double.toString>\n   0x0000000000091c87 <+539>:\tmov    rcx,rax\n   0x0000000000091c8a <+542>:\tmov    rdi,rcx\n   0x0000000000091c8d <+545>:\tjmp    0x91cd1 <analytic+613>\n   0x0000000000091c92 <+550>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x0000000000091c96 <+554>:\tadd    rax,0x10\n   0x0000000000091c9a <+558>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x0000000000091c9e <+562>:\tjae    0x91d78 <analytic+780>\n   0x0000000000091ca4 <+568>:\tmov    QWORD PTR [r14+0x48],rax\n   0x0000000000091ca8 <+572>:\tsub    rax,0xf\n   0x0000000000091cac <+576>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x0000000000091cb4 <+584>:\tmovsd  QWORD PTR [rax+0x7],xmm1\n   0x0000000000091cb9 <+589>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x0000000000091cbe <+594>:\tmov    QWORD PTR [rsp],0x6\n   0x0000000000091cc6 <+602>:\tcall   0x91164 <double._toStringAsFixed>\n   0x0000000000091ccb <+607>:\tmov    rcx,rax\n   0x0000000000091cce <+610>:\tmov    rdi,rcx\n   0x0000000000091cd1 <+613>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x0000000000091cd4 <+616>:\tshr    ecx,0xc\n   0x0000000000091cd7 <+619>:\tmov    esi,0x7\n   0x0000000000091cdc <+624>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x0000000000091ce3 <+631>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000091ce7 <+635>:\tcall   QWORD PTR [rax+rcx*8-0x60]\n   0x0000000000091ceb <+639>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000091cef <+643>:\tmov    rsi,rax\n   0x0000000000091cf2 <+646>:\tcall   0x911f0 <_StdSink._write>\n   0x0000000000091cf7 <+651>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000091cfb <+655>:\tadd    rax,0xa\n   0x0000000000091cff <+659>:\tjmp    0x91b8c <analytic+288>\n   0x0000000000091d04 <+664>:\tcall   0x910d4 <print>\n   0x0000000000091d09 <+669>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000091d0d <+673>:\tmov    rsp,rbp\n   0x0000000000091d10 <+676>:\tpop    rbp\n   0x0000000000091d11 <+677>:\tret\n   0x0000000000091d12 <+678>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091d19 <+685>:\tjmp    0x91a7e <analytic+18>\n   0x0000000000091d1e <+690>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091d25 <+697>:\tjmp    0x91b04 <analytic+152>\n   0x0000000000091d2a <+702>:\tcall   QWORD PTR [r14+0x238]\n   0x0000000000091d31 <+709>:\tjmp    0x91ba3 <analytic+311>\n   0x0000000000091d36 <+714>:\tsub    rsp,0x50\n   0x0000000000091d3a <+718>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x0000000000091d3e <+722>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x0000000000091d43 <+727>:\tmovups XMMWORD PTR [rsp+0x20],xmm2\n   0x0000000000091d48 <+732>:\tmovups XMMWORD PTR [rsp+0x30],xmm3\n   0x0000000000091d4d <+737>:\tmovups XMMWORD PTR [rsp+0x40],xmm4\n   0x0000000000091d52 <+742>:\tcall   0x8b784 <stub _iso_stub_AllocateDoubleStub>\n   0x0000000000091d57 <+747>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x0000000000091d5b <+751>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x0000000000091d60 <+756>:\tmovups xmm2,XMMWORD PTR [rsp+0x20]\n   0x0000000000091d65 <+761>:\tmovups xmm3,XMMWORD PTR [rsp+0x30]\n   0x0000000000091d6a <+766>:\tmovups xmm4,XMMWORD PTR [rsp+0x40]\n   0x0000000000091d6f <+771>:\tadd    rsp,0x50\n   0x0000000000091d73 <+775>:\tjmp    0x91c79 <analytic+525>\n   0x0000000000091d78 <+780>:\tsub    rsp,0x10\n   0x0000000000091d7c <+784>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x0000000000091d80 <+788>:\tcall   0x8b784 <stub _iso_stub_AllocateDoubleStub>\n   0x0000000000091d85 <+793>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x0000000000091d89 <+797>:\tadd    rsp,0x10\n   0x0000000000091d8d <+801>:\tjmp    0x91cb4 <analytic+584>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  analytic();\n  ivpEuler(cooling, initialTemp, 2);\n  ivpEuler(cooling, initialTemp, 5);\n  ivpEuler(cooling, initialTemp, 10);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090cf0 <+0>:\tpush   rbp\n   0x0000000000090cf1 <+1>:\tmov    rbp,rsp\n   0x0000000000090cf4 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090cf8 <+8>:\tjbe    0x90d2a <main+58>\n   0x0000000000090cfe <+14>:\tcall   0x91a6c <analytic>\n   0x0000000000090d03 <+19>:\tmov    edi,0x2\n   0x0000000000090d08 <+24>:\tcall   0x90d34 <ivpEuler>\n   0x0000000000090d0d <+29>:\tmov    edi,0x5\n   0x0000000000090d12 <+34>:\tcall   0x90d34 <ivpEuler>\n   0x0000000000090d17 <+39>:\tmov    edi,0xa\n   0x0000000000090d1c <+44>:\tcall   0x90d34 <ivpEuler>\n   0x0000000000090d21 <+49>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000090d25 <+53>:\tmov    rsp,rbp\n   0x0000000000090d28 <+56>:\tpop    rbp\n   0x0000000000090d29 <+57>:\tret\n   0x0000000000090d2a <+58>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090d31 <+65>:\tjmp    0x90cfe <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "even-or-odd.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  for (var i = 1; i <= 10; i++) {\n    if (i % 2 != 0) {\n      print(\"$i is odd\");\n    } else {\n      print(\"$i is even\");\n    }\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x18\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a245 <main+241>\n   0x000000000008a166 <+18>:\tmov    ecx,0x1\n   0x000000000008a16b <+23>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a16f <+27>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a173 <+31>:\tjbe    0x8a251 <main+253>\n   0x000000000008a179 <+37>:\tcmp    rcx,0xa\n   0x000000000008a17d <+41>:\tjg     0x8a23c <main+232>\n   0x000000000008a183 <+47>:\ttest   cl,0x1\n   0x000000000008a186 <+50>:\tje     0x8a1e0 <main+140>\n   0x000000000008a18c <+56>:\tmov    rax,rcx\n   0x000000000008a18f <+59>:\tadd    rax,rax\n   0x000000000008a192 <+62>:\tjno    0x8a1a1 <main+77>\n   0x000000000008a198 <+68>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a19d <+73>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a1a1 <+77>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1a5 <+81>:\tmov    r10d,0x4\n   0x000000000008a1ab <+87>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a1af <+91>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a1b4 <+96>:\tmov    rcx,rax\n   0x000000000008a1b7 <+99>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1bb <+103>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a1bf <+107>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a1c6 <+114>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a1ca <+118>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a1ce <+122>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1d3 <+127>:\tmov    rdi,rax\n   0x000000000008a1d6 <+130>:\tcall   0x8a260 <printToConsole>\n   0x000000000008a1db <+135>:\tjmp    0x8a22f <main+219>\n   0x000000000008a1e0 <+140>:\tmov    rax,rcx\n   0x000000000008a1e3 <+143>:\tadd    rax,rax\n   0x000000000008a1e6 <+146>:\tjno    0x8a1f5 <main+161>\n   0x000000000008a1ec <+152>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1f1 <+157>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a1f5 <+161>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1f9 <+165>:\tmov    r10d,0x4\n   0x000000000008a1ff <+171>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a203 <+175>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a208 <+180>:\tmov    rcx,rax\n   0x000000000008a20b <+183>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a20f <+187>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a213 <+191>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a21a <+198>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a21e <+202>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a222 <+206>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a227 <+211>:\tmov    rdi,rax\n   0x000000000008a22a <+214>:\tcall   0x8a260 <printToConsole>\n   0x000000000008a22f <+219>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a233 <+223>:\tadd    rcx,0x1\n   0x000000000008a237 <+227>:\tjmp    0x8a16b <main+23>\n   0x000000000008a23c <+232>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a240 <+236>:\tmov    rsp,rbp\n   0x000000000008a243 <+239>:\tpop    rbp\n   0x000000000008a244 <+240>:\tret\n   0x000000000008a245 <+241>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a24c <+248>:\tjmp    0x8a166 <main+18>\n   0x000000000008a251 <+253>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a258 <+260>:\tjmp    0x8a179 <main+37>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "exponentiation-order.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  print('(5 ^ 3) ^ 2 = ${pow(pow(5, 3), 2)}');\n  print('5 ^ (3 ^ 2) = ${pow(5, (pow(3, 2)))}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x8\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a206 <main+178>\n   0x000000000008a166 <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a16d <+25>:\tcall   0x8a21c <print>\n   0x000000000008a172 <+30>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a176 <+34>:\tmov    r10d,0x4\n   0x000000000008a17c <+40>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a181 <+45>:\tmov    rcx,rax\n   0x000000000008a184 <+48>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a18b <+55>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008a18f <+59>:\tmov    ebx,0x5\n   0x000000000008a194 <+64>:\tmov    eax,0x9\n   0x000000000008a199 <+69>:\tmov    edx,0x1\n   0x000000000008a19e <+74>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1a2 <+78>:\tjbe    0x8a212 <main+190>\n   0x000000000008a1a8 <+84>:\tcmp    rax,0x0\n   0x000000000008a1ac <+88>:\tje     0x8a1d3 <main+127>\n   0x000000000008a1b2 <+94>:\ttest   al,0x1\n   0x000000000008a1b4 <+96>:\tje     0x8a1be <main+106>\n   0x000000000008a1ba <+102>:\timul   rdx,rbx\n   0x000000000008a1be <+106>:\tsar    rax,1\n   0x000000000008a1c1 <+109>:\tcmp    rax,0x0\n   0x000000000008a1c5 <+113>:\tje     0x8a19e <main+74>\n   0x000000000008a1c7 <+115>:\tmov    rsi,rbx\n   0x000000000008a1ca <+118>:\timul   rsi,rbx\n   0x000000000008a1ce <+122>:\tmov    rbx,rsi\n   0x000000000008a1d1 <+125>:\tjmp    0x8a19e <main+74>\n   0x000000000008a1d3 <+127>:\tmov    rax,rdx\n   0x000000000008a1d6 <+130>:\tadd    rax,rax\n   0x000000000008a1d9 <+133>:\tjno    0x8a1e8 <main+148>\n   0x000000000008a1df <+139>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1e4 <+144>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a1e8 <+148>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008a1ec <+152>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a1f0 <+156>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1f5 <+161>:\tmov    rdi,rax\n   0x000000000008a1f8 <+164>:\tcall   0x8a21c <print>\n   0x000000000008a1fd <+169>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a201 <+173>:\tmov    rsp,rbp\n   0x000000000008a204 <+176>:\tpop    rbp\n   0x000000000008a205 <+177>:\tret\n   0x000000000008a206 <+178>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a20d <+185>:\tjmp    0x8a166 <main+18>\n   0x000000000008a212 <+190>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a219 <+197>:\tjmp    0x8a1a8 <main+84>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "fibonacci-sequence-1.dart",
  "functions": [
    {
      "name": "fibRec",
      "source": "int fibRec(int n) => n==0 || n==1 ? n : fibRec(n-1) + fibRec(n-2);",
      "assembly": "Dump of assembler code for function fibRec:\n   0x000000000008a1c8 <+0>:\tpush   rbp\n   0x000000000008a1c9 <+1>:\tmov    rbp,rsp\n   0x000000000008a1cc <+4>:\tsub    rsp,0x10\n   0x000000000008a1d0 <+8>:\tmov    rax,rdi\n   0x000000000008a1d3 <+11>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a1d7 <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1db <+19>:\tjbe    0x8a224 <fibRec+92>\n   0x000000000008a1e1 <+25>:\tcmp    rax,0x0\n   0x000000000008a1e5 <+29>:\tje     0x8a21f <fibRec+87>\n   0x000000000008a1eb <+35>:\tcmp    rax,0x1\n   0x000000000008a1ef <+39>:\tje     0x8a21f <fibRec+87>\n   0x000000000008a1f5 <+45>:\tmov    rdi,rax\n   0x000000000008a1f8 <+48>:\tsub    rdi,0x1\n   0x000000000008a1fc <+52>:\tcall   0x8a1c8 <fibRec>\n   0x000000000008a201 <+57>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a205 <+61>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a209 <+65>:\tsub    rcx,0x2\n   0x000000000008a20d <+69>:\tmov    rdi,rcx\n   0x000000000008a210 <+72>:\tcall   0x8a1c8 <fibRec>\n   0x000000000008a215 <+77>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a219 <+81>:\tadd    rcx,rax\n   0x000000000008a21c <+84>:\tmov    rax,rcx\n   0x000000000008a21f <+87>:\tmov    rsp,rbp\n   0x000000000008a222 <+90>:\tpop    rbp\n   0x000000000008a223 <+91>:\tret\n   0x000000000008a224 <+92>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a22b <+99>:\tjmp    0x8a1e1 <fibRec+25>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "main() {\n  print(fib(11));\n  print(fibRec(11));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a1b4 <main+96>\n   0x000000000008a162 <+14>:\tmov    edx,0x1\n   0x000000000008a167 <+19>:\tmov    ecx,0x1\n   0x000000000008a16c <+24>:\tmov    eax,0x2\n   0x000000000008a171 <+29>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a175 <+33>:\tjbe    0x8a1bd <main+105>\n   0x000000000008a17b <+39>:\tcmp    rax,0xb\n   0x000000000008a17f <+43>:\tjge    0x8a191 <main+61>\n   0x000000000008a185 <+49>:\tadd    rdx,rcx\n   0x000000000008a188 <+52>:\tadd    rax,0x1\n   0x000000000008a18c <+56>:\txchg   rdx,rcx\n   0x000000000008a18f <+59>:\tjmp    0x8a171 <main+29>\n   0x000000000008a191 <+61>:\tmov    rdi,rcx\n   0x000000000008a194 <+64>:\tcall   0x8a230 <print>\n   0x000000000008a199 <+69>:\tmov    edi,0xb\n   0x000000000008a19e <+74>:\tcall   0x8a1c8 <fibRec>\n   0x000000000008a1a3 <+79>:\tmov    rdi,rax\n   0x000000000008a1a6 <+82>:\tcall   0x8a230 <print>\n   0x000000000008a1ab <+87>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1af <+91>:\tmov    rsp,rbp\n   0x000000000008a1b2 <+94>:\tpop    rbp\n   0x000000000008a1b3 <+95>:\tret\n   0x000000000008a1b4 <+96>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1bb <+103>:\tjmp    0x8a162 <main+14>\n   0x000000000008a1bd <+105>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1c4 <+112>:\tjmp    0x8a17b <main+39>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "fibonacci-sequence-2.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() => print(fibonacci(20));",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a178 <main+36>\n   0x000000000008a162 <+14>:\tcall   0x8a218 <fibonacci>\n   0x000000000008a167 <+19>:\tmov    rdi,rax\n   0x000000000008a16a <+22>:\tcall   0x8a184 <print>\n   0x000000000008a16f <+27>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a173 <+31>:\tmov    rsp,rbp\n   0x000000000008a176 <+34>:\tpop    rbp\n   0x000000000008a177 <+35>:\tret\n   0x000000000008a178 <+36>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a17f <+43>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "fibonacci-sequence-3.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() => print(fibonacci().take(20));",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a2a4 <+0>:\tpush   rbp\n   0x000000000008a2a5 <+1>:\tmov    rbp,rsp\n   0x000000000008a2a8 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2ac <+8>:\tjbe    0x8a2d7 <main+51>\n   0x000000000008a2b2 <+14>:\tmov    r10,QWORD PTR [r15+0x17f7]\n   0x000000000008a2b9 <+21>:\tcall   0x8a3d4 <fibonacci>\n   0x000000000008a2be <+26>:\tmov    rdi,rax\n   0x000000000008a2c1 <+29>:\tcall   0x8a374 <Iterable.take>\n   0x000000000008a2c6 <+34>:\tmov    rdi,rax\n   0x000000000008a2c9 <+37>:\tcall   0x8a2e0 <print>\n   0x000000000008a2ce <+42>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a2d2 <+46>:\tmov    rsp,rbp\n   0x000000000008a2d5 <+49>:\tpop    rbp\n   0x000000000008a2d6 <+50>:\tret\n   0x000000000008a2d7 <+51>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2de <+58>:\tjmp    0x8a2b2 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "fibonacci-sequence-4.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() => print(fibonacci().take(20));",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a2a4 <+0>:\tpush   rbp\n   0x000000000008a2a5 <+1>:\tmov    rbp,rsp\n   0x000000000008a2a8 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2ac <+8>:\tjbe    0x8a2d0 <main+44>\n   0x000000000008a2b2 <+14>:\tcall   0x8a3d0 <fibonacci>\n   0x000000000008a2b7 <+19>:\tmov    rdi,rax\n   0x000000000008a2ba <+22>:\tcall   0x8a370 <Iterable.take>\n   0x000000000008a2bf <+27>:\tmov    rdi,rax\n   0x000000000008a2c2 <+30>:\tcall   0x8a2dc <print>\n   0x000000000008a2c7 <+35>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a2cb <+39>:\tmov    rsp,rbp\n   0x000000000008a2ce <+42>:\tpop    rbp\n   0x000000000008a2cf <+43>:\tret\n   0x000000000008a2d0 <+44>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2d7 <+51>:\tjmp    0x8a2b2 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "find-if-a-point-is-within-a-triangle.dart",
  "functions": [
    {
      "name": "naivePointInTriangle",
      "source": "bool naivePointInTriangle(double x1, double y1, double x2, double y2, double x3,\n    double y3, double x, double y) {\n  double checkSide1 = side(x1, y1, x2, y2, x, y); // >= 0;\n  double checkSide2 = side(x2, y2, x3, y3, x, y); // >= 0;\n  double checkSide3 = side(x3, y3, x1, y1, x, y); // >= 0;\n  if (checkSide1 >= 0 && checkSide2 >= 0 && checkSide3 >= 0) {\n    return true;\n  } else {\n    return false;\n  }\n}",
      "assembly": "Dump of assembler code for function naivePointInTriangle:\n   0x000000000008ad3c <+0>:\txorps  xmm0,xmm0\n   0x000000000008ad3f <+3>:\tmovaps xmm7,xmm4\n   0x000000000008ad42 <+6>:\tsubsd  xmm7,xmm2\n   0x000000000008ad46 <+10>:\tmovsd  xmm8,QWORD PTR [rsp+0x10]\n   0x000000000008ad4d <+17>:\tsubsd  xmm8,xmm1\n   0x000000000008ad52 <+22>:\tmulsd  xmm7,xmm8\n   0x000000000008ad57 <+27>:\tmov    r11,QWORD PTR [r14+0x2b0]\n   0x000000000008ad5e <+34>:\tmovups xmm8,XMMWORD PTR [r11]\n   0x000000000008ad62 <+38>:\txorpd  xmm8,xmm3\n   0x000000000008ad67 <+43>:\taddsd  xmm8,xmm1\n   0x000000000008ad6c <+48>:\tmovsd  xmm9,QWORD PTR [rsp+0x8]\n   0x000000000008ad73 <+55>:\tsubsd  xmm9,xmm2\n   0x000000000008ad78 <+60>:\tmulsd  xmm8,xmm9\n   0x000000000008ad7d <+65>:\taddsd  xmm7,xmm8\n   0x000000000008ad82 <+70>:\tmovaps xmm8,xmm6\n   0x000000000008ad86 <+74>:\tsubsd  xmm8,xmm4\n   0x000000000008ad8b <+79>:\tmovsd  xmm9,QWORD PTR [rsp+0x10]\n   0x000000000008ad92 <+86>:\tsubsd  xmm9,xmm3\n   0x000000000008ad97 <+91>:\tmulsd  xmm8,xmm9\n   0x000000000008ad9c <+96>:\tmov    r11,QWORD PTR [r14+0x2b0]\n   0x000000000008ada3 <+103>:\tmovups xmm9,XMMWORD PTR [r11]\n   0x000000000008ada7 <+107>:\txorpd  xmm9,xmm5\n   0x000000000008adac <+112>:\taddsd  xmm9,xmm3\n   0x000000000008adb1 <+117>:\tmovsd  xmm3,QWORD PTR [rsp+0x8]\n   0x000000000008adb7 <+123>:\tsubsd  xmm3,xmm4\n   0x000000000008adbb <+127>:\tmulsd  xmm9,xmm3\n   0x000000000008adc0 <+132>:\taddsd  xmm8,xmm9\n   0x000000000008adc5 <+137>:\tsubsd  xmm2,xmm6\n   0x000000000008adc9 <+141>:\tmovsd  xmm3,QWORD PTR [rsp+0x10]\n   0x000000000008adcf <+147>:\tsubsd  xmm3,xmm5\n   0x000000000008add3 <+151>:\tmulsd  xmm2,xmm3\n   0x000000000008add7 <+155>:\tmov    r11,QWORD PTR [r14+0x2b0]\n   0x000000000008adde <+162>:\tmovups xmm3,XMMWORD PTR [r11]\n   0x000000000008ade2 <+166>:\txorpd  xmm3,xmm1\n   0x000000000008ade6 <+170>:\taddsd  xmm3,xmm5\n   0x000000000008adea <+174>:\tmovsd  xmm1,QWORD PTR [rsp+0x8]\n   0x000000000008adf0 <+180>:\tsubsd  xmm1,xmm6\n   0x000000000008adf4 <+184>:\tmulsd  xmm3,xmm1\n   0x000000000008adf8 <+188>:\taddsd  xmm2,xmm3\n   0x000000000008adfc <+192>:\tcomisd xmm7,xmm0\n   0x000000000008ae00 <+196>:\tjp     0x8ae32 <naivePointInTriangle+246>\n   0x000000000008ae06 <+202>:\tjb     0x8ae32 <naivePointInTriangle+246>\n   0x000000000008ae0c <+208>:\tcomisd xmm8,xmm0\n   0x000000000008ae11 <+213>:\tjp     0x8ae32 <naivePointInTriangle+246>\n   0x000000000008ae17 <+219>:\tjb     0x8ae32 <naivePointInTriangle+246>\n   0x000000000008ae1d <+225>:\tcomisd xmm2,xmm0\n   0x000000000008ae21 <+229>:\tjp     0x8ae32 <naivePointInTriangle+246>\n   0x000000000008ae27 <+235>:\tjb     0x8ae32 <naivePointInTriangle+246>\n   0x000000000008ae2d <+241>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008ae31 <+245>:\tret\n   0x000000000008ae32 <+246>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008ae39 <+253>:\tret\nEnd of assembler dump.\n"
    },
    {
      "name": "accuratePointInTriangle",
      "source": "bool accuratePointInTriangle(double x1, double y1, double x2, double y2,\n    double x3, double y3, double x, double y) {\n  if (!pointInTriangleBoundingBox(x1, y1, x2, y2, x3, y3, x, y)) {\n    return false;\n  }\n  if (naivePointInTriangle(x1, y1, x2, y2, x3, y3, x, y)) {\n    return true;\n  }\n  if (distanceSquarePointToSegment(x1, y1, x2, y2, x, y) <= EPS_SQUARE) {\n    return true;\n  }\n  if (distanceSquarePointToSegment(x2, y2, x3, y3, x, y) <= EPS_SQUARE) {\n    return true;\n  }\n  if (distanceSquarePointToSegment(x3, y3, x1, y1, x, y) <= EPS_SQUARE) {\n    return true;\n  }\n  return false;\n}",
      "assembly": "Dump of assembler code for function accuratePointInTriangle:\n   0x000000000008a6f4 <+0>:\tpush   rbp\n   0x000000000008a6f5 <+1>:\tmov    rbp,rsp\n   0x000000000008a6f8 <+4>:\tsub    rsp,0x48\n   0x000000000008a6fc <+8>:\tmovsd  xmm0,QWORD PTR [r15+0x18af]\n   0x000000000008a705 <+17>:\tmovaps xmm12,xmm1\n   0x000000000008a709 <+21>:\tmovaps xmm11,xmm2\n   0x000000000008a70d <+25>:\tmovaps xmm10,xmm3\n   0x000000000008a711 <+29>:\tmovaps xmm9,xmm4\n   0x000000000008a715 <+33>:\tmovaps xmm8,xmm5\n   0x000000000008a719 <+37>:\tmovaps xmm7,xmm6\n   0x000000000008a71c <+40>:\tmovsd  QWORD PTR [rbp-0x8],xmm1\n   0x000000000008a721 <+45>:\tmovsd  QWORD PTR [rbp-0x10],xmm2\n   0x000000000008a726 <+50>:\tmovsd  QWORD PTR [rbp-0x18],xmm3\n   0x000000000008a72b <+55>:\tmovsd  QWORD PTR [rbp-0x20],xmm4\n   0x000000000008a730 <+60>:\tmovsd  QWORD PTR [rbp-0x28],xmm5\n   0x000000000008a735 <+65>:\tmovsd  QWORD PTR [rbp-0x30],xmm6\n   0x000000000008a73a <+70>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a73e <+74>:\tjbe    0x8ad2f <accuratePointInTriangle+1595>\n   0x000000000008a744 <+80>:\tmovaps xmm1,xmm10\n   0x000000000008a748 <+84>:\tcomisd xmm1,xmm8\n   0x000000000008a74d <+89>:\tjp     0x8a75a <accuratePointInTriangle+102>\n   0x000000000008a74f <+91>:\tje     0x8a767 <accuratePointInTriangle+115>\n   0x000000000008a751 <+93>:\tjb     0x8a774 <accuratePointInTriangle+128>\n   0x000000000008a753 <+95>:\tmovsd  xmm1,xmm8\n   0x000000000008a758 <+100>:\tjmp    0x8a774 <accuratePointInTriangle+128>\n   0x000000000008a75a <+102>:\tmov    rax,QWORD PTR [r14+0x2a8]\n   0x000000000008a761 <+109>:\tmovsd  xmm1,QWORD PTR [rax]\n   0x000000000008a765 <+113>:\tjmp    0x8a774 <accuratePointInTriangle+128>\n   0x000000000008a767 <+115>:\tmovmskpd eax,xmm1\n   0x000000000008a76b <+119>:\ttest   al,0x1\n   0x000000000008a76d <+121>:\tjne    0x8a774 <accuratePointInTriangle+128>\n   0x000000000008a76f <+123>:\tmovsd  xmm1,xmm8\n   0x000000000008a774 <+128>:\tmovaps xmm2,xmm12\n   0x000000000008a778 <+132>:\tcomisd xmm2,xmm1\n   0x000000000008a77c <+136>:\tjp     0x8a788 <accuratePointInTriangle+148>\n   0x000000000008a77e <+138>:\tje     0x8a795 <accuratePointInTriangle+161>\n   0x000000000008a780 <+140>:\tjb     0x8a7a1 <accuratePointInTriangle+173>\n   0x000000000008a782 <+142>:\tmovsd  xmm2,xmm1\n   0x000000000008a786 <+146>:\tjmp    0x8a7a1 <accuratePointInTriangle+173>\n   0x000000000008a788 <+148>:\tmov    rax,QWORD PTR [r14+0x2a8]\n   0x000000000008a78f <+155>:\tmovsd  xmm2,QWORD PTR [rax]\n   0x000000000008a793 <+159>:\tjmp    0x8a7a1 <accuratePointInTriangle+173>\n   0x000000000008a795 <+161>:\tmovmskpd eax,xmm2\n   0x000000000008a799 <+165>:\ttest   al,0x1\n   0x000000000008a79b <+167>:\tjne    0x8a7a1 <accuratePointInTriangle+173>\n   0x000000000008a79d <+169>:\tmovsd  xmm2,xmm1\n   0x000000000008a7a1 <+173>:\tsubsd  xmm2,xmm0\n   0x000000000008a7a5 <+177>:\tmovaps xmm1,xmm10\n   0x000000000008a7a9 <+181>:\tcomisd xmm1,xmm8\n   0x000000000008a7ae <+186>:\tjp     0x8a7bb <accuratePointInTriangle+199>\n   0x000000000008a7b0 <+188>:\tje     0x8a7c8 <accuratePointInTriangle+212>\n   0x000000000008a7b2 <+190>:\tja     0x8a7d5 <accuratePointInTriangle+225>\n   0x000000000008a7b4 <+192>:\tmovsd  xmm1,xmm8\n   0x000000000008a7b9 <+197>:\tjmp    0x8a7d5 <accuratePointInTriangle+225>\n   0x000000000008a7bb <+199>:\tmov    rax,QWORD PTR [r14+0x2a8]\n   0x000000000008a7c2 <+206>:\tmovsd  xmm1,QWORD PTR [rax]\n   0x000000000008a7c6 <+210>:\tjmp    0x8a7d5 <accuratePointInTriangle+225>\n   0x000000000008a7c8 <+212>:\tmovmskpd eax,xmm1\n   0x000000000008a7cc <+216>:\ttest   al,0x1\n   0x000000000008a7ce <+218>:\tje     0x8a7d5 <accuratePointInTriangle+225>\n   0x000000000008a7d0 <+220>:\tmovsd  xmm1,xmm8\n   0x000000000008a7d5 <+225>:\tmovaps xmm3,xmm12\n   0x000000000008a7d9 <+229>:\tcomisd xmm3,xmm1\n   0x000000000008a7dd <+233>:\tjp     0x8a7e9 <accuratePointInTriangle+245>\n   0x000000000008a7df <+235>:\tje     0x8a7f6 <accuratePointInTriangle+258>\n   0x000000000008a7e1 <+237>:\tja     0x8a802 <accuratePointInTriangle+270>\n   0x000000000008a7e3 <+239>:\tmovsd  xmm3,xmm1\n   0x000000000008a7e7 <+243>:\tjmp    0x8a802 <accuratePointInTriangle+270>\n   0x000000000008a7e9 <+245>:\tmov    rax,QWORD PTR [r14+0x2a8]\n   0x000000000008a7f0 <+252>:\tmovsd  xmm3,QWORD PTR [rax]\n   0x000000000008a7f4 <+256>:\tjmp    0x8a802 <accuratePointInTriangle+270>\n   0x000000000008a7f6 <+258>:\tmovmskpd eax,xmm3\n   0x000000000008a7fa <+262>:\ttest   al,0x1\n   0x000000000008a7fc <+264>:\tje     0x8a802 <accuratePointInTriangle+270>\n   0x000000000008a7fe <+266>:\tmovsd  xmm3,xmm1\n   0x000000000008a802 <+270>:\taddsd  xmm3,xmm0\n   0x000000000008a806 <+274>:\tmovaps xmm1,xmm9\n   0x000000000008a80a <+278>:\tcomisd xmm1,xmm7\n   0x000000000008a80e <+282>:\tjp     0x8a81a <accuratePointInTriangle+294>\n   0x000000000008a810 <+284>:\tje     0x8a827 <accuratePointInTriangle+307>\n   0x000000000008a812 <+286>:\tjb     0x8a833 <accuratePointInTriangle+319>\n   0x000000000008a814 <+288>:\tmovsd  xmm1,xmm7\n   0x000000000008a818 <+292>:\tjmp    0x8a833 <accuratePointInTriangle+319>\n   0x000000000008a81a <+294>:\tmov    rax,QWORD PTR [r14+0x2a8]\n   0x000000000008a821 <+301>:\tmovsd  xmm1,QWORD PTR [rax]\n   0x000000000008a825 <+305>:\tjmp    0x8a833 <accuratePointInTriangle+319>\n   0x000000000008a827 <+307>:\tmovmskpd eax,xmm1\n   0x000000000008a82b <+311>:\ttest   al,0x1\n   0x000000000008a82d <+313>:\tjne    0x8a833 <accuratePointInTriangle+319>\n   0x000000000008a82f <+315>:\tmovsd  xmm1,xmm7\n   0x000000000008a833 <+319>:\tmovaps xmm4,xmm11\n   0x000000000008a837 <+323>:\tcomisd xmm4,xmm1\n   0x000000000008a83b <+327>:\tjp     0x8a847 <accuratePointInTriangle+339>\n   0x000000000008a83d <+329>:\tje     0x8a854 <accuratePointInTriangle+352>\n   0x000000000008a83f <+331>:\tjb     0x8a860 <accuratePointInTriangle+364>\n   0x000000000008a841 <+333>:\tmovsd  xmm4,xmm1\n   0x000000000008a845 <+337>:\tjmp    0x8a860 <accuratePointInTriangle+364>\n   0x000000000008a847 <+339>:\tmov    rax,QWORD PTR [r14+0x2a8]\n   0x000000000008a84e <+346>:\tmovsd  xmm4,QWORD PTR [rax]\n   0x000000000008a852 <+350>:\tjmp    0x8a860 <accuratePointInTriangle+364>\n   0x000000000008a854 <+352>:\tmovmskpd eax,xmm4\n   0x000000000008a858 <+356>:\ttest   al,0x1\n   0x000000000008a85a <+358>:\tjne    0x8a860 <accuratePointInTriangle+364>\n   0x000000000008a85c <+360>:\tmovsd  xmm4,xmm1\n   0x000000000008a860 <+364>:\tsubsd  xmm4,xmm0\n   0x000000000008a864 <+368>:\tmovaps xmm1,xmm9\n   0x000000000008a868 <+372>:\tcomisd xmm1,xmm7\n   0x000000000008a86c <+376>:\tjp     0x8a878 <accuratePointInTriangle+388>\n   0x000000000008a86e <+378>:\tje     0x8a885 <accuratePointInTriangle+401>\n   0x000000000008a870 <+380>:\tja     0x8a891 <accuratePointInTriangle+413>\n   0x000000000008a872 <+382>:\tmovsd  xmm1,xmm7\n   0x000000000008a876 <+386>:\tjmp    0x8a891 <accuratePointInTriangle+413>\n   0x000000000008a878 <+388>:\tmov    rax,QWORD PTR [r14+0x2a8]\n   0x000000000008a87f <+395>:\tmovsd  xmm1,QWORD PTR [rax]\n   0x000000000008a883 <+399>:\tjmp    0x8a891 <accuratePointInTriangle+413>\n   0x000000000008a885 <+401>:\tmovmskpd eax,xmm1\n   0x000000000008a889 <+405>:\ttest   al,0x1\n   0x000000000008a88b <+407>:\tje     0x8a891 <accuratePointInTriangle+413>\n   0x000000000008a88d <+409>:\tmovsd  xmm1,xmm7\n   0x000000000008a891 <+413>:\tmovaps xmm5,xmm11\n   0x000000000008a895 <+417>:\tcomisd xmm5,xmm1\n   0x000000000008a899 <+421>:\tjp     0x8a8a5 <accuratePointInTriangle+433>\n   0x000000000008a89b <+423>:\tje     0x8a8b2 <accuratePointInTriangle+446>\n   0x000000000008a89d <+425>:\tja     0x8a8be <accuratePointInTriangle+458>\n   0x000000000008a89f <+427>:\tmovsd  xmm5,xmm1\n   0x000000000008a8a3 <+431>:\tjmp    0x8a8be <accuratePointInTriangle+458>\n   0x000000000008a8a5 <+433>:\tmov    rax,QWORD PTR [r14+0x2a8]\n   0x000000000008a8ac <+440>:\tmovsd  xmm5,QWORD PTR [rax]\n   0x000000000008a8b0 <+444>:\tjmp    0x8a8be <accuratePointInTriangle+458>\n   0x000000000008a8b2 <+446>:\tmovmskpd eax,xmm5\n   0x000000000008a8b6 <+450>:\ttest   al,0x1\n   0x000000000008a8b8 <+452>:\tje     0x8a8be <accuratePointInTriangle+458>\n   0x000000000008a8ba <+454>:\tmovsd  xmm5,xmm1\n   0x000000000008a8be <+458>:\taddsd  xmm5,xmm0\n   0x000000000008a8c2 <+462>:\tmovsd  xmm0,QWORD PTR [rbp+0x18]\n   0x000000000008a8c7 <+467>:\tcomisd xmm0,xmm2\n   0x000000000008a8cb <+471>:\tjp     0x8a8e2 <accuratePointInTriangle+494>\n   0x000000000008a8d1 <+477>:\tjae    0x8a8e2 <accuratePointInTriangle+494>\n   0x000000000008a8d7 <+483>:\tmovsd  xmm13,QWORD PTR [rbp+0x10]\n   0x000000000008a8dd <+489>:\tjmp    0x8a914 <accuratePointInTriangle+544>\n   0x000000000008a8e2 <+494>:\tcomisd xmm3,xmm0\n   0x000000000008a8e6 <+498>:\tjp     0x8a8fd <accuratePointInTriangle+521>\n   0x000000000008a8ec <+504>:\tjae    0x8a8fd <accuratePointInTriangle+521>\n   0x000000000008a8f2 <+510>:\tmovsd  xmm13,QWORD PTR [rbp+0x10]\n   0x000000000008a8f8 <+516>:\tjmp    0x8a914 <accuratePointInTriangle+544>\n   0x000000000008a8fd <+521>:\tmovsd  xmm13,QWORD PTR [rbp+0x10]\n   0x000000000008a903 <+527>:\tcomisd xmm13,xmm4\n   0x000000000008a908 <+532>:\tjp     0x8a91d <accuratePointInTriangle+553>\n   0x000000000008a90e <+538>:\tjae    0x8a91d <accuratePointInTriangle+553>\n   0x000000000008a914 <+544>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008a918 <+548>:\tjmp    0x8a937 <accuratePointInTriangle+579>\n   0x000000000008a91d <+553>:\tcomisd xmm5,xmm13\n   0x000000000008a922 <+558>:\tjp     0x8a92a <accuratePointInTriangle+566>\n   0x000000000008a928 <+564>:\tjb     0x8a933 <accuratePointInTriangle+575>\n   0x000000000008a92a <+566>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008a931 <+573>:\tjmp    0x8a937 <accuratePointInTriangle+579>\n   0x000000000008a933 <+575>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008a937 <+579>:\txor    rax,0x10\n   0x000000000008a93b <+583>:\ttest   al,0x10\n   0x000000000008a93d <+585>:\tje     0x8a94f <accuratePointInTriangle+603>\n   0x000000000008a943 <+591>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008a94a <+598>:\tmov    rsp,rbp\n   0x000000000008a94d <+601>:\tpop    rbp\n   0x000000000008a94e <+602>:\tret\n   0x000000000008a94f <+603>:\tmovsd  QWORD PTR [rsp+0x8],xmm0\n   0x000000000008a955 <+609>:\tmovsd  QWORD PTR [rsp],xmm13\n   0x000000000008a95b <+615>:\tmovaps xmm1,xmm12\n   0x000000000008a95f <+619>:\tmovaps xmm2,xmm11\n   0x000000000008a963 <+623>:\tmovaps xmm3,xmm10\n   0x000000000008a967 <+627>:\tmovaps xmm4,xmm9\n   0x000000000008a96b <+631>:\tmovaps xmm5,xmm8\n   0x000000000008a96f <+635>:\tmovaps xmm6,xmm7\n   0x000000000008a972 <+638>:\tcall   0x8ad3c <naivePointInTriangle>\n   0x000000000008a977 <+643>:\ttest   al,0x10\n   0x000000000008a979 <+645>:\tjne    0x8a988 <accuratePointInTriangle+660>\n   0x000000000008a97f <+651>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008a983 <+655>:\tmov    rsp,rbp\n   0x000000000008a986 <+658>:\tpop    rbp\n   0x000000000008a987 <+659>:\tret\n   0x000000000008a988 <+660>:\tmovsd  xmm1,QWORD PTR [rbp-0x8]\n   0x000000000008a98d <+665>:\tmovsd  xmm0,QWORD PTR [rbp-0x10]\n   0x000000000008a992 <+670>:\txorps  xmm2,xmm2\n   0x000000000008a995 <+673>:\tmovsd  xmm3,QWORD PTR [rbp-0x18]\n   0x000000000008a99a <+678>:\tsubsd  xmm3,xmm1\n   0x000000000008a99e <+682>:\tmovaps xmm4,xmm3\n   0x000000000008a9a1 <+685>:\tmulsd  xmm4,xmm4\n   0x000000000008a9a5 <+689>:\tmovsd  xmm5,QWORD PTR [rbp-0x20]\n   0x000000000008a9aa <+694>:\tsubsd  xmm5,xmm0\n   0x000000000008a9ae <+698>:\tmovaps xmm6,xmm5\n   0x000000000008a9b1 <+701>:\tmulsd  xmm6,xmm6\n   0x000000000008a9b5 <+705>:\taddsd  xmm4,xmm6\n   0x000000000008a9b9 <+709>:\tmovsd  xmm6,QWORD PTR [rbp+0x18]\n   0x000000000008a9be <+714>:\tsubsd  xmm6,xmm1\n   0x000000000008a9c2 <+718>:\tmulsd  xmm3,xmm6\n   0x000000000008a9c6 <+722>:\tmovsd  xmm7,QWORD PTR [rbp+0x10]\n   0x000000000008a9cb <+727>:\tsubsd  xmm7,xmm0\n   0x000000000008a9cf <+731>:\tmovsd  QWORD PTR [rbp-0x38],xmm7\n   0x000000000008a9d4 <+736>:\tmulsd  xmm5,xmm7\n   0x000000000008a9d8 <+740>:\taddsd  xmm3,xmm5\n   0x000000000008a9dc <+744>:\tdivsd  xmm3,xmm4\n   0x000000000008a9e0 <+748>:\tcomisd xmm3,xmm2\n   0x000000000008a9e4 <+752>:\tjp     0x8aa45 <accuratePointInTriangle+849>\n   0x000000000008a9ea <+758>:\tjae    0x8aa45 <accuratePointInTriangle+849>\n   0x000000000008a9f0 <+764>:\tmovsd  xmm5,QWORD PTR [r15+0x18b7]\n   0x000000000008a9f9 <+773>:\tmovaps xmm8,xmm6\n   0x000000000008a9fd <+777>:\tmulsd  xmm8,xmm8\n   0x000000000008aa02 <+782>:\tmovaps xmm9,xmm7\n   0x000000000008aa06 <+786>:\tmulsd  xmm9,xmm9\n   0x000000000008aa0b <+791>:\taddsd  xmm8,xmm9\n   0x000000000008aa10 <+796>:\tcomisd xmm8,xmm5\n   0x000000000008aa15 <+801>:\tjp     0x8aa21 <accuratePointInTriangle+813>\n   0x000000000008aa1b <+807>:\tjbe    0x8ab0a <accuratePointInTriangle+1046>\n   0x000000000008aa21 <+813>:\tmovsd  xmm4,QWORD PTR [rbp-0x18]\n   0x000000000008aa26 <+818>:\tmovsd  xmm3,QWORD PTR [rbp-0x20]\n   0x000000000008aa2b <+823>:\tmovsd  xmm9,QWORD PTR [rbp+0x18]\n   0x000000000008aa31 <+829>:\tmovsd  xmm10,QWORD PTR [rbp+0x10]\n   0x000000000008aa37 <+835>:\tmovsd  xmm8,QWORD PTR [r15+0x1827]\n   0x000000000008aa40 <+844>:\tjmp    0x8ab13 <accuratePointInTriangle+1055>\n   0x000000000008aa45 <+849>:\tmovsd  xmm8,QWORD PTR [r15+0x1827]\n   0x000000000008aa4e <+858>:\tmovsd  xmm5,QWORD PTR [r15+0x18b7]\n   0x000000000008aa57 <+867>:\tcomisd xmm3,xmm8\n   0x000000000008aa5c <+872>:\tjp     0x8aac2 <accuratePointInTriangle+974>\n   0x000000000008aa62 <+878>:\tja     0x8aac2 <accuratePointInTriangle+974>\n   0x000000000008aa68 <+884>:\tmovsd  xmm9,QWORD PTR [rbp+0x18]\n   0x000000000008aa6e <+890>:\tmovsd  xmm10,QWORD PTR [rbp+0x10]\n   0x000000000008aa74 <+896>:\tmovaps xmm11,xmm1\n   0x000000000008aa78 <+900>:\tsubsd  xmm11,xmm9\n   0x000000000008aa7d <+905>:\tmulsd  xmm11,xmm11\n   0x000000000008aa82 <+910>:\tmovaps xmm12,xmm0\n   0x000000000008aa86 <+914>:\tsubsd  xmm12,xmm10\n   0x000000000008aa8b <+919>:\tmulsd  xmm12,xmm12\n   0x000000000008aa90 <+924>:\taddsd  xmm11,xmm12\n   0x000000000008aa95 <+929>:\tmulsd  xmm3,xmm3\n   0x000000000008aa99 <+933>:\tmulsd  xmm3,xmm4\n   0x000000000008aa9d <+937>:\tsubsd  xmm11,xmm3\n   0x000000000008aaa2 <+942>:\tcomisd xmm11,xmm5\n   0x000000000008aaa7 <+947>:\tjp     0x8aab3 <accuratePointInTriangle+959>\n   0x000000000008aaad <+953>:\tjbe    0x8ab0a <accuratePointInTriangle+1046>\n   0x000000000008aab3 <+959>:\tmovsd  xmm4,QWORD PTR [rbp-0x18]\n   0x000000000008aab8 <+964>:\tmovsd  xmm3,QWORD PTR [rbp-0x20]\n   0x000000000008aabd <+969>:\tjmp    0x8ab13 <accuratePointInTriangle+1055>\n   0x000000000008aac2 <+974>:\tmovsd  xmm4,QWORD PTR [rbp-0x18]\n   0x000000000008aac7 <+979>:\tmovsd  xmm3,QWORD PTR [rbp-0x20]\n   0x000000000008aacc <+984>:\tmovsd  xmm9,QWORD PTR [rbp+0x18]\n   0x000000000008aad2 <+990>:\tmovsd  xmm10,QWORD PTR [rbp+0x10]\n   0x000000000008aad8 <+996>:\tmovaps xmm11,xmm9\n   0x000000000008aadc <+1000>:\tsubsd  xmm11,xmm4\n   0x000000000008aae1 <+1005>:\tmulsd  xmm11,xmm11\n   0x000000000008aae6 <+1010>:\tmovaps xmm12,xmm10\n   0x000000000008aaea <+1014>:\tsubsd  xmm12,xmm3\n   0x000000000008aaef <+1019>:\tmulsd  xmm12,xmm12\n   0x000000000008aaf4 <+1024>:\taddsd  xmm11,xmm12\n   0x000000000008aaf9 <+1029>:\tcomisd xmm11,xmm5\n   0x000000000008aafe <+1034>:\tjp     0x8ab13 <accuratePointInTriangle+1055>\n   0x000000000008ab04 <+1040>:\tja     0x8ab13 <accuratePointInTriangle+1055>\n   0x000000000008ab0a <+1046>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008ab0e <+1050>:\tmov    rsp,rbp\n   0x000000000008ab11 <+1053>:\tpop    rbp\n   0x000000000008ab12 <+1054>:\tret\n   0x000000000008ab13 <+1055>:\tmovsd  xmm11,QWORD PTR [rbp-0x28]\n   0x000000000008ab19 <+1061>:\tsubsd  xmm11,xmm4\n   0x000000000008ab1e <+1066>:\tmovaps xmm12,xmm11\n   0x000000000008ab22 <+1070>:\tmulsd  xmm12,xmm12\n   0x000000000008ab27 <+1075>:\tmovsd  xmm13,QWORD PTR [rbp-0x30]\n   0x000000000008ab2d <+1081>:\tsubsd  xmm13,xmm3\n   0x000000000008ab32 <+1086>:\tmovaps xmm14,xmm13\n   0x000000000008ab36 <+1090>:\tmulsd  xmm14,xmm14\n   0x000000000008ab3b <+1095>:\taddsd  xmm12,xmm14\n   0x000000000008ab40 <+1100>:\tmovaps xmm14,xmm9\n   0x000000000008ab44 <+1104>:\tsubsd  xmm14,xmm4\n   0x000000000008ab49 <+1109>:\tmulsd  xmm11,xmm14\n   0x000000000008ab4e <+1114>:\tmovaps xmm7,xmm10\n   0x000000000008ab52 <+1118>:\tsubsd  xmm7,xmm3\n   0x000000000008ab56 <+1122>:\tmulsd  xmm13,xmm7\n   0x000000000008ab5b <+1127>:\taddsd  xmm11,xmm13\n   0x000000000008ab60 <+1132>:\tdivsd  xmm11,xmm12\n   0x000000000008ab65 <+1137>:\tcomisd xmm11,xmm2\n   0x000000000008ab6a <+1142>:\tjp     0x8aba4 <accuratePointInTriangle+1200>\n   0x000000000008ab70 <+1148>:\tjae    0x8aba4 <accuratePointInTriangle+1200>\n   0x000000000008ab76 <+1154>:\tmulsd  xmm14,xmm14\n   0x000000000008ab7b <+1159>:\tmulsd  xmm7,xmm7\n   0x000000000008ab7f <+1163>:\taddsd  xmm14,xmm7\n   0x000000000008ab84 <+1168>:\tcomisd xmm14,xmm5\n   0x000000000008ab89 <+1173>:\tjp     0x8ab95 <accuratePointInTriangle+1185>\n   0x000000000008ab8f <+1179>:\tjbe    0x8ac32 <accuratePointInTriangle+1342>\n   0x000000000008ab95 <+1185>:\tmovsd  xmm4,QWORD PTR [rbp-0x28]\n   0x000000000008ab9a <+1190>:\tmovsd  xmm3,QWORD PTR [rbp-0x30]\n   0x000000000008ab9f <+1195>:\tjmp    0x8ac3b <accuratePointInTriangle+1351>\n   0x000000000008aba4 <+1200>:\tcomisd xmm11,xmm8\n   0x000000000008aba9 <+1205>:\tjp     0x8abf9 <accuratePointInTriangle+1285>\n   0x000000000008abaf <+1211>:\tja     0x8abf9 <accuratePointInTriangle+1285>\n   0x000000000008abb5 <+1217>:\tsubsd  xmm4,xmm9\n   0x000000000008abba <+1222>:\tmulsd  xmm4,xmm4\n   0x000000000008abbe <+1226>:\tsubsd  xmm3,xmm10\n   0x000000000008abc3 <+1231>:\tmulsd  xmm3,xmm3\n   0x000000000008abc7 <+1235>:\taddsd  xmm4,xmm3\n   0x000000000008abcb <+1239>:\tmulsd  xmm11,xmm11\n   0x000000000008abd0 <+1244>:\tmulsd  xmm11,xmm12\n   0x000000000008abd5 <+1249>:\tsubsd  xmm4,xmm11\n   0x000000000008abda <+1254>:\tcomisd xmm4,xmm5\n   0x000000000008abde <+1258>:\tjp     0x8abea <accuratePointInTriangle+1270>\n   0x000000000008abe4 <+1264>:\tjbe    0x8ac32 <accuratePointInTriangle+1342>\n   0x000000000008abea <+1270>:\tmovsd  xmm4,QWORD PTR [rbp-0x28]\n   0x000000000008abef <+1275>:\tmovsd  xmm3,QWORD PTR [rbp-0x30]\n   0x000000000008abf4 <+1280>:\tjmp    0x8ac3b <accuratePointInTriangle+1351>\n   0x000000000008abf9 <+1285>:\tmovsd  xmm4,QWORD PTR [rbp-0x28]\n   0x000000000008abfe <+1290>:\tmovsd  xmm3,QWORD PTR [rbp-0x30]\n   0x000000000008ac03 <+1295>:\tmovaps xmm7,xmm9\n   0x000000000008ac07 <+1299>:\tsubsd  xmm7,xmm4\n   0x000000000008ac0b <+1303>:\tmulsd  xmm7,xmm7\n   0x000000000008ac0f <+1307>:\tmovaps xmm11,xmm10\n   0x000000000008ac13 <+1311>:\tsubsd  xmm11,xmm3\n   0x000000000008ac18 <+1316>:\tmulsd  xmm11,xmm11\n   0x000000000008ac1d <+1321>:\taddsd  xmm7,xmm11\n   0x000000000008ac22 <+1326>:\tcomisd xmm7,xmm5\n   0x000000000008ac26 <+1330>:\tjp     0x8ac3b <accuratePointInTriangle+1351>\n   0x000000000008ac2c <+1336>:\tja     0x8ac3b <accuratePointInTriangle+1351>\n   0x000000000008ac32 <+1342>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008ac36 <+1346>:\tmov    rsp,rbp\n   0x000000000008ac39 <+1349>:\tpop    rbp\n   0x000000000008ac3a <+1350>:\tret\n   0x000000000008ac3b <+1351>:\tsubsd  xmm1,xmm4\n   0x000000000008ac3f <+1355>:\tmovaps xmm7,xmm1\n   0x000000000008ac42 <+1358>:\tmulsd  xmm7,xmm7\n   0x000000000008ac46 <+1362>:\tsubsd  xmm0,xmm3\n   0x000000000008ac4a <+1366>:\tmovaps xmm11,xmm0\n   0x000000000008ac4e <+1370>:\tmulsd  xmm11,xmm11\n   0x000000000008ac53 <+1375>:\taddsd  xmm7,xmm11\n   0x000000000008ac58 <+1380>:\tmovaps xmm11,xmm9\n   0x000000000008ac5c <+1384>:\tsubsd  xmm11,xmm4\n   0x000000000008ac61 <+1389>:\tmulsd  xmm1,xmm11\n   0x000000000008ac66 <+1394>:\tmovaps xmm12,xmm10\n   0x000000000008ac6a <+1398>:\tsubsd  xmm12,xmm3\n   0x000000000008ac6f <+1403>:\tmulsd  xmm0,xmm12\n   0x000000000008ac74 <+1408>:\taddsd  xmm1,xmm0\n   0x000000000008ac78 <+1412>:\tdivsd  xmm1,xmm7\n   0x000000000008ac7c <+1416>:\tcomisd xmm1,xmm2\n   0x000000000008ac80 <+1420>:\tjp     0x8acb1 <accuratePointInTriangle+1469>\n   0x000000000008ac86 <+1426>:\tjae    0x8acb1 <accuratePointInTriangle+1469>\n   0x000000000008ac8c <+1432>:\tmulsd  xmm11,xmm11\n   0x000000000008ac91 <+1437>:\tmulsd  xmm12,xmm12\n   0x000000000008ac96 <+1442>:\taddsd  xmm11,xmm12\n   0x000000000008ac9b <+1447>:\tcomisd xmm11,xmm5\n   0x000000000008aca0 <+1452>:\tjp     0x8ad23 <accuratePointInTriangle+1583>\n   0x000000000008aca6 <+1458>:\tja     0x8ad23 <accuratePointInTriangle+1583>\n   0x000000000008acac <+1464>:\tjmp    0x8ad1a <accuratePointInTriangle+1574>\n   0x000000000008acb1 <+1469>:\tcomisd xmm1,xmm8\n   0x000000000008acb6 <+1474>:\tjp     0x8acf9 <accuratePointInTriangle+1541>\n   0x000000000008acbc <+1480>:\tja     0x8acf9 <accuratePointInTriangle+1541>\n   0x000000000008acc2 <+1486>:\tsubsd  xmm4,xmm9\n   0x000000000008acc7 <+1491>:\tmulsd  xmm4,xmm4\n   0x000000000008accb <+1495>:\tsubsd  xmm3,xmm10\n   0x000000000008acd0 <+1500>:\tmulsd  xmm3,xmm3\n   0x000000000008acd4 <+1504>:\taddsd  xmm4,xmm3\n   0x000000000008acd8 <+1508>:\tmulsd  xmm1,xmm1\n   0x000000000008acdc <+1512>:\tmulsd  xmm1,xmm7\n   0x000000000008ace0 <+1516>:\tsubsd  xmm4,xmm1\n   0x000000000008ace4 <+1520>:\tcomisd xmm4,xmm5\n   0x000000000008ace8 <+1524>:\tjp     0x8ad23 <accuratePointInTriangle+1583>\n   0x000000000008acee <+1530>:\tja     0x8ad23 <accuratePointInTriangle+1583>\n   0x000000000008acf4 <+1536>:\tjmp    0x8ad1a <accuratePointInTriangle+1574>\n   0x000000000008acf9 <+1541>:\tmulsd  xmm6,xmm6\n   0x000000000008acfd <+1545>:\tmovsd  xmm0,QWORD PTR [rbp-0x38]\n   0x000000000008ad02 <+1550>:\tmulsd  xmm0,xmm0\n   0x000000000008ad06 <+1554>:\taddsd  xmm6,xmm0\n   0x000000000008ad0a <+1558>:\tcomisd xmm6,xmm5\n   0x000000000008ad0e <+1562>:\tjp     0x8ad23 <accuratePointInTriangle+1583>\n   0x000000000008ad14 <+1568>:\tja     0x8ad23 <accuratePointInTriangle+1583>\n   0x000000000008ad1a <+1574>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008ad1e <+1578>:\tmov    rsp,rbp\n   0x000000000008ad21 <+1581>:\tpop    rbp\n   0x000000000008ad22 <+1582>:\tret\n   0x000000000008ad23 <+1583>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008ad2a <+1590>:\tmov    rsp,rbp\n   0x000000000008ad2d <+1593>:\tpop    rbp\n   0x000000000008ad2e <+1594>:\tret\n   0x000000000008ad2f <+1595>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008ad36 <+1602>:\tjmp    0x8a744 <accuratePointInTriangle+80>\nEnd of assembler dump.\n"
    },
    {
      "name": "printTriangle",
      "source": "void printTriangle(\n    double x1, double y1, double x2, double y2, double x3, double y3) {\n  print(\"Triangle is [($x1, $y1), ($x2, $y2), ($x3, $y3)]\");\n}",
      "assembly": "Dump of assembler code for function printTriangle:\n   0x000000000008ae3c <+0>:\tpush   rbp\n   0x000000000008ae3d <+1>:\tmov    rbp,rsp\n   0x000000000008ae40 <+4>:\tsub    rsp,0x38\n   0x000000000008ae44 <+8>:\tmovsd  QWORD PTR [rbp-0x8],xmm1\n   0x000000000008ae49 <+13>:\tmovsd  QWORD PTR [rbp-0x10],xmm2\n   0x000000000008ae4e <+18>:\tmovsd  QWORD PTR [rbp-0x18],xmm3\n   0x000000000008ae53 <+23>:\tmovsd  QWORD PTR [rbp-0x20],xmm4\n   0x000000000008ae58 <+28>:\tmovsd  QWORD PTR [rbp-0x28],xmm5\n   0x000000000008ae5d <+33>:\tmovsd  QWORD PTR [rbp-0x30],xmm6\n   0x000000000008ae62 <+38>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ae66 <+42>:\tjbe    0x8b0d1 <printTriangle+661>\n   0x000000000008ae6c <+48>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008ae70 <+52>:\tmov    r10d,0x1a\n   0x000000000008ae76 <+58>:\tcall   0x84da8 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008ae7b <+63>:\tmov    rcx,rax\n   0x000000000008ae7e <+66>:\tmov    r11,QWORD PTR [r15+0x18bf]\n   0x000000000008ae85 <+73>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008ae89 <+77>:\tmovsd  xmm0,QWORD PTR [rbp-0x8]\n   0x000000000008ae8e <+82>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008ae92 <+86>:\tadd    rax,0x10\n   0x000000000008ae96 <+90>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008ae9a <+94>:\tjae    0x8b0dd <printTriangle+673>\n   0x000000000008aea0 <+100>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008aea4 <+104>:\tsub    rax,0xf\n   0x000000000008aea8 <+108>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008aeb0 <+116>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008aeb5 <+121>:\tmov    rdx,rcx\n   0x000000000008aeb8 <+124>:\tlea    r13,[rdx+0x1f]\n   0x000000000008aebc <+128>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008aec0 <+132>:\ttest   al,0x1\n   0x000000000008aec2 <+134>:\tje     0x8aedb <printTriangle+159>\n   0x000000000008aec4 <+136>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008aec8 <+140>:\tshr    r11d,0x2\n   0x000000000008aecc <+144>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008aed0 <+148>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008aed4 <+152>:\tje     0x8aedb <printTriangle+159>\n   0x000000000008aed6 <+154>:\tcall   0x833c0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008aedb <+159>:\tmov    r11,QWORD PTR [r15+0x188f]\n   0x000000000008aee2 <+166>:\tmov    QWORD PTR [rcx+0x27],r11\n   0x000000000008aee6 <+170>:\tmovsd  xmm0,QWORD PTR [rbp-0x10]\n   0x000000000008aeeb <+175>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008aeef <+179>:\tadd    rax,0x10\n   0x000000000008aef3 <+183>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008aef7 <+187>:\tjae    0x8b0f9 <printTriangle+701>\n   0x000000000008aefd <+193>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008af01 <+197>:\tsub    rax,0xf\n   0x000000000008af05 <+201>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008af0d <+209>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008af12 <+214>:\tmov    rdx,rcx\n   0x000000000008af15 <+217>:\tlea    r13,[rdx+0x2f]\n   0x000000000008af19 <+221>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008af1d <+225>:\ttest   al,0x1\n   0x000000000008af1f <+227>:\tje     0x8af38 <printTriangle+252>\n   0x000000000008af21 <+229>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008af25 <+233>:\tshr    r11d,0x2\n   0x000000000008af29 <+237>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008af2d <+241>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008af31 <+245>:\tje     0x8af38 <printTriangle+252>\n   0x000000000008af33 <+247>:\tcall   0x833c0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008af38 <+252>:\tmov    r11,QWORD PTR [r15+0x18c7]\n   0x000000000008af3f <+259>:\tmov    QWORD PTR [rcx+0x37],r11\n   0x000000000008af43 <+263>:\tmovsd  xmm0,QWORD PTR [rbp-0x18]\n   0x000000000008af48 <+268>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008af4c <+272>:\tadd    rax,0x10\n   0x000000000008af50 <+276>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008af54 <+280>:\tjae    0x8b115 <printTriangle+729>\n   0x000000000008af5a <+286>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008af5e <+290>:\tsub    rax,0xf\n   0x000000000008af62 <+294>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008af6a <+302>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008af6f <+307>:\tmov    rdx,rcx\n   0x000000000008af72 <+310>:\tlea    r13,[rdx+0x3f]\n   0x000000000008af76 <+314>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008af7a <+318>:\ttest   al,0x1\n   0x000000000008af7c <+320>:\tje     0x8af95 <printTriangle+345>\n   0x000000000008af7e <+322>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008af82 <+326>:\tshr    r11d,0x2\n   0x000000000008af86 <+330>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008af8a <+334>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008af8e <+338>:\tje     0x8af95 <printTriangle+345>\n   0x000000000008af90 <+340>:\tcall   0x833c0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008af95 <+345>:\tmov    r11,QWORD PTR [r15+0x188f]\n   0x000000000008af9c <+352>:\tmov    QWORD PTR [rcx+0x47],r11\n   0x000000000008afa0 <+356>:\tmovsd  xmm0,QWORD PTR [rbp-0x20]\n   0x000000000008afa5 <+361>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008afa9 <+365>:\tadd    rax,0x10\n   0x000000000008afad <+369>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008afb1 <+373>:\tjae    0x8b131 <printTriangle+757>\n   0x000000000008afb7 <+379>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008afbb <+383>:\tsub    rax,0xf\n   0x000000000008afbf <+387>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008afc7 <+395>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008afcc <+400>:\tmov    rdx,rcx\n   0x000000000008afcf <+403>:\tlea    r13,[rdx+0x4f]\n   0x000000000008afd3 <+407>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008afd7 <+411>:\ttest   al,0x1\n   0x000000000008afd9 <+413>:\tje     0x8aff2 <printTriangle+438>\n   0x000000000008afdb <+415>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008afdf <+419>:\tshr    r11d,0x2\n   0x000000000008afe3 <+423>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008afe7 <+427>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008afeb <+431>:\tje     0x8aff2 <printTriangle+438>\n   0x000000000008afed <+433>:\tcall   0x833c0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008aff2 <+438>:\tmov    r11,QWORD PTR [r15+0x18c7]\n   0x000000000008aff9 <+445>:\tmov    QWORD PTR [rcx+0x57],r11\n   0x000000000008affd <+449>:\tmovsd  xmm0,QWORD PTR [rbp-0x28]\n   0x000000000008b002 <+454>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008b006 <+458>:\tadd    rax,0x10\n   0x000000000008b00a <+462>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008b00e <+466>:\tjae    0x8b14d <printTriangle+785>\n   0x000000000008b014 <+472>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008b018 <+476>:\tsub    rax,0xf\n   0x000000000008b01c <+480>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008b024 <+488>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008b029 <+493>:\tmov    rdx,rcx\n   0x000000000008b02c <+496>:\tlea    r13,[rdx+0x5f]\n   0x000000000008b030 <+500>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008b034 <+504>:\ttest   al,0x1\n   0x000000000008b036 <+506>:\tje     0x8b04f <printTriangle+531>\n   0x000000000008b038 <+508>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008b03c <+512>:\tshr    r11d,0x2\n   0x000000000008b040 <+516>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008b044 <+520>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008b048 <+524>:\tje     0x8b04f <printTriangle+531>\n   0x000000000008b04a <+526>:\tcall   0x833c0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008b04f <+531>:\tmov    r11,QWORD PTR [r15+0x188f]\n   0x000000000008b056 <+538>:\tmov    QWORD PTR [rcx+0x67],r11\n   0x000000000008b05a <+542>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x000000000008b05f <+547>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008b063 <+551>:\tadd    rax,0x10\n   0x000000000008b067 <+555>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008b06b <+559>:\tjae    0x8b169 <printTriangle+813>\n   0x000000000008b071 <+565>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008b075 <+569>:\tsub    rax,0xf\n   0x000000000008b079 <+573>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008b081 <+581>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008b086 <+586>:\tmov    rdx,rcx\n   0x000000000008b089 <+589>:\tlea    r13,[rdx+0x6f]\n   0x000000000008b08d <+593>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008b091 <+597>:\ttest   al,0x1\n   0x000000000008b093 <+599>:\tje     0x8b0ac <printTriangle+624>\n   0x000000000008b095 <+601>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008b099 <+605>:\tshr    r11d,0x2\n   0x000000000008b09d <+609>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008b0a1 <+613>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008b0a5 <+617>:\tje     0x8b0ac <printTriangle+624>\n   0x000000000008b0a7 <+619>:\tcall   0x833c0 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008b0ac <+624>:\tmov    r11,QWORD PTR [r15+0x18cf]\n   0x000000000008b0b3 <+631>:\tmov    QWORD PTR [rcx+0x77],r11\n   0x000000000008b0b7 <+635>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008b0bb <+639>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008b0c0 <+644>:\tmov    rdi,rax\n   0x000000000008b0c3 <+647>:\tcall   0x8a49c <print>\n   0x000000000008b0c8 <+652>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008b0cc <+656>:\tmov    rsp,rbp\n   0x000000000008b0cf <+659>:\tpop    rbp\n   0x000000000008b0d0 <+660>:\tret\n   0x000000000008b0d1 <+661>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008b0d8 <+668>:\tjmp    0x8ae6c <printTriangle+48>\n   0x000000000008b0dd <+673>:\tsub    rsp,0x10\n   0x000000000008b0e1 <+677>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b0e5 <+681>:\tpush   rcx\n   0x000000000008b0e6 <+682>:\tcall   0x84d28 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b0eb <+687>:\tpop    rcx\n   0x000000000008b0ec <+688>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b0f0 <+692>:\tadd    rsp,0x10\n   0x000000000008b0f4 <+696>:\tjmp    0x8aeb0 <printTriangle+116>\n   0x000000000008b0f9 <+701>:\tsub    rsp,0x10\n   0x000000000008b0fd <+705>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b101 <+709>:\tpush   rcx\n   0x000000000008b102 <+710>:\tcall   0x84d28 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b107 <+715>:\tpop    rcx\n   0x000000000008b108 <+716>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b10c <+720>:\tadd    rsp,0x10\n   0x000000000008b110 <+724>:\tjmp    0x8af0d <printTriangle+209>\n   0x000000000008b115 <+729>:\tsub    rsp,0x10\n   0x000000000008b119 <+733>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b11d <+737>:\tpush   rcx\n   0x000000000008b11e <+738>:\tcall   0x84d28 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b123 <+743>:\tpop    rcx\n   0x000000000008b124 <+744>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b128 <+748>:\tadd    rsp,0x10\n   0x000000000008b12c <+752>:\tjmp    0x8af6a <printTriangle+302>\n   0x000000000008b131 <+757>:\tsub    rsp,0x10\n   0x000000000008b135 <+761>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b139 <+765>:\tpush   rcx\n   0x000000000008b13a <+766>:\tcall   0x84d28 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b13f <+771>:\tpop    rcx\n   0x000000000008b140 <+772>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b144 <+776>:\tadd    rsp,0x10\n   0x000000000008b148 <+780>:\tjmp    0x8afc7 <printTriangle+395>\n   0x000000000008b14d <+785>:\tsub    rsp,0x10\n   0x000000000008b151 <+789>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b155 <+793>:\tpush   rcx\n   0x000000000008b156 <+794>:\tcall   0x84d28 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b15b <+799>:\tpop    rcx\n   0x000000000008b15c <+800>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b160 <+804>:\tadd    rsp,0x10\n   0x000000000008b164 <+808>:\tjmp    0x8b024 <printTriangle+488>\n   0x000000000008b169 <+813>:\tsub    rsp,0x10\n   0x000000000008b16d <+817>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b171 <+821>:\tpush   rcx\n   0x000000000008b172 <+822>:\tcall   0x84d28 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b177 <+827>:\tpop    rcx\n   0x000000000008b178 <+828>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b17c <+832>:\tadd    rsp,0x10\n   0x000000000008b180 <+836>:\tjmp    0x8b081 <printTriangle+581>\nEnd of assembler dump.\n"
    },
    {
      "name": "test",
      "source": "void test(double x1, double y1, double x2, double y2, double x3, double y3,\n    double x, double y) {\n  printTriangle(x1, y1, x2, y2, x3, y3);\n  print(\"Point ($x, $y) is within triangle? \");\n  if (accuratePointInTriangle(x1, y1, x2, y2, x3, y3, x, y)) {\n    print(\"true\");\n  } else {\n    print(\"false\");\n  }\n}",
      "assembly": "Dump of assembler code for function test:\n   0x000000000008a538 <+0>:\tpush   rbp\n   0x000000000008a539 <+1>:\tmov    rbp,rsp\n   0x000000000008a53c <+4>:\tsub    rsp,0x40\n   0x000000000008a540 <+8>:\tmovaps xmm11,xmm1\n   0x000000000008a544 <+12>:\tmovaps xmm10,xmm2\n   0x000000000008a548 <+16>:\tmovaps xmm9,xmm3\n   0x000000000008a54c <+20>:\tmovaps xmm8,xmm4\n   0x000000000008a550 <+24>:\tmovaps xmm7,xmm5\n   0x000000000008a553 <+27>:\tmovaps xmm0,xmm6\n   0x000000000008a556 <+30>:\tmovsd  QWORD PTR [rbp-0x8],xmm1\n   0x000000000008a55b <+35>:\tmovsd  QWORD PTR [rbp-0x10],xmm2\n   0x000000000008a560 <+40>:\tmovsd  QWORD PTR [rbp-0x18],xmm3\n   0x000000000008a565 <+45>:\tmovsd  QWORD PTR [rbp-0x20],xmm4\n   0x000000000008a56a <+50>:\tmovsd  QWORD PTR [rbp-0x28],xmm5\n   0x000000000008a56f <+55>:\tmovsd  QWORD PTR [rbp-0x30],xmm6\n   0x000000000008a574 <+60>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a578 <+64>:\tjbe    0x8a6a0 <test+360>\n   0x000000000008a57e <+70>:\tmovaps xmm1,xmm11\n   0x000000000008a582 <+74>:\tmovaps xmm2,xmm10\n   0x000000000008a586 <+78>:\tmovaps xmm3,xmm9\n   0x000000000008a58a <+82>:\tmovaps xmm4,xmm8\n   0x000000000008a58e <+86>:\tmovaps xmm5,xmm7\n   0x000000000008a591 <+89>:\tmovaps xmm6,xmm0\n   0x000000000008a594 <+92>:\tcall   0x8ae3c <printTriangle>\n   0x000000000008a599 <+97>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a59d <+101>:\tmov    r10d,0xa\n   0x000000000008a5a3 <+107>:\tcall   0x84da8 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a5a8 <+112>:\tmov    r11,QWORD PTR [r15+0x1887]\n   0x000000000008a5af <+119>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a5b3 <+123>:\tmovsd  xmm0,QWORD PTR [rbp+0x18]\n   0x000000000008a5b8 <+128>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008a5bc <+132>:\tadd    rcx,0x10\n   0x000000000008a5c0 <+136>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008a5c4 <+140>:\tjae    0x8a6ac <test+372>\n   0x000000000008a5ca <+146>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008a5ce <+150>:\tsub    rcx,0xf\n   0x000000000008a5d2 <+154>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008a5da <+162>:\tmovsd  QWORD PTR [rcx+0x7],xmm0\n   0x000000000008a5df <+167>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a5e3 <+171>:\tmov    r11,QWORD PTR [r15+0x188f]\n   0x000000000008a5ea <+178>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a5ee <+182>:\tmovsd  xmm1,QWORD PTR [rbp+0x10]\n   0x000000000008a5f3 <+187>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008a5f7 <+191>:\tadd    rcx,0x10\n   0x000000000008a5fb <+195>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008a5ff <+199>:\tjae    0x8a6cb <test+403>\n   0x000000000008a605 <+205>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008a609 <+209>:\tsub    rcx,0xf\n   0x000000000008a60d <+213>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008a615 <+221>:\tmovsd  QWORD PTR [rcx+0x7],xmm1\n   0x000000000008a61a <+226>:\tmov    QWORD PTR [rax+0x2f],rcx\n   0x000000000008a61e <+230>:\tmov    r11,QWORD PTR [r15+0x1897]\n   0x000000000008a625 <+237>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000008a629 <+241>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a62d <+245>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008a632 <+250>:\tmov    rdi,rax\n   0x000000000008a635 <+253>:\tcall   0x8a49c <print>\n   0x000000000008a63a <+258>:\tmovsd  xmm0,QWORD PTR [rbp+0x18]\n   0x000000000008a63f <+263>:\tmovsd  QWORD PTR [rsp+0x8],xmm0\n   0x000000000008a645 <+269>:\tmovsd  xmm0,QWORD PTR [rbp+0x10]\n   0x000000000008a64a <+274>:\tmovsd  QWORD PTR [rsp],xmm0\n   0x000000000008a64f <+279>:\tmovsd  xmm1,QWORD PTR [rbp-0x8]\n   0x000000000008a654 <+284>:\tmovsd  xmm2,QWORD PTR [rbp-0x10]\n   0x000000000008a659 <+289>:\tmovsd  xmm3,QWORD PTR [rbp-0x18]\n   0x000000000008a65e <+294>:\tmovsd  xmm4,QWORD PTR [rbp-0x20]\n   0x000000000008a663 <+299>:\tmovsd  xmm5,QWORD PTR [rbp-0x28]\n   0x000000000008a668 <+304>:\tmovsd  xmm6,QWORD PTR [rbp-0x30]\n   0x000000000008a66d <+309>:\tcall   0x8a6f4 <accuratePointInTriangle>\n   0x000000000008a672 <+314>:\ttest   al,0x10\n   0x000000000008a674 <+316>:\tjne    0x8a68b <test+339>\n   0x000000000008a67a <+322>:\tmov    rdi,QWORD PTR [r15+0x189f]\n   0x000000000008a681 <+329>:\tcall   0x8a4d4 <printToConsole>\n   0x000000000008a686 <+334>:\tjmp    0x8a697 <test+351>\n   0x000000000008a68b <+339>:\tmov    rdi,QWORD PTR [r15+0x18a7]\n   0x000000000008a692 <+346>:\tcall   0x8a4d4 <printToConsole>\n   0x000000000008a697 <+351>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a69b <+355>:\tmov    rsp,rbp\n   0x000000000008a69e <+358>:\tpop    rbp\n   0x000000000008a69f <+359>:\tret\n   0x000000000008a6a0 <+360>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a6a7 <+367>:\tjmp    0x8a57e <test+70>\n   0x000000000008a6ac <+372>:\tsub    rsp,0x10\n   0x000000000008a6b0 <+376>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a6b4 <+380>:\tpush   rax\n   0x000000000008a6b5 <+381>:\tcall   0x84d28 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a6ba <+386>:\tmov    rcx,rax\n   0x000000000008a6bd <+389>:\tpop    rax\n   0x000000000008a6be <+390>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a6c2 <+394>:\tadd    rsp,0x10\n   0x000000000008a6c6 <+398>:\tjmp    0x8a5da <test+162>\n   0x000000000008a6cb <+403>:\tsub    rsp,0x20\n   0x000000000008a6cf <+407>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a6d3 <+411>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x000000000008a6d8 <+416>:\tpush   rax\n   0x000000000008a6d9 <+417>:\tcall   0x84d28 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a6de <+422>:\tmov    rcx,rax\n   0x000000000008a6e1 <+425>:\tpop    rax\n   0x000000000008a6e2 <+426>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a6e6 <+430>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x000000000008a6eb <+435>:\tadd    rsp,0x20\n   0x000000000008a6ef <+439>:\tjmp    0x8a615 <test+221>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  test(1.5, 2.4, 5.1, -3.1, -3.8, 1.2, 0, 0);\n  test(1.5, 2.4, 5.1, -3.1, -3.8, 1.2, 0, 1);\n  test(1.5, 2.4, 5.1, -3.1, -3.8, 1.2, 3, 1);\n  print('');\n\n  test(0.1, 0.1111111111111111, 12.5, 33.333333333333336, 25, 11.11111111111111,\n      5.414285714285714, 14.349206349206348);\n  print('');\n\n  test(0.1, 0.1111111111111111, 12.5, 33.333333333333336, -12.5,\n      16.666666666666668, 5.414285714285714, 14.349206349206348);\n  print('');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a2ac <+0>:\tpush   rbp\n   0x000000000008a2ad <+1>:\tmov    rbp,rsp\n   0x000000000008a2b0 <+4>:\tsub    rsp,0x10\n   0x000000000008a2b4 <+8>:\txorps  xmm0,xmm0\n   0x000000000008a2b7 <+11>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2bb <+15>:\tjbe    0x8a48e <main+482>\n   0x000000000008a2c1 <+21>:\tmovsd  QWORD PTR [rsp+0x8],xmm0\n   0x000000000008a2c7 <+27>:\tmovsd  QWORD PTR [rsp],xmm0\n   0x000000000008a2cc <+32>:\tmovsd  xmm1,QWORD PTR [r15+0x17f7]\n   0x000000000008a2d5 <+41>:\tmovsd  xmm2,QWORD PTR [r15+0x17ff]\n   0x000000000008a2de <+50>:\tmovsd  xmm3,QWORD PTR [r15+0x1807]\n   0x000000000008a2e7 <+59>:\tmovsd  xmm4,QWORD PTR [r15+0x180f]\n   0x000000000008a2f0 <+68>:\tmovsd  xmm5,QWORD PTR [r15+0x1817]\n   0x000000000008a2f9 <+77>:\tmovsd  xmm6,QWORD PTR [r15+0x181f]\n   0x000000000008a302 <+86>:\tcall   0x8a538 <test>\n   0x000000000008a307 <+91>:\txorps  xmm0,xmm0\n   0x000000000008a30a <+94>:\tmovsd  QWORD PTR [rsp+0x8],xmm0\n   0x000000000008a310 <+100>:\tmovsd  xmm0,QWORD PTR [r15+0x1827]\n   0x000000000008a319 <+109>:\tmovsd  QWORD PTR [rsp],xmm0\n   0x000000000008a31e <+114>:\tmovsd  xmm1,QWORD PTR [r15+0x17f7]\n   0x000000000008a327 <+123>:\tmovsd  xmm2,QWORD PTR [r15+0x17ff]\n   0x000000000008a330 <+132>:\tmovsd  xmm3,QWORD PTR [r15+0x1807]\n   0x000000000008a339 <+141>:\tmovsd  xmm4,QWORD PTR [r15+0x180f]\n   0x000000000008a342 <+150>:\tmovsd  xmm5,QWORD PTR [r15+0x1817]\n   0x000000000008a34b <+159>:\tmovsd  xmm6,QWORD PTR [r15+0x181f]\n   0x000000000008a354 <+168>:\tcall   0x8a538 <test>\n   0x000000000008a359 <+173>:\tmovsd  xmm0,QWORD PTR [r15+0x182f]\n   0x000000000008a362 <+182>:\tmovsd  QWORD PTR [rsp+0x8],xmm0\n   0x000000000008a368 <+188>:\tmovsd  xmm0,QWORD PTR [r15+0x1827]\n   0x000000000008a371 <+197>:\tmovsd  QWORD PTR [rsp],xmm0\n   0x000000000008a376 <+202>:\tmovsd  xmm1,QWORD PTR [r15+0x17f7]\n   0x000000000008a37f <+211>:\tmovsd  xmm2,QWORD PTR [r15+0x17ff]\n   0x000000000008a388 <+220>:\tmovsd  xmm3,QWORD PTR [r15+0x1807]\n   0x000000000008a391 <+229>:\tmovsd  xmm4,QWORD PTR [r15+0x180f]\n   0x000000000008a39a <+238>:\tmovsd  xmm5,QWORD PTR [r15+0x1817]\n   0x000000000008a3a3 <+247>:\tmovsd  xmm6,QWORD PTR [r15+0x181f]\n   0x000000000008a3ac <+256>:\tcall   0x8a538 <test>\n   0x000000000008a3b1 <+261>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a3b8 <+268>:\tcall   0x8a4d4 <printToConsole>\n   0x000000000008a3bd <+273>:\tmovsd  xmm0,QWORD PTR [r15+0x1837]\n   0x000000000008a3c6 <+282>:\tmovsd  QWORD PTR [rsp+0x8],xmm0\n   0x000000000008a3cc <+288>:\tmovsd  xmm7,QWORD PTR [r15+0x183f]\n   0x000000000008a3d5 <+297>:\tmovsd  QWORD PTR [rsp],xmm7\n   0x000000000008a3da <+302>:\tmovsd  xmm1,QWORD PTR [r15+0x1847]\n   0x000000000008a3e3 <+311>:\tmovsd  xmm2,QWORD PTR [r15+0x184f]\n   0x000000000008a3ec <+320>:\tmovsd  xmm3,QWORD PTR [r15+0x1857]\n   0x000000000008a3f5 <+329>:\tmovsd  xmm4,QWORD PTR [r15+0x185f]\n   0x000000000008a3fe <+338>:\tmovsd  xmm5,QWORD PTR [r15+0x1867]\n   0x000000000008a407 <+347>:\tmovsd  xmm6,QWORD PTR [r15+0x186f]\n   0x000000000008a410 <+356>:\tcall   0x8a538 <test>\n   0x000000000008a415 <+361>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a41c <+368>:\tcall   0x8a4d4 <printToConsole>\n   0x000000000008a421 <+373>:\tmovsd  xmm0,QWORD PTR [r15+0x1837]\n   0x000000000008a42a <+382>:\tmovsd  QWORD PTR [rsp+0x8],xmm0\n   0x000000000008a430 <+388>:\tmovsd  xmm0,QWORD PTR [r15+0x183f]\n   0x000000000008a439 <+397>:\tmovsd  QWORD PTR [rsp],xmm0\n   0x000000000008a43e <+402>:\tmovsd  xmm1,QWORD PTR [r15+0x1847]\n   0x000000000008a447 <+411>:\tmovsd  xmm2,QWORD PTR [r15+0x184f]\n   0x000000000008a450 <+420>:\tmovsd  xmm3,QWORD PTR [r15+0x1857]\n   0x000000000008a459 <+429>:\tmovsd  xmm4,QWORD PTR [r15+0x185f]\n   0x000000000008a462 <+438>:\tmovsd  xmm5,QWORD PTR [r15+0x1877]\n   0x000000000008a46b <+447>:\tmovsd  xmm6,QWORD PTR [r15+0x187f]\n   0x000000000008a474 <+456>:\tcall   0x8a538 <test>\n   0x000000000008a479 <+461>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a480 <+468>:\tcall   0x8a4d4 <printToConsole>\n   0x000000000008a485 <+473>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a489 <+477>:\tmov    rsp,rbp\n   0x000000000008a48c <+480>:\tpop    rbp\n   0x000000000008a48d <+481>:\tret\n   0x000000000008a48e <+482>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a495 <+489>:\tjmp    0x8a2c1 <main+21>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "first-class-functions.dart",
  "functions": [
    {
      "name": "cube",
      "source": "cube(x) => x*x*x;",
      "assembly": "Dump of assembler code for function cube:\n   0x000000000008acbc <+0>:\tpush   rbp\n   0x000000000008acbd <+1>:\tmov    rbp,rsp\n   0x000000000008acc0 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008acc4 <+8>:\tjbe    0x8acd8 <cube+28>\n   0x000000000008acca <+14>:\tmov    rdi,QWORD PTR [rbp+0x10]\n   0x000000000008acce <+18>:\tcall   0x8ace4 <cube>\n   0x000000000008acd3 <+23>:\tmov    rsp,rbp\n   0x000000000008acd6 <+26>:\tpop    rbp\n   0x000000000008acd7 <+27>:\tret\n   0x000000000008acd8 <+28>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008acdf <+35>:\tjmp    0x8acca <cube+14>\nEnd of assembler dump.\n"
    },
    {
      "name": "cuberoot",
      "source": "cuberoot(x)  => Math.pow(x, 1/3);",
      "assembly": "Dump of assembler code for function cuberoot:\n   0x000000000008a9ac <+0>:\tpush   rbp\n   0x000000000008a9ad <+1>:\tmov    rbp,rsp\n   0x000000000008a9b0 <+4>:\tsub    rsp,0x8\n   0x000000000008a9b4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a9b8 <+12>:\tjbe    0x8ab38 <cuberoot+396>\n   0x000000000008a9be <+18>:\tmov    rax,QWORD PTR [rbp+0x10]\n   0x000000000008a9c2 <+22>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a9c6 <+26>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a9ca <+30>:\ttest   al,0x1\n   0x000000000008a9cc <+32>:\tje     0x8a9f9 <cuberoot+77>\n   0x000000000008a9d2 <+38>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a9d5 <+41>:\tshr    esi,0xc\n   0x000000000008a9d8 <+44>:\tsub    rsi,0x3c\n   0x000000000008a9dc <+48>:\tcmp    rsi,0x2\n   0x000000000008a9e0 <+52>:\tjbe    0x8a9f9 <cuberoot+77>\n   0x000000000008a9e6 <+58>:\tmov    rbx,QWORD PTR [r15+0xdbf]\n   0x000000000008a9ed <+65>:\tmov    r9,QWORD PTR [r15+0x186f]\n   0x000000000008a9f4 <+72>:\tcall   0x835d8 <stub _iso_stub_DefaultTypeTestStub>\n   0x000000000008a9f9 <+77>:\tmov    rax,QWORD PTR [rbp+0x10]\n   0x000000000008a9fd <+81>:\ttest   al,0x1\n   0x000000000008a9ff <+83>:\tmov    ecx,0x3c\n   0x000000000008aa04 <+88>:\tje     0x8aa0c <cuberoot+96>\n   0x000000000008aa06 <+90>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008aa09 <+93>:\tshr    ecx,0xc\n   0x000000000008aa0c <+96>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008aa10 <+100>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008aa14 <+104>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008aa17 <+107>:\tmovsd  xmm2,QWORD PTR [rax+0x7]\n   0x000000000008aa1c <+112>:\tmovsd  xmm1,QWORD PTR [r15+0x187f]\n   0x000000000008aa25 <+121>:\txorps  xmm4,xmm4\n   0x000000000008aa28 <+124>:\tmovsd  xmm3,QWORD PTR [r15+0x1887]\n   0x000000000008aa31 <+133>:\tcomisd xmm1,xmm4\n   0x000000000008aa35 <+137>:\tjp     0x8aa8c <cuberoot+224>\n   0x000000000008aa37 <+139>:\tje     0x8ab0c <cuberoot+352>\n   0x000000000008aa3d <+145>:\tcomisd xmm1,xmm3\n   0x000000000008aa41 <+149>:\tje     0x8aa76 <cuberoot+202>\n   0x000000000008aa43 <+151>:\tmovsd  xmm0,QWORD PTR [r15+0x188f]\n   0x000000000008aa4c <+160>:\tcomisd xmm1,xmm0\n   0x000000000008aa50 <+164>:\tje     0x8aa7f <cuberoot+211>\n   0x000000000008aa52 <+166>:\tmovsd  xmm0,QWORD PTR [r15+0x1897]\n   0x000000000008aa5b <+175>:\tcomisd xmm1,xmm0\n   0x000000000008aa5f <+179>:\tjne    0x8aa8c <cuberoot+224>\n   0x000000000008aa65 <+185>:\tmovsd  xmm3,xmm2\n   0x000000000008aa69 <+189>:\tmulsd  xmm3,xmm2\n   0x000000000008aa6d <+193>:\tmulsd  xmm3,xmm2\n   0x000000000008aa71 <+197>:\tjmp    0x8ab0c <cuberoot+352>\n   0x000000000008aa76 <+202>:\tmovsd  xmm3,xmm2\n   0x000000000008aa7a <+206>:\tjmp    0x8ab0c <cuberoot+352>\n   0x000000000008aa7f <+211>:\tmovsd  xmm3,xmm2\n   0x000000000008aa83 <+215>:\tmulsd  xmm3,xmm2\n   0x000000000008aa87 <+219>:\tjmp    0x8ab0c <cuberoot+352>\n   0x000000000008aa8c <+224>:\tcomisd xmm2,xmm3\n   0x000000000008aa90 <+228>:\tjp     0x8aa9a <cuberoot+238>\n   0x000000000008aa92 <+230>:\tje     0x8ab0c <cuberoot+352>\n   0x000000000008aa94 <+232>:\tcomisd xmm1,xmm2\n   0x000000000008aa98 <+236>:\tjnp    0x8aaa8 <cuberoot+252>\n   0x000000000008aa9a <+238>:\tmovsd  xmm3,QWORD PTR [r15+0x189f]\n   0x000000000008aaa3 <+247>:\tjmp    0x8ab0c <cuberoot+352>\n   0x000000000008aaa8 <+252>:\tmovsd  xmm3,QWORD PTR [r15+0x18a7]\n   0x000000000008aab1 <+261>:\tcomisd xmm2,xmm3\n   0x000000000008aab5 <+265>:\tje     0x8aadb <cuberoot+303>\n   0x000000000008aab7 <+267>:\tmovsd  xmm3,QWORD PTR [r15+0x18af]\n   0x000000000008aac0 <+276>:\tcomisd xmm1,xmm3\n   0x000000000008aac4 <+280>:\tjne    0x8aadb <cuberoot+303>\n   0x000000000008aac6 <+282>:\tcomisd xmm2,xmm4\n   0x000000000008aaca <+286>:\tje     0x8aad2 <cuberoot+294>\n   0x000000000008aacc <+288>:\tsqrtsd xmm3,xmm2\n   0x000000000008aad0 <+292>:\tjmp    0x8ab0c <cuberoot+352>\n   0x000000000008aad2 <+294>:\tmovsd  xmm3,xmm4\n   0x000000000008aad6 <+298>:\tjmp    0x8ab0c <cuberoot+352>\n   0x000000000008aadb <+303>:\tpush   rbp\n   0x000000000008aadc <+304>:\tmov    rbp,rsp\n   0x000000000008aadf <+307>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008aae3 <+311>:\tmovaps xmm0,xmm2\n   0x000000000008aae6 <+314>:\tmov    rax,QWORD PTR [r14+0x558]\n   0x000000000008aaed <+321>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008aaf4 <+328>:\tcall   rax\n   0x000000000008aaf6 <+330>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008ab01 <+341>:\tmovaps xmm3,xmm0\n   0x000000000008ab04 <+344>:\tlea    rsp,[rbp+0x0]\n   0x000000000008ab08 <+348>:\tmov    rsp,rbp\n   0x000000000008ab0b <+351>:\tpop    rbp\n   0x000000000008ab0c <+352>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008ab10 <+356>:\tadd    rax,0x10\n   0x000000000008ab14 <+360>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008ab18 <+364>:\tjae    0x8ab44 <cuberoot+408>\n   0x000000000008ab1e <+370>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008ab22 <+374>:\tsub    rax,0xf\n   0x000000000008ab26 <+378>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008ab2e <+386>:\tmovsd  QWORD PTR [rax+0x7],xmm3\n   0x000000000008ab33 <+391>:\tmov    rsp,rbp\n   0x000000000008ab36 <+394>:\tpop    rbp\n   0x000000000008ab37 <+395>:\tret\n   0x000000000008ab38 <+396>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab3f <+403>:\tjmp    0x8a9be <cuberoot+18>\n   0x000000000008ab44 <+408>:\tsub    rsp,0x10\n   0x000000000008ab48 <+412>:\tmovups XMMWORD PTR [rsp],xmm3\n   0x000000000008ab4c <+416>:\tcall   0x85224 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008ab51 <+421>:\tmovups xmm3,XMMWORD PTR [rsp]\n   0x000000000008ab55 <+425>:\tadd    rsp,0x10\n   0x000000000008ab59 <+429>:\tjmp    0x8ab2e <cuberoot+386>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "main(){\n  var functions = [Math.sin, Math.exp, cube];\n  var inverses = [Math.asin, Math.log, cuberoot];\n  for (int i = 0; i < 3; i++){\n    print(compose(functions[i], inverses[i])(0.5));\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a78c <+0>:\tpush   rbp\n   0x000000000008a78d <+1>:\tmov    rbp,rsp\n   0x000000000008a790 <+4>:\tsub    rsp,0x38\n   0x000000000008a794 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a798 <+12>:\tjbe    0x8a8b6 <main+298>\n   0x000000000008a79e <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a7a2 <+22>:\tmov    r10d,0x6\n   0x000000000008a7a8 <+28>:\tcall   0x852a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a7ad <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a7b1 <+37>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a7b8 <+44>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a7bc <+48>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a7c3 <+55>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a7c7 <+59>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a7ce <+66>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a7d2 <+70>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a7d6 <+74>:\tmov    r10d,0x6\n   0x000000000008a7dc <+80>:\tcall   0x852a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a7e1 <+85>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a7e5 <+89>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a7ec <+96>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a7f0 <+100>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a7f7 <+107>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a7fb <+111>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a802 <+118>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a806 <+122>:\txor    edx,edx\n   0x000000000008a808 <+124>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a80c <+128>:\tmov    QWORD PTR [rbp-0x20],rdx\n   0x000000000008a810 <+132>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a814 <+136>:\tjbe    0x8a8c2 <main+310>\n   0x000000000008a81a <+142>:\tcmp    rdx,0x3\n   0x000000000008a81e <+146>:\tjge    0x8a8ad <main+289>\n   0x000000000008a824 <+152>:\tmov    rbx,QWORD PTR [rcx+rdx*8+0x17]\n   0x000000000008a829 <+157>:\tmov    QWORD PTR [rbp-0x18],rbx\n   0x000000000008a82d <+161>:\tmov    rsi,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a832 <+166>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008a836 <+170>:\tmov    r10d,0x2\n   0x000000000008a83c <+176>:\tcall   0x84394 <stub _iso_stub_AllocateContextStub>\n   0x000000000008a841 <+181>:\tmov    rcx,rax\n   0x000000000008a844 <+184>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a848 <+188>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a84c <+192>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a850 <+196>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008a854 <+200>:\tmov    rdx,rcx\n   0x000000000008a857 <+203>:\tmov    rbx,QWORD PTR [r15+0x182f]\n   0x000000000008a85e <+210>:\tcall   0x846c0 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a863 <+215>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a868 <+220>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a86f <+227>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a873 <+231>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008a878 <+236>:\tmov    rcx,QWORD PTR [r15+0x183f]\n   0x000000000008a87f <+243>:\tmov    rbx,QWORD PTR [r15+0x1847]\n   0x000000000008a886 <+250>:\tcall   rcx\n   0x000000000008a888 <+252>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a88c <+256>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a891 <+261>:\tmov    rdi,rax\n   0x000000000008a894 <+264>:\tcall   0x8a8d0 <printToConsole>\n   0x000000000008a899 <+269>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a89d <+273>:\tadd    rcx,0x1\n   0x000000000008a8a1 <+277>:\tmov    rdx,rcx\n   0x000000000008a8a4 <+280>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a8a8 <+284>:\tjmp    0x8a808 <main+124>\n   0x000000000008a8ad <+289>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a8b1 <+293>:\tmov    rsp,rbp\n   0x000000000008a8b4 <+296>:\tpop    rbp\n   0x000000000008a8b5 <+297>:\tret\n   0x000000000008a8b6 <+298>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a8bd <+305>:\tjmp    0x8a79e <main+18>\n   0x000000000008a8c2 <+310>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a8c9 <+317>:\tjmp    0x8a81a <main+142>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "five-weekends.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  var total = 0;\n  var empty = <int>[];\n  for (var year = 1900; year < 2101; year++) {\n    var months =\n        [1, 3, 5, 7, 8, 10, 12].where((m) => DateTime(year, m, 1).weekday == 5);\n    print('$year\\t$months');\n    total += months.length;\n    if (months.isEmpty) empty.add(year);\n  }\n  print('Total: $total');\n  print('Year with none: $empty');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008f96c <+0>:\tpush   rbp\n   0x000000000008f96d <+1>:\tmov    rbp,rsp\n   0x000000000008f970 <+4>:\tsub    rsp,0x68\n   0x000000000008f974 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f978 <+12>:\tjbe    0x8fe0f <main+1187>\n   0x000000000008f97e <+18>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008f985 <+25>:\txor    esi,esi\n   0x000000000008f987 <+27>:\tcall   0x56bfc <new _GrowableList>\n   0x000000000008f98c <+32>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008f990 <+36>:\tmov    r10d,0x1\n   0x000000000008f996 <+42>:\tcall   0x89574 <stub _iso_stub_AllocateContextStub>\n   0x000000000008f99b <+47>:\tmov    QWORD PTR [rax+0x17],0xed8\n   0x000000000008f9a3 <+55>:\tmov    rsi,rax\n   0x000000000008f9a6 <+58>:\txor    edx,edx\n   0x000000000008f9a8 <+60>:\tmov    ecx,0x76c\n   0x000000000008f9ad <+65>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008f9b1 <+69>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008f9b5 <+73>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008f9b9 <+77>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008f9bd <+81>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008f9c1 <+85>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f9c5 <+89>:\tjbe    0x8fe1b <main+1199>\n   0x000000000008f9cb <+95>:\tcmp    rcx,0x835\n   0x000000000008f9d2 <+102>:\tjge    0x8fd65 <main+1017>\n   0x000000000008f9d8 <+108>:\tmov    rbx,rax\n   0x000000000008f9db <+111>:\tmov    r10d,0xe\n   0x000000000008f9e1 <+117>:\tcall   0x8a484 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008f9e6 <+122>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008f9ea <+126>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008f9f2 <+134>:\tmov    QWORD PTR [rax+0x1f],0x6\n   0x000000000008f9fa <+142>:\tmov    QWORD PTR [rax+0x27],0xa\n   0x000000000008fa02 <+150>:\tmov    QWORD PTR [rax+0x2f],0xe\n   0x000000000008fa0a <+158>:\tmov    QWORD PTR [rax+0x37],0x10\n   0x000000000008fa12 <+166>:\tmov    QWORD PTR [rax+0x3f],0x14\n   0x000000000008fa1a <+174>:\tmov    QWORD PTR [rax+0x47],0x18\n   0x000000000008fa22 <+182>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008fa29 <+189>:\tcall   0x89544 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008fa2e <+194>:\tmov    rcx,rax\n   0x000000000008fa31 <+197>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008fa35 <+201>:\tmov    QWORD PTR [rbp-0x30],rcx\n   0x000000000008fa39 <+205>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008fa3d <+209>:\tmov    QWORD PTR [rcx+0xf],0xe\n   0x000000000008fa45 <+217>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008fa4c <+224>:\tcall   0x8fedc <new WhereIterable>\n   0x000000000008fa51 <+229>:\tmov    rcx,rax\n   0x000000000008fa54 <+232>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008fa58 <+236>:\tmov    QWORD PTR [rbp-0x28],rcx\n   0x000000000008fa5c <+240>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008fa60 <+244>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008fa64 <+248>:\tmov    rbx,QWORD PTR [r15+0x17f7]\n   0x000000000008fa6b <+255>:\tcall   0x898a0 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008fa70 <+260>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x000000000008fa74 <+264>:\tmov    QWORD PTR [rdi+0x17],rax\n   0x000000000008fa78 <+268>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fa7c <+272>:\tmov    r10d,0x6\n   0x000000000008fa82 <+278>:\tcall   0x8a484 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008fa87 <+283>:\tmov    rdx,rax\n   0x000000000008fa8a <+286>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008fa8e <+290>:\tmov    rax,rcx\n   0x000000000008fa91 <+293>:\tadd    rax,rax\n   0x000000000008fa94 <+296>:\tjno    0x8faa3 <main+311>\n   0x000000000008fa9a <+302>:\tcall   0x8a708 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008fa9f <+307>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008faa3 <+311>:\tmov    QWORD PTR [rdx+0x17],rax\n   0x000000000008faa7 <+315>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008faae <+322>:\tmov    QWORD PTR [rdx+0x1f],r11\n   0x000000000008fab2 <+326>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x000000000008fab6 <+330>:\tmov    QWORD PTR [rdx+0x27],rdi\n   0x000000000008faba <+334>:\tmov    QWORD PTR [rsp],rdx\n   0x000000000008fabe <+338>:\tcall   0x5c5e8 <_StringBase._interpolate>\n   0x000000000008fac3 <+343>:\tmov    rdi,rax\n   0x000000000008fac6 <+346>:\tcall   0x8fe78 <printToConsole>\n   0x000000000008facb <+351>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x000000000008facf <+355>:\tcall   0x58128 <WhereIterable.iterator>\n   0x000000000008fad4 <+360>:\tmov    rdx,QWORD PTR [rax+0xf]\n   0x000000000008fad8 <+364>:\tmov    QWORD PTR [rbp-0x50],rdx\n   0x000000000008fadc <+368>:\tmov    rdi,QWORD PTR [rdx+0xf]\n   0x000000000008fae0 <+372>:\tmov    QWORD PTR [rbp-0x48],rdi\n   0x000000000008fae4 <+376>:\tmov    rbx,QWORD PTR [rdx+0x17]\n   0x000000000008fae8 <+380>:\tmov    QWORD PTR [rbp-0x40],rbx\n   0x000000000008faec <+384>:\tmov    rsi,QWORD PTR [rax+0x17]\n   0x000000000008faf0 <+388>:\tmov    QWORD PTR [rbp-0x38],rsi\n   0x000000000008faf4 <+392>:\tmov    rax,QWORD PTR [rdx+0x7]\n   0x000000000008faf8 <+396>:\tmov    QWORD PTR [rbp-0x30],rax\n   0x000000000008fafc <+400>:\txor    r8d,r8d\n   0x000000000008faff <+403>:\tmov    QWORD PTR [rbp-0x20],r8\n   0x000000000008fb03 <+407>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008fb07 <+411>:\tjbe    0x8fe27 <main+1211>\n   0x000000000008fb0d <+417>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008fb11 <+421>:\tjbe    0x8fe33 <main+1223>\n   0x000000000008fb17 <+427>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x000000000008fb1a <+430>:\tshr    ecx,0xc\n   0x000000000008fb1d <+433>:\tmov    QWORD PTR [rsp],rdi\n   0x000000000008fb21 <+437>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008fb25 <+441>:\tcall   QWORD PTR [rax+rcx*8+0x7828]\n   0x000000000008fb2c <+448>:\tsar    rax,1\n   0x000000000008fb2f <+451>:\tjae    0x8fb36 <main+458>\n   0x000000000008fb31 <+453>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008fb36 <+458>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x000000000008fb3a <+462>:\tcmp    rdx,rax\n   0x000000000008fb3d <+465>:\tjne    0x8fdf2 <main+1158>\n   0x000000000008fb43 <+471>:\tmov    rbx,QWORD PTR [rbp-0x50]\n   0x000000000008fb47 <+475>:\tmov    rsi,QWORD PTR [rbx+0x1f]\n   0x000000000008fb4b <+479>:\tcmp    rsi,rax\n   0x000000000008fb4e <+482>:\tjge    0x8fc43 <main+727>\n   0x000000000008fb54 <+488>:\tmov    rax,QWORD PTR [rbp-0x48]\n   0x000000000008fb58 <+492>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008fb5b <+495>:\tshr    ecx,0xc\n   0x000000000008fb5e <+498>:\tmov    rdi,rax\n   0x000000000008fb61 <+501>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008fb65 <+505>:\tcall   QWORD PTR [rax+rcx*8+0x7f88]\n   0x000000000008fb6c <+512>:\tmov    rsi,rax\n   0x000000000008fb6f <+515>:\tmov    rbx,QWORD PTR [rbp-0x50]\n   0x000000000008fb73 <+519>:\tmov    QWORD PTR [rbp-0x58],rsi\n   0x000000000008fb77 <+523>:\tmov    QWORD PTR [rbx+0x27],rax\n   0x000000000008fb7b <+527>:\ttest   al,0x1\n   0x000000000008fb7d <+529>:\tje     0x8fb96 <main+554>\n   0x000000000008fb7f <+531>:\tmov    r11b,BYTE PTR [rbx-0x1]\n   0x000000000008fb83 <+535>:\tshr    r11d,0x2\n   0x000000000008fb87 <+539>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008fb8b <+543>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008fb8f <+547>:\tje     0x8fb96 <main+554>\n   0x000000000008fb91 <+549>:\tcall   0x88f7b <stub _iso_stub_WriteBarrierWrappersStub+39>\n   0x000000000008fb96 <+554>:\tmov    rax,QWORD PTR [rbx+0x1f]\n   0x000000000008fb9a <+558>:\tadd    rax,0x1\n   0x000000000008fb9e <+562>:\tmov    QWORD PTR [rbx+0x1f],rax\n   0x000000000008fba2 <+566>:\tcmp    rsi,QWORD PTR [r14+0x70]\n   0x000000000008fba6 <+570>:\tjne    0x8fbd6 <main+618>\n   0x000000000008fbac <+576>:\tmov    rax,rsi\n   0x000000000008fbaf <+579>:\tmov    rdx,QWORD PTR [rbp-0x30]\n   0x000000000008fbb3 <+583>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008fbb7 <+587>:\tcmp    rdx,QWORD PTR [r14+0x70]\n   0x000000000008fbbb <+591>:\tje     0x8fbd6 <main+618>\n   0x000000000008fbc1 <+597>:\tmov    rsi,QWORD PTR [rdx+0x27]\n   0x000000000008fbc5 <+601>:\tmov    rbx,QWORD PTR [r15+0x16f]\n   0x000000000008fbcc <+608>:\tmov    r9,QWORD PTR [r15+0x1807]\n   0x000000000008fbd3 <+615>:\tcall   QWORD PTR [rsi+0x7]\n   0x000000000008fbd6 <+618>:\tmov    r11,QWORD PTR [rbp-0x38]\n   0x000000000008fbda <+622>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008fbdf <+627>:\tmov    r11,QWORD PTR [rbp-0x58]\n   0x000000000008fbe3 <+631>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008fbe7 <+635>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x000000000008fbeb <+639>:\tmov    r10,QWORD PTR [r15+0x37f]\n   0x000000000008fbf2 <+646>:\tmov    rcx,QWORD PTR [rax+0x37]\n   0x000000000008fbf6 <+650>:\tcall   rcx\n   0x000000000008fbf8 <+652>:\tcmp    rax,QWORD PTR [r14+0x78]\n   0x000000000008fbfc <+656>:\tje     0x8fc1f <main+691>\n   0x000000000008fc02 <+662>:\tmov    r8,QWORD PTR [rbp-0x20]\n   0x000000000008fc06 <+666>:\tmov    rdx,QWORD PTR [rbp-0x50]\n   0x000000000008fc0a <+670>:\tmov    rsi,QWORD PTR [rbp-0x38]\n   0x000000000008fc0e <+674>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008fc12 <+678>:\tmov    rdi,QWORD PTR [rbp-0x48]\n   0x000000000008fc16 <+682>:\tmov    rbx,QWORD PTR [rbp-0x40]\n   0x000000000008fc1a <+686>:\tjmp    0x8fb0d <main+417>\n   0x000000000008fc1f <+691>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008fc23 <+695>:\tadd    rax,0x1\n   0x000000000008fc27 <+699>:\tmov    r8,rax\n   0x000000000008fc2a <+702>:\tmov    rdx,QWORD PTR [rbp-0x50]\n   0x000000000008fc2e <+706>:\tmov    rsi,QWORD PTR [rbp-0x38]\n   0x000000000008fc32 <+710>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008fc36 <+714>:\tmov    rdi,QWORD PTR [rbp-0x48]\n   0x000000000008fc3a <+718>:\tmov    rbx,QWORD PTR [rbp-0x40]\n   0x000000000008fc3e <+722>:\tjmp    0x8faff <main+403>\n   0x000000000008fc43 <+727>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008fc47 <+731>:\tmov    rax,rbx\n   0x000000000008fc4a <+734>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fc4e <+738>:\tmov    QWORD PTR [rax+0x27],rbx\n   0x000000000008fc52 <+742>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008fc56 <+746>:\tadd    rax,rcx\n   0x000000000008fc59 <+749>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x000000000008fc5d <+753>:\tmov    QWORD PTR [rbp-0x40],rax\n   0x000000000008fc61 <+757>:\tcall   0x58128 <WhereIterable.iterator>\n   0x000000000008fc66 <+762>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008fc69 <+765>:\tshr    ecx,0xc\n   0x000000000008fc6c <+768>:\tmov    rdi,rax\n   0x000000000008fc6f <+771>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008fc73 <+775>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008fc76 <+778>:\txor    rax,0x10\n   0x000000000008fc7a <+782>:\ttest   al,0x10\n   0x000000000008fc7c <+784>:\tjne    0x8fd03 <main+919>\n   0x000000000008fc82 <+790>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008fc86 <+794>:\tmov    r9,QWORD PTR [rbp-0x10]\n   0x000000000008fc8a <+798>:\tmov    rcx,QWORD PTR [r9+0x17]\n   0x000000000008fc8e <+802>:\tmov    QWORD PTR [rbp-0x28],rcx\n   0x000000000008fc92 <+806>:\tmov    rdx,QWORD PTR [rax+0xf]\n   0x000000000008fc96 <+810>:\tmov    rbx,QWORD PTR [rax+0x17]\n   0x000000000008fc9a <+814>:\tmov    rsi,QWORD PTR [rbx+0xf]\n   0x000000000008fc9e <+818>:\tsar    rdx,1\n   0x000000000008fca1 <+821>:\tmov    QWORD PTR [rbp-0x20],rdx\n   0x000000000008fca5 <+825>:\tsar    rsi,1\n   0x000000000008fca8 <+828>:\tcmp    rdx,rsi\n   0x000000000008fcab <+831>:\tjne    0x8fcb9 <main+845>\n   0x000000000008fcb1 <+837>:\tmov    rdi,rax\n   0x000000000008fcb4 <+840>:\tcall   0x57014 <List._growToNextCapacity>\n   0x000000000008fcb9 <+845>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008fcbd <+849>:\tmov    rbx,QWORD PTR [rbp-0x20]\n   0x000000000008fcc1 <+853>:\tmov    rax,rbx\n   0x000000000008fcc4 <+856>:\tadd    rax,0x1\n   0x000000000008fcc8 <+860>:\tmov    rdx,rax\n   0x000000000008fccb <+863>:\tadd    rdx,rdx\n   0x000000000008fcce <+866>:\tmov    QWORD PTR [rcx+0xf],rdx\n   0x000000000008fcd2 <+870>:\tmov    rdx,QWORD PTR [rcx+0x17]\n   0x000000000008fcd6 <+874>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008fcda <+878>:\tlea    r13,[rdx+rbx*8+0x17]\n   0x000000000008fcdf <+883>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008fce3 <+887>:\ttest   al,0x1\n   0x000000000008fce5 <+889>:\tje     0x8fcfe <main+914>\n   0x000000000008fce7 <+891>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008fceb <+895>:\tshr    r11d,0x2\n   0x000000000008fcef <+899>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008fcf3 <+903>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008fcf7 <+907>:\tje     0x8fcfe <main+914>\n   0x000000000008fcf9 <+909>:\tcall   0x88a9c <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008fcfe <+914>:\tjmp    0x8fd07 <main+923>\n   0x000000000008fd03 <+919>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008fd07 <+923>:\tmov    r9,QWORD PTR [rbp-0x10]\n   0x000000000008fd0b <+927>:\tcall   0x88fe4 <stub _iso_stub_CloneContextStub>\n   0x000000000008fd10 <+932>:\tmov    rsi,rax\n   0x000000000008fd13 <+935>:\tmov    rax,QWORD PTR [rsi+0x17]\n   0x000000000008fd17 <+939>:\tsar    rax,1\n   0x000000000008fd1a <+942>:\tjae    0x8fd21 <main+949>\n   0x000000000008fd1c <+944>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008fd21 <+949>:\tmov    rcx,rax\n   0x000000000008fd24 <+952>:\tadd    rcx,0x1\n   0x000000000008fd28 <+956>:\tmov    rax,rcx\n   0x000000000008fd2b <+959>:\tadd    rax,rax\n   0x000000000008fd2e <+962>:\tjno    0x8fd3d <main+977>\n   0x000000000008fd34 <+968>:\tcall   0x8a708 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008fd39 <+973>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008fd3d <+977>:\tmov    QWORD PTR [rsi+0x17],rax\n   0x000000000008fd41 <+981>:\ttest   al,0x1\n   0x000000000008fd43 <+983>:\tje     0x8fd5c <main+1008>\n   0x000000000008fd45 <+985>:\tmov    r11b,BYTE PTR [rsi-0x1]\n   0x000000000008fd49 <+989>:\tshr    r11d,0x2\n   0x000000000008fd4d <+993>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008fd51 <+997>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008fd55 <+1001>:\tje     0x8fd5c <main+1008>\n   0x000000000008fd57 <+1003>:\tcall   0x88f88 <stub _iso_stub_WriteBarrierWrappersStub+52>\n   0x000000000008fd5c <+1008>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x000000000008fd60 <+1012>:\tjmp    0x8f9ad <main+65>\n   0x000000000008fd65 <+1017>:\tmov    rax,rdi\n   0x000000000008fd68 <+1020>:\tmov    rcx,rdx\n   0x000000000008fd6b <+1023>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fd6f <+1027>:\tmov    r10d,0x4\n   0x000000000008fd75 <+1033>:\tcall   0x8a484 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008fd7a <+1038>:\tmov    rcx,rax\n   0x000000000008fd7d <+1041>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008fd84 <+1048>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008fd88 <+1052>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008fd8c <+1056>:\tmov    rax,rdx\n   0x000000000008fd8f <+1059>:\tadd    rax,rax\n   0x000000000008fd92 <+1062>:\tjno    0x8fda1 <main+1077>\n   0x000000000008fd98 <+1068>:\tcall   0x8a708 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008fd9d <+1073>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008fda1 <+1077>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008fda5 <+1081>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008fda9 <+1085>:\tcall   0x5c5e8 <_StringBase._interpolate>\n   0x000000000008fdae <+1090>:\tmov    rdi,rax\n   0x000000000008fdb1 <+1093>:\tcall   0x8fe40 <print>\n   0x000000000008fdb6 <+1098>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fdba <+1102>:\tmov    r10d,0x4\n   0x000000000008fdc0 <+1108>:\tcall   0x8a484 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008fdc5 <+1113>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008fdcc <+1120>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008fdd0 <+1124>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008fdd4 <+1128>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008fdd8 <+1132>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008fddc <+1136>:\tcall   0x5c5e8 <_StringBase._interpolate>\n   0x000000000008fde1 <+1141>:\tmov    rdi,rax\n   0x000000000008fde4 <+1144>:\tcall   0x8fe40 <print>\n   0x000000000008fde9 <+1149>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008fded <+1153>:\tmov    rsp,rbp\n   0x000000000008fdf0 <+1156>:\tpop    rbp\n   0x000000000008fdf1 <+1157>:\tret\n   0x000000000008fdf2 <+1158>:\tmov    rax,QWORD PTR [rbp-0x48]\n   0x000000000008fdf6 <+1162>:\tcall   0x57334 <new ConcurrentModificationError>\n   0x000000000008fdfb <+1167>:\tmov    rcx,rax\n   0x000000000008fdfe <+1170>:\tmov    rax,QWORD PTR [rbp-0x48]\n   0x000000000008fe02 <+1174>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008fe06 <+1178>:\tmov    rax,rcx\n   0x000000000008fe09 <+1181>:\tcall   0x88a7c <stub _iso_stub_ThrowStub>\n   0x000000000008fe0e <+1186>:\tint3\n   0x000000000008fe0f <+1187>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008fe16 <+1194>:\tjmp    0x8f97e <main+18>\n   0x000000000008fe1b <+1199>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008fe22 <+1206>:\tjmp    0x8f9cb <main+95>\n   0x000000000008fe27 <+1211>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008fe2e <+1218>:\tjmp    0x8fb0d <main+417>\n   0x000000000008fe33 <+1223>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008fe3a <+1230>:\tjmp    0x8fb17 <main+427>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "fizzbuzz.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  for (int i = 1; i <= 100; i++) {\n    List<String> out = [];\n    if (i % 3 == 0)\n      out.add(\"Fizz\");\n    if (i % 5 == 0)\n      out.add(\"Buzz\");\n    print(out.length > 0 ? out.join(\"\") : i);\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x28\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a36b <main+535>\n   0x000000000008a166 <+18>:\tmov    eax,0x1\n   0x000000000008a16b <+23>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a16f <+27>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a173 <+31>:\tjbe    0x8a377 <main+547>\n   0x000000000008a179 <+37>:\tcmp    rax,0x64\n   0x000000000008a17d <+41>:\tjg     0x8a362 <main+526>\n   0x000000000008a183 <+47>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008a187 <+51>:\tmov    rax,QWORD PTR [rax]\n   0x000000000008a18a <+54>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008a18e <+58>:\tjne    0x8a1a0 <main+76>\n   0x000000000008a194 <+64>:\tmov    rdx,QWORD PTR [r15+0x147]\n   0x000000000008a19b <+71>:\tcall   0x83180 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000008a1a0 <+76>:\tmov    rdx,QWORD PTR [r15+0xaf]\n   0x000000000008a1a7 <+83>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a1ab <+87>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a1b0 <+92>:\tmov    rbx,rax\n   0x000000000008a1b3 <+95>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a1b7 <+99>:\tmov    QWORD PTR [rbp-0x18],rbx\n   0x000000000008a1bb <+103>:\tmov    QWORD PTR [rbx+0x17],rcx\n   0x000000000008a1bf <+107>:\tmov    QWORD PTR [rbx+0xf],0x0\n   0x000000000008a1c7 <+115>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1cb <+119>:\tmov    esi,0x3\n   0x000000000008a1d0 <+124>:\tmov    r11,rax\n   0x000000000008a1d3 <+127>:\tmov    rax,QWORD PTR [r15+0x17f7]\n   0x000000000008a1da <+134>:\timul   r11\n   0x000000000008a1dd <+137>:\tmov    rax,rdx\n   0x000000000008a1e0 <+140>:\tshr    rdx,0x3f\n   0x000000000008a1e4 <+144>:\tadd    rdx,rax\n   0x000000000008a1e7 <+147>:\tmov    rax,r11\n   0x000000000008a1ea <+150>:\tmov    r11d,0x3\n   0x000000000008a1f0 <+156>:\timul   rdx,r11\n   0x000000000008a1f4 <+160>:\tsub    rax,rdx\n   0x000000000008a1f7 <+163>:\tjge    0x8a200 <main+172>\n   0x000000000008a1fd <+169>:\tadd    rax,r11\n   0x000000000008a200 <+172>:\tmov    rdx,rax\n   0x000000000008a203 <+175>:\tcmp    rdx,0x0\n   0x000000000008a207 <+179>:\tjne    0x8a24a <main+246>\n   0x000000000008a20d <+185>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008a211 <+189>:\ttest   rax,rax\n   0x000000000008a214 <+192>:\tjne    0x8a222 <main+206>\n   0x000000000008a21a <+198>:\tmov    rdi,rbx\n   0x000000000008a21d <+201>:\tcall   0x53250 <List._growToNextCapacity>\n   0x000000000008a222 <+206>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008a226 <+210>:\tmov    QWORD PTR [rbx+0xf],0x2\n   0x000000000008a22e <+218>:\tmov    rcx,QWORD PTR [rbx+0x17]\n   0x000000000008a232 <+222>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a239 <+229>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008a23d <+233>:\tmov    rdi,rcx\n   0x000000000008a240 <+236>:\tmov    esi,0x1\n   0x000000000008a245 <+241>:\tjmp    0x8a24f <main+251>\n   0x000000000008a24a <+246>:\tmov    rdi,rcx\n   0x000000000008a24d <+249>:\txor    esi,esi\n   0x000000000008a24f <+251>:\tmov    ecx,0x5\n   0x000000000008a254 <+256>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a258 <+260>:\tmov    QWORD PTR [rbp-0x20],rsi\n   0x000000000008a25c <+264>:\tmov    r11,rax\n   0x000000000008a25f <+267>:\tmov    rax,QWORD PTR [r15+0x1807]\n   0x000000000008a266 <+274>:\timul   r11\n   0x000000000008a269 <+277>:\tsar    rdx,1\n   0x000000000008a26c <+280>:\tmov    rax,rdx\n   0x000000000008a26f <+283>:\tshr    rdx,0x3f\n   0x000000000008a273 <+287>:\tadd    rdx,rax\n   0x000000000008a276 <+290>:\tmov    rax,r11\n   0x000000000008a279 <+293>:\tmov    r11d,0x5\n   0x000000000008a27f <+299>:\timul   rdx,r11\n   0x000000000008a283 <+303>:\tsub    rax,rdx\n   0x000000000008a286 <+306>:\tjge    0x8a28f <main+315>\n   0x000000000008a28c <+312>:\tadd    rax,r11\n   0x000000000008a28f <+315>:\tmov    rdx,rax\n   0x000000000008a292 <+318>:\tcmp    rdx,0x0\n   0x000000000008a296 <+322>:\tjne    0x8a2f4 <main+416>\n   0x000000000008a29c <+328>:\tmov    rax,QWORD PTR [rdi+0xf]\n   0x000000000008a2a0 <+332>:\tsar    rax,1\n   0x000000000008a2a3 <+335>:\tcmp    rsi,rax\n   0x000000000008a2a6 <+338>:\tjne    0x8a2b4 <main+352>\n   0x000000000008a2ac <+344>:\tmov    rdi,rbx\n   0x000000000008a2af <+347>:\tcall   0x53250 <List._growToNextCapacity>\n   0x000000000008a2b4 <+352>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a2b8 <+356>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a2bc <+360>:\tmov    rdx,rcx\n   0x000000000008a2bf <+363>:\tadd    rdx,0x1\n   0x000000000008a2c3 <+367>:\tmov    rax,rdx\n   0x000000000008a2c6 <+370>:\tadd    rax,rax\n   0x000000000008a2c9 <+373>:\tmov    QWORD PTR [rdi+0xf],rax\n   0x000000000008a2cd <+377>:\tmov    rax,rdx\n   0x000000000008a2d0 <+380>:\tmov    rbx,rcx\n   0x000000000008a2d3 <+383>:\tcmp    rbx,rax\n   0x000000000008a2d6 <+386>:\tjae    0x8a383 <main+559>\n   0x000000000008a2dc <+392>:\tmov    rax,QWORD PTR [rdi+0x17]\n   0x000000000008a2e0 <+396>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a2e7 <+403>:\tmov    QWORD PTR [rax+rcx*8+0x17],r11\n   0x000000000008a2ec <+408>:\tmov    rax,rdx\n   0x000000000008a2ef <+411>:\tjmp    0x8a2fd <main+425>\n   0x000000000008a2f4 <+416>:\tmov    rdi,rbx\n   0x000000000008a2f7 <+419>:\tmov    rcx,rsi\n   0x000000000008a2fa <+422>:\tmov    rax,rcx\n   0x000000000008a2fd <+425>:\tcmp    rax,0x0\n   0x000000000008a301 <+429>:\tjle    0x8a322 <main+462>\n   0x000000000008a307 <+435>:\tmov    rsi,QWORD PTR [r15+0xcf]\n   0x000000000008a30e <+442>:\tcall   0x5b698 <List.join>\n   0x000000000008a313 <+447>:\tmov    rcx,rax\n   0x000000000008a316 <+450>:\tmov    rax,rcx\n   0x000000000008a319 <+453>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a31d <+457>:\tjmp    0x8a341 <main+493>\n   0x000000000008a322 <+462>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a326 <+466>:\tmov    rax,rcx\n   0x000000000008a329 <+469>:\tadd    rax,rax\n   0x000000000008a32c <+472>:\tjno    0x8a33b <main+487>\n   0x000000000008a332 <+478>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a337 <+483>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a33b <+487>:\tmov    rdx,rax\n   0x000000000008a33e <+490>:\tmov    rax,rdx\n   0x000000000008a341 <+493>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a345 <+497>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a34a <+502>:\tmov    rdi,rax\n   0x000000000008a34d <+505>:\tcall   0x8a388 <printToConsole>\n   0x000000000008a352 <+510>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a356 <+514>:\tadd    rcx,0x1\n   0x000000000008a35a <+518>:\tmov    rax,rcx\n   0x000000000008a35d <+521>:\tjmp    0x8a16b <main+23>\n   0x000000000008a362 <+526>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a366 <+530>:\tmov    rsp,rbp\n   0x000000000008a369 <+533>:\tpop    rbp\n   0x000000000008a36a <+534>:\tret\n   0x000000000008a36b <+535>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a372 <+542>:\tjmp    0x8a166 <main+18>\n   0x000000000008a377 <+547>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a37e <+554>:\tjmp    0x8a179 <main+37>\n   0x000000000008a383 <+559>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "function-definition.dart",
  "functions": [
    {
      "name": "main",
      "source": "main(){\n    print(multiply(1,2));\n    print(multiply2(1,2));\n    print(multiply3(1,2));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a18f <main+59>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tcall   0x8a198 <printToConsole>\n   0x000000000008a16e <+26>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a175 <+33>:\tcall   0x8a198 <printToConsole>\n   0x000000000008a17a <+38>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a181 <+45>:\tcall   0x8a198 <printToConsole>\n   0x000000000008a186 <+50>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a18a <+54>:\tmov    rsp,rbp\n   0x000000000008a18d <+57>:\tpop    rbp\n   0x000000000008a18e <+58>:\tret\n   0x000000000008a18f <+59>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a196 <+66>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "generate-lower-case-ascii-alphabet.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  List<String> lower =\n      List.generate(26, (index) => String.fromCharCode(97 + index));\n  print(lower);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a215 <main+193>\n   0x000000000008a166 <+18>:\tmov    rdi,QWORD PTR [r15+0xaf]\n   0x000000000008a16d <+25>:\tmov    esi,0x1a\n   0x000000000008a172 <+30>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a177 <+35>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a17b <+39>:\txor    ebx,ebx\n   0x000000000008a17d <+41>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x000000000008a181 <+45>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a185 <+49>:\tjbe    0x8a221 <main+205>\n   0x000000000008a18b <+55>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a18f <+59>:\tsar    rcx,1\n   0x000000000008a192 <+62>:\tcmp    rbx,rcx\n   0x000000000008a195 <+65>:\tjge    0x8a204 <main+176>\n   0x000000000008a19b <+71>:\tmov    rsi,rbx\n   0x000000000008a19e <+74>:\tadd    rsi,0x61\n   0x000000000008a1a2 <+78>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a1a6 <+82>:\tcall   0x5d68c <new String.fromCharCode>\n   0x000000000008a1ab <+87>:\tmov    rcx,rax\n   0x000000000008a1ae <+90>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a1b2 <+94>:\tmov    rax,QWORD PTR [rdi+0xf]\n   0x000000000008a1b6 <+98>:\tsar    rax,1\n   0x000000000008a1b9 <+101>:\tmov    rbx,QWORD PTR [rbp-0x8]\n   0x000000000008a1bd <+105>:\tcmp    rbx,rax\n   0x000000000008a1c0 <+108>:\tjae    0x8a22d <main+217>\n   0x000000000008a1c6 <+114>:\tmov    rdx,QWORD PTR [rdi+0x17]\n   0x000000000008a1ca <+118>:\tmov    rax,rcx\n   0x000000000008a1cd <+121>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a1d1 <+125>:\tlea    r13,[rdx+rcx*8+0x17]\n   0x000000000008a1d6 <+130>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a1da <+134>:\ttest   al,0x1\n   0x000000000008a1dc <+136>:\tje     0x8a1f5 <main+161>\n   0x000000000008a1de <+138>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a1e2 <+142>:\tshr    r11d,0x2\n   0x000000000008a1e6 <+146>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a1ea <+150>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a1ee <+154>:\tje     0x8a1f5 <main+161>\n   0x000000000008a1f0 <+156>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a1f5 <+161>:\tadd    rcx,0x1\n   0x000000000008a1f9 <+165>:\tmov    rbx,rcx\n   0x000000000008a1fc <+168>:\tmov    rax,rdi\n   0x000000000008a1ff <+171>:\tjmp    0x8a17d <main+41>\n   0x000000000008a204 <+176>:\tmov    rdi,rax\n   0x000000000008a207 <+179>:\tcall   0x8a234 <print>\n   0x000000000008a20c <+184>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a210 <+188>:\tmov    rsp,rbp\n   0x000000000008a213 <+191>:\tpop    rbp\n   0x000000000008a214 <+192>:\tret\n   0x000000000008a215 <+193>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a21c <+200>:\tjmp    0x8a166 <main+18>\n   0x000000000008a221 <+205>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a228 <+212>:\tjmp    0x8a18b <main+55>\n   0x000000000008a22d <+217>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "golden-ratio-convergence.dart",
  "functions": [
    {
      "name": "iterate",
      "source": "void iterate() {\n  int count = 0;\n  double phi0 = 1.0;\n  double phi1;\n  double difference;\n  do {\n    phi1 = 1.0 + (1.0 / phi0);\n    difference = (phi1 - phi0).abs();\n    phi0 = phi1;\n    count += 1;\n  } while (1.0e-5 < difference);\n\n  print(\"Result: $phi1 after $count iterations\");\n  print(\"The error is approximately ${phi1 - (0.5 * (1.0 + sqrt(5.0)))}\");\n}",
      "assembly": "Dump of assembler code for function iterate:\n   0x000000000008a17c <+0>:\tpush   rbp\n   0x000000000008a17d <+1>:\tmov    rbp,rsp\n   0x000000000008a180 <+4>:\tsub    rsp,0x18\n   0x000000000008a184 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a188 <+12>:\tjbe    0x8a32b <iterate+431>\n   0x000000000008a18e <+18>:\txor    eax,eax\n   0x000000000008a190 <+20>:\tmovsd  xmm3,QWORD PTR [r15+0x17f7]\n   0x000000000008a199 <+29>:\tmovsd  xmm2,QWORD PTR [r15+0x17f7]\n   0x000000000008a1a2 <+38>:\txorps  xmm1,xmm1\n   0x000000000008a1a5 <+41>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x000000000008a1ae <+50>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1b2 <+54>:\tjbe    0x8a337 <iterate+443>\n   0x000000000008a1b8 <+60>:\tmovaps xmm4,xmm2\n   0x000000000008a1bb <+63>:\tdivsd  xmm4,xmm3\n   0x000000000008a1bf <+67>:\taddsd  xmm4,xmm2\n   0x000000000008a1c3 <+71>:\tmovsd  QWORD PTR [rbp-0x10],xmm4\n   0x000000000008a1c8 <+76>:\tmovaps xmm5,xmm4\n   0x000000000008a1cb <+79>:\tsubsd  xmm5,xmm3\n   0x000000000008a1cf <+83>:\tcomisd xmm5,xmm1\n   0x000000000008a1d3 <+87>:\tjp     0x8a1e7 <iterate+107>\n   0x000000000008a1d9 <+93>:\tjne    0x8a1e7 <iterate+107>\n   0x000000000008a1df <+99>:\txorps  xmm3,xmm3\n   0x000000000008a1e2 <+102>:\tjmp    0x8a20c <iterate+144>\n   0x000000000008a1e7 <+107>:\tcomisd xmm5,xmm1\n   0x000000000008a1eb <+111>:\tjp     0x8a209 <iterate+141>\n   0x000000000008a1f1 <+117>:\tjae    0x8a209 <iterate+141>\n   0x000000000008a1f7 <+123>:\tmov    r11,QWORD PTR [r14+0x2b0]\n   0x000000000008a1fe <+130>:\tmovups xmm6,XMMWORD PTR [r11]\n   0x000000000008a202 <+134>:\txorpd  xmm6,xmm5\n   0x000000000008a206 <+138>:\tmovaps xmm5,xmm6\n   0x000000000008a209 <+141>:\tmovaps xmm3,xmm5\n   0x000000000008a20c <+144>:\tadd    rax,0x1\n   0x000000000008a210 <+148>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a214 <+152>:\tcomisd xmm3,xmm0\n   0x000000000008a218 <+156>:\tjp     0x8a229 <iterate+173>\n   0x000000000008a21e <+162>:\tjbe    0x8a229 <iterate+173>\n   0x000000000008a224 <+168>:\tmovaps xmm3,xmm4\n   0x000000000008a227 <+171>:\tjmp    0x8a1ae <iterate+50>\n   0x000000000008a229 <+173>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a22d <+177>:\tmov    r10d,0xa\n   0x000000000008a233 <+183>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a238 <+188>:\tmov    rcx,rax\n   0x000000000008a23b <+191>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a242 <+198>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008a246 <+202>:\tmovsd  xmm0,QWORD PTR [rbp-0x10]\n   0x000000000008a24b <+207>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008a24f <+211>:\tadd    rax,0x10\n   0x000000000008a253 <+215>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008a257 <+219>:\tjae    0x8a343 <iterate+455>\n   0x000000000008a25d <+225>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008a261 <+229>:\tsub    rax,0xf\n   0x000000000008a265 <+233>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008a26d <+241>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008a272 <+246>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008a276 <+250>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a27d <+257>:\tmov    QWORD PTR [rcx+0x27],r11\n   0x000000000008a281 <+261>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a285 <+265>:\tmov    rax,rdx\n   0x000000000008a288 <+268>:\tadd    rax,rax\n   0x000000000008a28b <+271>:\tjno    0x8a29a <iterate+286>\n   0x000000000008a291 <+277>:\tcall   0x84f64 <stub _iso_stub_AllocateMintSharedWithFPURegsStub>\n   0x000000000008a296 <+282>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a29a <+286>:\tmov    QWORD PTR [rcx+0x2f],rax\n   0x000000000008a29e <+290>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a2a5 <+297>:\tmov    QWORD PTR [rcx+0x37],r11\n   0x000000000008a2a9 <+301>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a2ad <+305>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a2b2 <+310>:\tmov    rdi,rax\n   0x000000000008a2b5 <+313>:\tcall   0x8a37c <print>\n   0x000000000008a2ba <+318>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a2be <+322>:\tmov    r10d,0x4\n   0x000000000008a2c4 <+328>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2c9 <+333>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a2d0 <+340>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a2d4 <+344>:\tmovsd  xmm0,QWORD PTR [r15+0x1827]\n   0x000000000008a2dd <+353>:\tmovsd  xmm1,QWORD PTR [rbp-0x10]\n   0x000000000008a2e2 <+358>:\tsubsd  xmm1,xmm0\n   0x000000000008a2e6 <+362>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008a2ea <+366>:\tadd    rcx,0x10\n   0x000000000008a2ee <+370>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008a2f2 <+374>:\tjae    0x8a35f <iterate+483>\n   0x000000000008a2f8 <+380>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008a2fc <+384>:\tsub    rcx,0xf\n   0x000000000008a300 <+388>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008a308 <+396>:\tmovsd  QWORD PTR [rcx+0x7],xmm1\n   0x000000000008a30d <+401>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a311 <+405>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a315 <+409>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a31a <+414>:\tmov    rdi,rax\n   0x000000000008a31d <+417>:\tcall   0x8a37c <print>\n   0x000000000008a322 <+422>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a326 <+426>:\tmov    rsp,rbp\n   0x000000000008a329 <+429>:\tpop    rbp\n   0x000000000008a32a <+430>:\tret\n   0x000000000008a32b <+431>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a332 <+438>:\tjmp    0x8a18e <iterate+18>\n   0x000000000008a337 <+443>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a33e <+450>:\tjmp    0x8a1b8 <iterate+60>\n   0x000000000008a343 <+455>:\tsub    rsp,0x10\n   0x000000000008a347 <+459>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a34b <+463>:\tpush   rcx\n   0x000000000008a34c <+464>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a351 <+469>:\tpop    rcx\n   0x000000000008a352 <+470>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a356 <+474>:\tadd    rsp,0x10\n   0x000000000008a35a <+478>:\tjmp    0x8a26d <iterate+241>\n   0x000000000008a35f <+483>:\tsub    rsp,0x10\n   0x000000000008a363 <+487>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x000000000008a367 <+491>:\tpush   rax\n   0x000000000008a368 <+492>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a36d <+497>:\tmov    rcx,rax\n   0x000000000008a370 <+500>:\tpop    rax\n   0x000000000008a371 <+501>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x000000000008a375 <+505>:\tadd    rsp,0x10\n   0x000000000008a379 <+509>:\tjmp    0x8a308 <iterate+396>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  iterate();\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a170 <main+28>\n   0x000000000008a162 <+14>:\tcall   0x8a17c <iterate>\n   0x000000000008a167 <+19>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a16b <+23>:\tmov    rsp,rbp\n   0x000000000008a16e <+26>:\tpop    rbp\n   0x000000000008a16f <+27>:\tret\n   0x000000000008a170 <+28>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a177 <+35>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "guess-the-number.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  final n = (1 + new Random().nextInt(10)).toString();\n  print(\"Guess which number I've chosen in the range 1 to 10\");\n  do { stdout.write(\" Your guess : \"); } while (n != stdin.readLineSync());\n  print(\"\\nWell guessed!\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000009ee4c <+0>:\tpush   rbp\n   0x000000000009ee4d <+1>:\tmov    rbp,rsp\n   0x000000000009ee50 <+4>:\tsub    rsp,0x18\n   0x000000000009ee54 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009ee58 <+12>:\tjbe    0x9efa1 <main+341>\n   0x000000000009ee5e <+18>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000009ee62 <+22>:\tcall   0x9ff9c <new Random>\n   0x000000000009ee67 <+27>:\tmov    rdi,rax\n   0x000000000009ee6a <+30>:\tmov    esi,0xa\n   0x000000000009ee6f <+35>:\tcall   0x9fefc <_Random.nextInt>\n   0x000000000009ee74 <+40>:\tmov    rcx,rax\n   0x000000000009ee77 <+43>:\tadd    rcx,0x1\n   0x000000000009ee7b <+47>:\tmov    rax,rcx\n   0x000000000009ee7e <+50>:\tadd    rax,rax\n   0x000000000009ee81 <+53>:\tjno    0x9ee90 <main+68>\n   0x000000000009ee87 <+59>:\tcall   0x999ec <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000009ee8c <+64>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000009ee90 <+68>:\ttest   al,0x1\n   0x000000000009ee92 <+70>:\tmov    ecx,0x3c\n   0x000000000009ee97 <+75>:\tje     0x9ee9f <main+83>\n   0x000000000009ee99 <+77>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000009ee9c <+80>:\tshr    ecx,0xc\n   0x000000000009ee9f <+83>:\tmov    QWORD PTR [rsp],rax\n   0x000000000009eea3 <+87>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000009eea7 <+91>:\tcall   QWORD PTR [rax+rcx*8+0x2450]\n   0x000000000009eeae <+98>:\tmov    rdi,QWORD PTR [r15+0x183f]\n   0x000000000009eeb5 <+105>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000009eeb9 <+109>:\tcall   0x9fe98 <printToConsole>\n   0x000000000009eebe <+114>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000009eec2 <+118>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009eec6 <+122>:\tjbe    0x9efad <main+353>\n   0x000000000009eecc <+128>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000009eed0 <+132>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x000000000009eed7 <+139>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000009eedb <+143>:\tjne    0x9eeed <main+161>\n   0x000000000009eee1 <+149>:\tmov    rdx,QWORD PTR [r15+0x857]\n   0x000000000009eee8 <+156>:\tcall   0x97cc4 <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000009eeed <+161>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000009eef1 <+165>:\tmov    rax,QWORD PTR [rax+0x808]\n   0x000000000009eef8 <+172>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000009eefc <+176>:\tjne    0x9ef0e <main+194>\n   0x000000000009ef02 <+182>:\tmov    rdx,QWORD PTR [r15+0x85f]\n   0x000000000009ef09 <+189>:\tcall   0x97c7c <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000009ef0e <+194>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000009ef12 <+198>:\tmov    rax,QWORD PTR [rax+0x818]\n   0x000000000009ef19 <+205>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000009ef1d <+209>:\tjne    0x9ef2f <main+227>\n   0x000000000009ef23 <+215>:\tmov    rdx,QWORD PTR [r15+0x1847]\n   0x000000000009ef2a <+222>:\tcall   0x97c7c <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000009ef2f <+227>:\tmov    rdi,rax\n   0x000000000009ef32 <+230>:\tcall   0x9f9d4 <_StdSink._write>\n   0x000000000009ef37 <+235>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000009ef3b <+239>:\tmov    rax,QWORD PTR [rax+0x810]\n   0x000000000009ef42 <+246>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000009ef46 <+250>:\tjne    0x9ef58 <main+268>\n   0x000000000009ef4c <+256>:\tmov    rdx,QWORD PTR [r15+0x184f]\n   0x000000000009ef53 <+263>:\tcall   0x97c7c <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000009ef58 <+268>:\tmov    rdi,rax\n   0x000000000009ef5b <+271>:\tcall   0x9efbc <Stdin.readLineSync>\n   0x000000000009ef60 <+276>:\tmov    rcx,rax\n   0x000000000009ef63 <+279>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000009ef67 <+283>:\tmov    edx,DWORD PTR [rax-0x1]\n   0x000000000009ef6a <+286>:\tshr    edx,0xc\n   0x000000000009ef6d <+289>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000009ef72 <+294>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000009ef76 <+298>:\tmov    rcx,rdx\n   0x000000000009ef79 <+301>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000009ef7d <+305>:\tcall   QWORD PTR [rax+rcx*8+0x1218]\n   0x000000000009ef84 <+312>:\ttest   al,0x10\n   0x000000000009ef86 <+314>:\tjne    0x9eebe <main+114>\n   0x000000000009ef8c <+320>:\tmov    rdi,QWORD PTR [r15+0x1857]\n   0x000000000009ef93 <+327>:\tcall   0x9fe98 <printToConsole>\n   0x000000000009ef98 <+332>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000009ef9c <+336>:\tmov    rsp,rbp\n   0x000000000009ef9f <+339>:\tpop    rbp\n   0x000000000009efa0 <+340>:\tret\n   0x000000000009efa1 <+341>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009efa8 <+348>:\tjmp    0x9ee5e <main+18>\n   0x000000000009efad <+353>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009efb4 <+360>:\tjmp    0x9eecc <main+128>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "hello-world-newline-omission.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  stdout.write(\"Goodbye, World!\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090b00 <+0>:\tpush   rbp\n   0x0000000000090b01 <+1>:\tmov    rbp,rsp\n   0x0000000000090b04 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b08 <+8>:\tjbe    0x90b24 <main+36>\n   0x0000000000090b0e <+14>:\tcall   0x90fd4 <stdout>\n   0x0000000000090b13 <+19>:\tmov    rdi,rax\n   0x0000000000090b16 <+22>:\tcall   0x90b30 <_StdSink._write>\n   0x0000000000090b1b <+27>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000090b1f <+31>:\tmov    rsp,rbp\n   0x0000000000090b22 <+34>:\tpop    rbp\n   0x0000000000090b23 <+35>:\tret\n   0x0000000000090b24 <+36>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090b2b <+43>:\tjmp    0x90b0e <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "hello-world-standard-error.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  stderr.writeln('Goodbye, World!');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090b00 <+0>:\tpush   rbp\n   0x0000000000090b01 <+1>:\tmov    rbp,rsp\n   0x0000000000090b04 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b08 <+8>:\tjbe    0x90b24 <main+36>\n   0x0000000000090b0e <+14>:\tcall   0x90fec <stderr>\n   0x0000000000090b13 <+19>:\tmov    rdi,rax\n   0x0000000000090b16 <+22>:\tcall   0x90b30 <_StdSink.writeln>\n   0x0000000000090b1b <+27>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000090b1f <+31>:\tmov    rsp,rbp\n   0x0000000000090b22 <+34>:\tpop    rbp\n   0x0000000000090b23 <+35>:\tret\n   0x0000000000090b24 <+36>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090b2b <+43>:\tjmp    0x90b0e <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "hello-world-text.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n    var bye = 'Hello world!';\n    print(\"$bye\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a177 <main+35>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tcall   0x8a180 <printToConsole>\n   0x000000000008a16e <+26>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a172 <+30>:\tmov    rsp,rbp\n   0x000000000008a175 <+33>:\tpop    rbp\n   0x000000000008a176 <+34>:\tret\n   0x000000000008a177 <+35>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a17e <+42>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "hofstadter-q-sequence-1.dart",
  "functions": [
    {
      "name": "Q",
      "source": "int Q(int n) => n>2 ? Q(n-Q(n-1))+Q(n-Q(n-2)) : 1;",
      "assembly": "Dump of assembler code for function Q:\n   0x000000000008a3bc <+0>:\tpush   rbp\n   0x000000000008a3bd <+1>:\tmov    rbp,rsp\n   0x000000000008a3c0 <+4>:\tsub    rsp,0x10\n   0x000000000008a3c4 <+8>:\tmov    rax,rdi\n   0x000000000008a3c7 <+11>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a3cb <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3cf <+19>:\tjbe    0x8a436 <Q+122>\n   0x000000000008a3d5 <+25>:\tcmp    rax,0x2\n   0x000000000008a3d9 <+29>:\tjle    0x8a42c <Q+112>\n   0x000000000008a3df <+35>:\tmov    rdi,rax\n   0x000000000008a3e2 <+38>:\tsub    rdi,0x1\n   0x000000000008a3e6 <+42>:\tcall   0x8a3bc <Q>\n   0x000000000008a3eb <+47>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a3ef <+51>:\tsub    rcx,rax\n   0x000000000008a3f2 <+54>:\tmov    rdi,rcx\n   0x000000000008a3f5 <+57>:\tcall   0x8a3bc <Q>\n   0x000000000008a3fa <+62>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a3fe <+66>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a402 <+70>:\tsub    rcx,0x2\n   0x000000000008a406 <+74>:\tmov    rdi,rcx\n   0x000000000008a409 <+77>:\tcall   0x8a3bc <Q>\n   0x000000000008a40e <+82>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a412 <+86>:\tsub    rcx,rax\n   0x000000000008a415 <+89>:\tmov    rdi,rcx\n   0x000000000008a418 <+92>:\tcall   0x8a3bc <Q>\n   0x000000000008a41d <+97>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a421 <+101>:\tadd    rcx,rax\n   0x000000000008a424 <+104>:\tmov    rax,rcx\n   0x000000000008a427 <+107>:\tjmp    0x8a431 <Q+117>\n   0x000000000008a42c <+112>:\tmov    eax,0x1\n   0x000000000008a431 <+117>:\tmov    rsp,rbp\n   0x000000000008a434 <+120>:\tpop    rbp\n   0x000000000008a435 <+121>:\tret\n   0x000000000008a436 <+122>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a43d <+129>:\tjmp    0x8a3d5 <Q+25>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "main() {\n  for(int i=1;i<=10;i++) {\n    print(\"Q($i)=${Q(i)}\");\n  }\n  print(\"Q(1000)=${Q(1000)}\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x20\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a308 <main+436>\n   0x000000000008a166 <+18>:\tmov    eax,0x1\n   0x000000000008a16b <+23>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a16f <+27>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a173 <+31>:\tjbe    0x8a314 <main+448>\n   0x000000000008a179 <+37>:\tcmp    rax,0xa\n   0x000000000008a17d <+41>:\tjg     0x8a283 <main+303>\n   0x000000000008a183 <+47>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a187 <+51>:\tmov    r10d,0x8\n   0x000000000008a18d <+57>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a192 <+62>:\tmov    rcx,rax\n   0x000000000008a195 <+65>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a199 <+69>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a1a0 <+76>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008a1a4 <+80>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a1a8 <+84>:\tmov    rax,rdx\n   0x000000000008a1ab <+87>:\tadd    rax,rax\n   0x000000000008a1ae <+90>:\tjno    0x8a1bd <main+105>\n   0x000000000008a1b4 <+96>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1b9 <+101>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a1bd <+105>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008a1c1 <+109>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a1c8 <+116>:\tmov    QWORD PTR [rcx+0x27],r11\n   0x000000000008a1cc <+120>:\tcmp    rdx,0x2\n   0x000000000008a1d0 <+124>:\tjle    0x8a220 <main+204>\n   0x000000000008a1d6 <+130>:\tmov    rdi,rdx\n   0x000000000008a1d9 <+133>:\tsub    rdi,0x1\n   0x000000000008a1dd <+137>:\tcall   0x8a3bc <Q>\n   0x000000000008a1e2 <+142>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a1e6 <+146>:\tsub    rcx,rax\n   0x000000000008a1e9 <+149>:\tmov    rdi,rcx\n   0x000000000008a1ec <+152>:\tcall   0x8a3bc <Q>\n   0x000000000008a1f1 <+157>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a1f5 <+161>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a1f9 <+165>:\tsub    rcx,0x2\n   0x000000000008a1fd <+169>:\tmov    rdi,rcx\n   0x000000000008a200 <+172>:\tcall   0x8a3bc <Q>\n   0x000000000008a205 <+177>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a209 <+181>:\tsub    rcx,rax\n   0x000000000008a20c <+184>:\tmov    rdi,rcx\n   0x000000000008a20f <+187>:\tcall   0x8a3bc <Q>\n   0x000000000008a214 <+192>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a218 <+196>:\tadd    rcx,rax\n   0x000000000008a21b <+199>:\tjmp    0x8a225 <main+209>\n   0x000000000008a220 <+204>:\tmov    ecx,0x1\n   0x000000000008a225 <+209>:\tmov    rax,rcx\n   0x000000000008a228 <+212>:\tadd    rax,rax\n   0x000000000008a22b <+215>:\tjno    0x8a23a <main+230>\n   0x000000000008a231 <+221>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a236 <+226>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a23a <+230>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a23e <+234>:\tlea    r13,[rdx+0x2f]\n   0x000000000008a242 <+238>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a246 <+242>:\ttest   al,0x1\n   0x000000000008a248 <+244>:\tje     0x8a261 <main+269>\n   0x000000000008a24a <+246>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a24e <+250>:\tshr    r11d,0x2\n   0x000000000008a252 <+254>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a256 <+258>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a25a <+262>:\tje     0x8a261 <main+269>\n   0x000000000008a25c <+264>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a261 <+269>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a265 <+273>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a269 <+277>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a26e <+282>:\tmov    rdi,rax\n   0x000000000008a271 <+285>:\tcall   0x8a358 <printToConsole>\n   0x000000000008a276 <+290>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a27a <+294>:\tadd    rax,0x1\n   0x000000000008a27e <+298>:\tjmp    0x8a16b <main+23>\n   0x000000000008a283 <+303>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a287 <+307>:\tmov    r10d,0x4\n   0x000000000008a28d <+313>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a292 <+318>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a296 <+322>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a29d <+329>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a2a1 <+333>:\tmov    edi,0x3e8\n   0x000000000008a2a6 <+338>:\tcall   0x8a3bc <Q>\n   0x000000000008a2ab <+343>:\tmov    rcx,rax\n   0x000000000008a2ae <+346>:\tmov    rax,rcx\n   0x000000000008a2b1 <+349>:\tadd    rax,rax\n   0x000000000008a2b4 <+352>:\tjno    0x8a2c3 <main+367>\n   0x000000000008a2ba <+358>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a2bf <+363>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a2c3 <+367>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a2c7 <+371>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a2cb <+375>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a2cf <+379>:\ttest   al,0x1\n   0x000000000008a2d1 <+381>:\tje     0x8a2ea <main+406>\n   0x000000000008a2d3 <+383>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a2d7 <+387>:\tshr    r11d,0x2\n   0x000000000008a2db <+391>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a2df <+395>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a2e3 <+399>:\tje     0x8a2ea <main+406>\n   0x000000000008a2e5 <+401>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a2ea <+406>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a2ee <+410>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a2f2 <+414>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a2f7 <+419>:\tmov    rdi,rax\n   0x000000000008a2fa <+422>:\tcall   0x8a320 <print>\n   0x000000000008a2ff <+427>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a303 <+431>:\tmov    rsp,rbp\n   0x000000000008a306 <+434>:\tpop    rbp\n   0x000000000008a307 <+435>:\tret\n   0x000000000008a308 <+436>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a30f <+443>:\tjmp    0x8a166 <main+18>\n   0x000000000008a314 <+448>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a31b <+455>:\tjmp    0x8a179 <main+37>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "idiomatically-determine-all-the-lowercase-and-uppercase-letters.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  String lowercase = '';\n  for (var c = 0x61; c < 0x7b; c++) lowercase += String.fromCharCode(c);\n  print(lowercase);\n\n  String uppercase = '';\n  for (var c = 0x41; c < 0x5b; c++) uppercase += String.fromCharCode(c);\n  print(uppercase);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x20\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a227 <main+211>\n   0x000000000008a166 <+18>:\tmov    rcx,QWORD PTR [r15+0xcf]\n   0x000000000008a16d <+25>:\tmov    eax,0x61\n   0x000000000008a172 <+30>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a176 <+34>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a17a <+38>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a17e <+42>:\tjbe    0x8a233 <main+223>\n   0x000000000008a184 <+48>:\tcmp    rax,0x7b\n   0x000000000008a188 <+52>:\tjge    0x8a1b9 <main+101>\n   0x000000000008a18e <+58>:\tmov    rsi,rax\n   0x000000000008a191 <+61>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a195 <+65>:\tcall   0x5d68c <new String.fromCharCode>\n   0x000000000008a19a <+70>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a19e <+74>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a1a3 <+79>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a1a7 <+83>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a1ac <+88>:\tmov    rcx,rax\n   0x000000000008a1af <+91>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a1b3 <+95>:\tadd    rax,0x1\n   0x000000000008a1b7 <+99>:\tjmp    0x8a172 <main+30>\n   0x000000000008a1b9 <+101>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a1bd <+105>:\tcall   0x8a248 <print>\n   0x000000000008a1c2 <+110>:\tmov    rcx,QWORD PTR [r15+0xcf]\n   0x000000000008a1c9 <+117>:\tmov    eax,0x41\n   0x000000000008a1ce <+122>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a1d2 <+126>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a1d6 <+130>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1da <+134>:\tjbe    0x8a23f <main+235>\n   0x000000000008a1e0 <+140>:\tcmp    rax,0x5b\n   0x000000000008a1e4 <+144>:\tjge    0x8a215 <main+193>\n   0x000000000008a1ea <+150>:\tmov    rsi,rax\n   0x000000000008a1ed <+153>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a1f1 <+157>:\tcall   0x5d68c <new String.fromCharCode>\n   0x000000000008a1f6 <+162>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a1fa <+166>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a1ff <+171>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a203 <+175>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a208 <+180>:\tmov    rcx,rax\n   0x000000000008a20b <+183>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a20f <+187>:\tadd    rax,0x1\n   0x000000000008a213 <+191>:\tjmp    0x8a1ce <main+122>\n   0x000000000008a215 <+193>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a219 <+197>:\tcall   0x8a248 <print>\n   0x000000000008a21e <+202>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a222 <+206>:\tmov    rsp,rbp\n   0x000000000008a225 <+209>:\tpop    rbp\n   0x000000000008a226 <+210>:\tret\n   0x000000000008a227 <+211>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a22e <+218>:\tjmp    0x8a166 <main+18>\n   0x000000000008a233 <+223>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a23a <+230>:\tjmp    0x8a184 <main+48>\n   0x000000000008a23f <+235>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a246 <+242>:\tjmp    0x8a1e0 <main+140>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "json-1.dart",
  "functions": [
    {
      "name": "main",
      "source": "main(){\n\tvar json_string = '''\n\t{\n\t\t\"rosetta_code\": {\n\t\t\t\"task\": \"json\",\n\t\t\t\"language\": \"dart\",\n\t\t\t\"descriptions\": [ \"fun!\", \"easy to learn!\", \"awesome!\" ]\n\t\t}\n\t}\n\t''';\n\t\n\t// decode string into Map<String, dynamic>\n\tvar json_object = jsonDecode(json_string);\n\t\n\tfor ( var description in json_object[\"rosetta_code\"][\"descriptions\"] )\n\t\tprint( \"dart is $description\" );\n\n\tvar dart = {\n\t\t\"compiled\": true,\n\t\t\"interpreted\": true,\n\t\t\"creator(s)\":[ \"Lars Bak\", \"Kasper Lund\"],\n\t\t\"development company\": \"Google\"\n\t};\n\n\tvar as_json_text = jsonEncode(dart);\n\n\tassert(as_json_text == '{\"compiled\":true,\"interpreted\":true,\"creator(s)\":[\"Lars Bak\",\"Kasper Lund\"],\"development company\":\"Google\"}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090db8 <+0>:\tpush   rbp\n   0x0000000000090db9 <+1>:\tmov    rbp,rsp\n   0x0000000000090dbc <+4>:\tsub    rsp,0x20\n   0x0000000000090dc0 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090dc4 <+12>:\tjbe    0x90fde <main+550>\n   0x0000000000090dca <+18>:\tcall   0x9109c <jsonDecode>\n   0x0000000000090dcf <+23>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x0000000000090dd4 <+28>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x0000000000090ddb <+35>:\tmov    QWORD PTR [rsp],r11\n   0x0000000000090ddf <+39>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x0000000000090de4 <+44>:\tmov    rcx,QWORD PTR [r15+0x180f]\n   0x0000000000090deb <+51>:\tmov    rbx,QWORD PTR [r15+0x1817]\n   0x0000000000090df2 <+58>:\tcall   rcx\n   0x0000000000090df4 <+60>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x0000000000090df9 <+65>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x0000000000090e00 <+72>:\tmov    QWORD PTR [rsp],r11\n   0x0000000000090e04 <+76>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x0000000000090e09 <+81>:\tmov    rcx,QWORD PTR [r15+0x1827]\n   0x0000000000090e10 <+88>:\tmov    rbx,QWORD PTR [r15+0x182f]\n   0x0000000000090e17 <+95>:\tcall   rcx\n   0x0000000000090e19 <+97>:\tmov    rbx,rax\n   0x0000000000090e1c <+100>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x0000000000090e20 <+104>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x0000000000090e24 <+108>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x0000000000090e28 <+112>:\ttest   al,0x1\n   0x0000000000090e2a <+114>:\tmov    esi,0x3c\n   0x0000000000090e2f <+119>:\tje     0x90e37 <main+127>\n   0x0000000000090e31 <+121>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x0000000000090e34 <+124>:\tshr    esi,0xc\n   0x0000000000090e37 <+127>:\tsub    rsi,0x58\n   0x0000000000090e3b <+131>:\tcmp    rsi,0x4\n   0x0000000000090e3f <+135>:\tjbe    0x90e81 <main+201>\n   0x0000000000090e45 <+141>:\tsub    rsi,0x18\n   0x0000000000090e49 <+145>:\tcmp    rsi,0x37\n   0x0000000000090e4d <+149>:\tjbe    0x90e81 <main+201>\n   0x0000000000090e53 <+155>:\tsub    rsi,0x19e\n   0x0000000000090e5a <+162>:\tcmp    rsi,0x12\n   0x0000000000090e5e <+166>:\tjbe    0x90e81 <main+201>\n   0x0000000000090e64 <+172>:\tcmp    rsi,0x1a\n   0x0000000000090e68 <+176>:\tje     0x90e81 <main+201>\n   0x0000000000090e6e <+182>:\tmov    rbx,QWORD PTR [r15+0x1837]\n   0x0000000000090e75 <+189>:\tmov    r9,QWORD PTR [r15+0x183f]\n   0x0000000000090e7c <+196>:\tcall   0x89c04 <stub _iso_stub_DefaultTypeTestStub>\n   0x0000000000090e81 <+201>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000090e85 <+205>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x0000000000090e88 <+208>:\tshr    ecx,0xc\n   0x0000000000090e8b <+211>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090e8f <+215>:\tcall   QWORD PTR [rax+rcx*8+0x77a8]\n   0x0000000000090e96 <+222>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000090e9a <+226>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090e9e <+230>:\tjbe    0x90fea <main+562>\n   0x0000000000090ea4 <+236>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x0000000000090ea7 <+239>:\tshr    ecx,0xc\n   0x0000000000090eaa <+242>:\tmov    rdi,rax\n   0x0000000000090ead <+245>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090eb1 <+249>:\tcall   QWORD PTR [rax+rcx*8]\n   0x0000000000090eb4 <+252>:\ttest   al,0x10\n   0x0000000000090eb6 <+254>:\tjne    0x90f0e <main+342>\n   0x0000000000090ebc <+260>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090ec0 <+264>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x0000000000090ec3 <+267>:\tshr    ecx,0xc\n   0x0000000000090ec6 <+270>:\tmov    rdi,rax\n   0x0000000000090ec9 <+273>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090ecd <+277>:\tcall   QWORD PTR [rax+rcx*8-0x80]\n   0x0000000000090ed1 <+281>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000090ed5 <+285>:\tmov    r10d,0x4\n   0x0000000000090edb <+291>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000090edf <+295>:\tcall   0x8b8d0 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000090ee4 <+300>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x0000000000090eeb <+307>:\tmov    QWORD PTR [rax+0x17],r11\n   0x0000000000090eef <+311>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x0000000000090ef3 <+315>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x0000000000090ef7 <+319>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000090efb <+323>:\tcall   0x5ebd4 <_StringBase._interpolate>\n   0x0000000000090f00 <+328>:\tmov    rdi,rax\n   0x0000000000090f03 <+331>:\tcall   0x91038 <printToConsole>\n   0x0000000000090f08 <+336>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090f0c <+340>:\tjmp    0x90e9a <main+226>\n   0x0000000000090f0e <+342>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000090f12 <+346>:\tmov    r10d,0x10\n   0x0000000000090f18 <+352>:\tcall   0x8b8d0 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000090f1d <+357>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000090f21 <+361>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x0000000000090f28 <+368>:\tmov    QWORD PTR [rax+0x17],r11\n   0x0000000000090f2c <+372>:\tmov    r11,QWORD PTR [r14+0x78]\n   0x0000000000090f30 <+376>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x0000000000090f34 <+380>:\tmov    r11,QWORD PTR [r15+0x185f]\n   0x0000000000090f3b <+387>:\tmov    QWORD PTR [rax+0x27],r11\n   0x0000000000090f3f <+391>:\tmov    r11,QWORD PTR [r14+0x78]\n   0x0000000000090f43 <+395>:\tmov    QWORD PTR [rax+0x2f],r11\n   0x0000000000090f47 <+399>:\tmov    r11,QWORD PTR [r15+0x1867]\n   0x0000000000090f4e <+406>:\tmov    QWORD PTR [rax+0x37],r11\n   0x0000000000090f52 <+410>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000090f56 <+414>:\tmov    r10d,0x4\n   0x0000000000090f5c <+420>:\tcall   0x8b8d0 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000090f61 <+425>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000090f65 <+429>:\tmov    r11,QWORD PTR [r15+0x186f]\n   0x0000000000090f6c <+436>:\tmov    QWORD PTR [rax+0x17],r11\n   0x0000000000090f70 <+440>:\tmov    r11,QWORD PTR [r15+0x1877]\n   0x0000000000090f77 <+447>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x0000000000090f7b <+451>:\tmov    rdx,QWORD PTR [r15+0xaf]\n   0x0000000000090f82 <+458>:\tcall   0x8a990 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x0000000000090f87 <+463>:\tmov    rcx,rax\n   0x0000000000090f8a <+466>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000090f8e <+470>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x0000000000090f92 <+474>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x0000000000090f9a <+482>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090f9e <+486>:\tmov    QWORD PTR [rax+0x3f],rcx\n   0x0000000000090fa2 <+490>:\tmov    r11,QWORD PTR [r15+0x187f]\n   0x0000000000090fa9 <+497>:\tmov    QWORD PTR [rax+0x47],r11\n   0x0000000000090fad <+501>:\tmov    r11,QWORD PTR [r15+0x1887]\n   0x0000000000090fb4 <+508>:\tmov    QWORD PTR [rax+0x4f],r11\n   0x0000000000090fb8 <+512>:\tmov    r11,QWORD PTR [r15+0x188f]\n   0x0000000000090fbf <+519>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x0000000000090fc4 <+524>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000090fc8 <+528>:\tcall   0x6c2a0 <new Map._fromLiteral>\n   0x0000000000090fcd <+533>:\tmov    rdi,rax\n   0x0000000000090fd0 <+536>:\tcall   0x90ff8 <jsonEncode>\n   0x0000000000090fd5 <+541>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000090fd9 <+545>:\tmov    rsp,rbp\n   0x0000000000090fdc <+548>:\tpop    rbp\n   0x0000000000090fdd <+549>:\tret\n   0x0000000000090fde <+550>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090fe5 <+557>:\tjmp    0x90dca <main+18>\n   0x0000000000090fea <+562>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090ff1 <+569>:\tjmp    0x90ea4 <main+236>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "json-2.dart",
  "functions": [
    {
      "name": "main",
      "source": "main(){\n\tvar data = jsonDecode('{ \"foo\": 1, \"bar\": [10, \"apples\"] }');\n\n\tvar sample = { \"blue\": [1,2], \"ocean\": \"water\" };\n\n\tvar json_string = jsonEncode(sample);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008eeac <+0>:\tpush   rbp\n   0x000000000008eead <+1>:\tmov    rbp,rsp\n   0x000000000008eeb0 <+4>:\tsub    rsp,0x20\n   0x000000000008eeb4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008eeb8 <+12>:\tjbe    0x8ef67 <main+187>\n   0x000000000008eebe <+18>:\tcall   0x8efb4 <jsonDecode>\n   0x000000000008eec3 <+23>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008eec7 <+27>:\tmov    r10d,0x8\n   0x000000000008eecd <+33>:\tcall   0x899c4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008eed2 <+38>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008eed6 <+42>:\tmov    r11,QWORD PTR [r15+0x17e7]\n   0x000000000008eedd <+49>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008eee1 <+53>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008eee5 <+57>:\tmov    r10d,0x4\n   0x000000000008eeeb <+63>:\tcall   0x899c4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008eef0 <+68>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008eef4 <+72>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008eefc <+80>:\tmov    QWORD PTR [rax+0x1f],0x4\n   0x000000000008ef04 <+88>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008ef0b <+95>:\tcall   0x88a84 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008ef10 <+100>:\tmov    rcx,rax\n   0x000000000008ef13 <+103>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008ef17 <+107>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008ef1b <+111>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008ef23 <+119>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008ef27 <+123>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008ef2b <+127>:\tmov    r11,QWORD PTR [r15+0x17ef]\n   0x000000000008ef32 <+134>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008ef36 <+138>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008ef3d <+145>:\tmov    QWORD PTR [rax+0x2f],r11\n   0x000000000008ef41 <+149>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008ef48 <+156>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008ef4d <+161>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008ef51 <+165>:\tcall   0x6a2a4 <new Map._fromLiteral>\n   0x000000000008ef56 <+170>:\tmov    rdi,rax\n   0x000000000008ef59 <+173>:\tcall   0x8ef74 <jsonEncode>\n   0x000000000008ef5e <+178>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008ef62 <+182>:\tmov    rsp,rbp\n   0x000000000008ef65 <+185>:\tpop    rbp\n   0x000000000008ef66 <+186>:\tret\n   0x000000000008ef67 <+187>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ef6e <+194>:\tjmp    0x8eebe <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "jensens-device.dart",
  "functions": [
    {
      "name": "sum",
      "source": "double sum(int lo, int hi, double Function() term) {\n  double temp = 0;\n  for (i = lo.toDouble(); i <= hi; i++) temp += term();\n  return temp;\n}",
      "assembly": "Dump of assembler code for function sum:\n   0x000000000008a2f8 <+0>:\tpush   rbp\n   0x000000000008a2f9 <+1>:\tmov    rbp,rsp\n   0x000000000008a2fc <+4>:\tsub    rsp,0x10\n   0x000000000008a300 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a304 <+12>:\tjbe    0x8a3ad <sum+181>\n   0x000000000008a30a <+18>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a30e <+22>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a313 <+27>:\tmov    QWORD PTR [rsp],0x2\n   0x000000000008a31b <+35>:\tcall   0x82a08 <new _Double.fromInteger>\n   0x000000000008a320 <+40>:\tmov    rcx,rax\n   0x000000000008a323 <+43>:\tmov    rdx,QWORD PTR [r14+0x60]\n   0x000000000008a327 <+47>:\tmov    QWORD PTR [rdx+0x7d8],rax\n   0x000000000008a32e <+54>:\tmovsd  xmm1,QWORD PTR [rcx+0x7]\n   0x000000000008a333 <+59>:\tmovaps xmm3,xmm1\n   0x000000000008a336 <+62>:\txorps  xmm0,xmm0\n   0x000000000008a339 <+65>:\tmovsd  xmm2,QWORD PTR [r15+0x183f]\n   0x000000000008a342 <+74>:\tmovsd  xmm1,QWORD PTR [r15+0x1847]\n   0x000000000008a34b <+83>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a34f <+87>:\tjbe    0x8a3b9 <sum+193>\n   0x000000000008a355 <+93>:\tcomisd xmm3,xmm2\n   0x000000000008a359 <+97>:\tjp     0x8a3a8 <sum+176>\n   0x000000000008a35f <+103>:\tja     0x8a3a8 <sum+176>\n   0x000000000008a365 <+109>:\tmovaps xmm4,xmm1\n   0x000000000008a368 <+112>:\tdivsd  xmm4,xmm3\n   0x000000000008a36c <+116>:\taddsd  xmm0,xmm4\n   0x000000000008a370 <+120>:\taddsd  xmm3,xmm1\n   0x000000000008a374 <+124>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008a378 <+128>:\tadd    rax,0x10\n   0x000000000008a37c <+132>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008a380 <+136>:\tjae    0x8a3c2 <sum+202>\n   0x000000000008a386 <+142>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008a38a <+146>:\tsub    rax,0xf\n   0x000000000008a38e <+150>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008a396 <+158>:\tmovsd  QWORD PTR [rax+0x7],xmm3\n   0x000000000008a39b <+163>:\tmov    rcx,QWORD PTR [r14+0x60]\n   0x000000000008a39f <+167>:\tmov    QWORD PTR [rcx+0x7d8],rax\n   0x000000000008a3a6 <+174>:\tjmp    0x8a34b <sum+83>\n   0x000000000008a3a8 <+176>:\tmov    rsp,rbp\n   0x000000000008a3ab <+179>:\tpop    rbp\n   0x000000000008a3ac <+180>:\tret\n   0x000000000008a3ad <+181>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a3b4 <+188>:\tjmp    0x8a30a <sum+18>\n   0x000000000008a3b9 <+193>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a3c0 <+200>:\tjmp    0x8a355 <sum+93>\n   0x000000000008a3c2 <+202>:\tsub    rsp,0x40\n   0x000000000008a3c6 <+206>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a3ca <+210>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x000000000008a3cf <+215>:\tmovups XMMWORD PTR [rsp+0x20],xmm2\n   0x000000000008a3d4 <+220>:\tmovups XMMWORD PTR [rsp+0x30],xmm3\n   0x000000000008a3d9 <+225>:\tcall   0x84c88 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a3de <+230>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a3e2 <+234>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x000000000008a3e7 <+239>:\tmovups xmm2,XMMWORD PTR [rsp+0x20]\n   0x000000000008a3ec <+244>:\tmovups xmm3,XMMWORD PTR [rsp+0x30]\n   0x000000000008a3f1 <+249>:\tadd    rsp,0x40\n   0x000000000008a3f5 <+253>:\tjmp    0x8a396 <sum+158>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print(sum(1, 100, termFunc));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a1f0 <+0>:\tpush   rbp\n   0x000000000008a1f1 <+1>:\tmov    rbp,rsp\n   0x000000000008a1f4 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1f8 <+8>:\tjbe    0x8a214 <main+36>\n   0x000000000008a1fe <+14>:\tcall   0x8a2f8 <sum>\n   0x000000000008a203 <+19>:\tmovaps xmm1,xmm0\n   0x000000000008a206 <+22>:\tcall   0x8a220 <print>\n   0x000000000008a20b <+27>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a20f <+31>:\tmov    rsp,rbp\n   0x000000000008a212 <+34>:\tpop    rbp\n   0x000000000008a213 <+35>:\tret\n   0x000000000008a214 <+36>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a21b <+43>:\tjmp    0x8a1fe <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "jewels-and-stones.dart",
  "functions": [
    {
      "name": "contarJoyas",
      "source": "int contarJoyas(String piedras, String joyas) {\n  int cnt = 0;\n  for (int i = 0; i < piedras.length; i++) {\n    if (joyas.contains(piedras[i])) {\n      cnt++;\n    }\n  }\n  return cnt;\n}",
      "assembly": "Dump of assembler code for function contarJoyas:\n   0x000000000008a290 <+0>:\tpush   rbp\n   0x000000000008a291 <+1>:\tmov    rbp,rsp\n   0x000000000008a294 <+4>:\tsub    rsp,0x28\n   0x000000000008a298 <+8>:\tmov    rcx,rdi\n   0x000000000008a29b <+11>:\tmov    rax,rsi\n   0x000000000008a29e <+14>:\tmov    QWORD PTR [rbp-0x20],rdi\n   0x000000000008a2a2 <+18>:\tmov    QWORD PTR [rbp-0x28],rsi\n   0x000000000008a2a6 <+22>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2aa <+26>:\tjbe    0x8a33f <contarJoyas+175>\n   0x000000000008a2b0 <+32>:\tmov    rdx,QWORD PTR [rcx+0x7]\n   0x000000000008a2b4 <+36>:\tsar    rdx,1\n   0x000000000008a2b7 <+39>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008a2bb <+43>:\txor    r8d,r8d\n   0x000000000008a2be <+46>:\txor    ebx,ebx\n   0x000000000008a2c0 <+48>:\tmov    QWORD PTR [rbp-0x8],r8\n   0x000000000008a2c4 <+52>:\tmov    QWORD PTR [rbp-0x10],rbx\n   0x000000000008a2c8 <+56>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2cc <+60>:\tjbe    0x8a34b <contarJoyas+187>\n   0x000000000008a2d2 <+66>:\tcmp    rbx,rdx\n   0x000000000008a2d5 <+69>:\tjge    0x8a336 <contarJoyas+166>\n   0x000000000008a2db <+75>:\tmovzx  rsi,BYTE PTR [rcx+rbx*1+0xf]\n   0x000000000008a2e1 <+81>:\tmov    rdi,rsi\n   0x000000000008a2e4 <+84>:\tadd    rdi,rdi\n   0x000000000008a2e7 <+87>:\tmov    rsi,QWORD PTR [r14+0x2a0]\n   0x000000000008a2ee <+94>:\tmov    rsi,QWORD PTR [rsi+rdi*4]\n   0x000000000008a2f2 <+98>:\tmov    rdi,rax\n   0x000000000008a2f5 <+101>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008a2fc <+108>:\tcall   0x81cc4 <String.contains>\n   0x000000000008a301 <+113>:\ttest   al,0x10\n   0x000000000008a303 <+115>:\tjne    0x8a319 <contarJoyas+137>\n   0x000000000008a309 <+121>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a30d <+125>:\tadd    rcx,0x1\n   0x000000000008a311 <+129>:\tmov    r8,rcx\n   0x000000000008a314 <+132>:\tjmp    0x8a31d <contarJoyas+141>\n   0x000000000008a319 <+137>:\tmov    r8,QWORD PTR [rbp-0x8]\n   0x000000000008a31d <+141>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a321 <+145>:\tadd    rcx,0x1\n   0x000000000008a325 <+149>:\tmov    rbx,rcx\n   0x000000000008a328 <+152>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a32c <+156>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a330 <+160>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008a334 <+164>:\tjmp    0x8a2c0 <contarJoyas+48>\n   0x000000000008a336 <+166>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a33a <+170>:\tmov    rsp,rbp\n   0x000000000008a33d <+173>:\tpop    rbp\n   0x000000000008a33e <+174>:\tret\n   0x000000000008a33f <+175>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a346 <+182>:\tjmp    0x8a2b0 <contarJoyas+32>\n   0x000000000008a34b <+187>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a352 <+194>:\tjmp    0x8a2d2 <contarJoyas+66>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print(contarJoyas(\"aAAbbbb\", \"aA\"));\n  print(contarJoyas(\"ZZ\", \"z\"));\n  print(contarJoyas(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ@abcdefghijklmnopqrstuvwxyz\",\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@abcdefghijklmnopqrstuvwxyz\"));\n  print(contarJoyas(\"AB\", \"\"));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a1d7 <main+131>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tmov    rsi,QWORD PTR [r15+0x17ff]\n   0x000000000008a170 <+28>:\tcall   0x8a290 <contarJoyas>\n   0x000000000008a175 <+33>:\tmov    rdi,rax\n   0x000000000008a178 <+36>:\tcall   0x8a1e0 <print>\n   0x000000000008a17d <+41>:\tmov    rdi,QWORD PTR [r15+0x1807]\n   0x000000000008a184 <+48>:\tmov    rsi,QWORD PTR [r15+0x180f]\n   0x000000000008a18b <+55>:\tcall   0x8a290 <contarJoyas>\n   0x000000000008a190 <+60>:\tmov    rdi,rax\n   0x000000000008a193 <+63>:\tcall   0x8a1e0 <print>\n   0x000000000008a198 <+68>:\tmov    rdi,QWORD PTR [r15+0x1817]\n   0x000000000008a19f <+75>:\tmov    rsi,QWORD PTR [r15+0x1817]\n   0x000000000008a1a6 <+82>:\tcall   0x8a290 <contarJoyas>\n   0x000000000008a1ab <+87>:\tmov    rdi,rax\n   0x000000000008a1ae <+90>:\tcall   0x8a1e0 <print>\n   0x000000000008a1b3 <+95>:\tmov    rdi,QWORD PTR [r15+0x181f]\n   0x000000000008a1ba <+102>:\tmov    rsi,QWORD PTR [r15+0xcf]\n   0x000000000008a1c1 <+109>:\tcall   0x8a290 <contarJoyas>\n   0x000000000008a1c6 <+114>:\tmov    rdi,rax\n   0x000000000008a1c9 <+117>:\tcall   0x8a1e0 <print>\n   0x000000000008a1ce <+122>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1d2 <+126>:\tmov    rsp,rbp\n   0x000000000008a1d5 <+129>:\tpop    rbp\n   0x000000000008a1d6 <+130>:\tret\n   0x000000000008a1d7 <+131>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1de <+138>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "k-d-tree.dart",
  "functions": [
    {
      "name": "showNearest",
      "source": "void showNearest(String heading, KdTree kd, Point p) {\n  print('$heading:');\n  print('Point            : $p'); // Default List.toString() is fine\n  final result = kd.nearest(p);\n  print('Nearest neighbor : ${result.nearest}');\n  print(\n    'Distance         : ${sqrt(result.distSqd)}',\n  ); // Use sqrt from dart:math\n  print('Nodes visited    : ${result.nodesVisited}');\n  print(''); // Empty line\n}",
      "assembly": "Dump of assembler code for function showNearest:\n   0x000000000008fcb8 <+0>:\tpush   rbp\n   0x000000000008fcb9 <+1>:\tmov    rbp,rsp\n   0x000000000008fcbc <+4>:\tsub    rsp,0x20\n   0x000000000008fcc0 <+8>:\tmov    rax,rdi\n   0x000000000008fcc3 <+11>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008fcc7 <+15>:\tmov    rdi,rsi\n   0x000000000008fcca <+18>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008fcce <+22>:\tmov    rsi,rdx\n   0x000000000008fcd1 <+25>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008fcd5 <+29>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008fcd9 <+33>:\tjbe    0x8fe57 <showNearest+415>\n   0x000000000008fcdf <+39>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fce3 <+43>:\tmov    r10d,0x4\n   0x000000000008fce9 <+49>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008fcee <+54>:\tmov    rcx,rax\n   0x000000000008fcf1 <+57>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008fcf5 <+61>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008fcf9 <+65>:\tmov    r11,QWORD PTR [r15+0x567]\n   0x000000000008fd00 <+72>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008fd04 <+76>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008fd08 <+80>:\tcall   0x5caf8 <_StringBase._interpolate>\n   0x000000000008fd0d <+85>:\tmov    rdi,rax\n   0x000000000008fd10 <+88>:\tcall   0x904f0 <print>\n   0x000000000008fd15 <+93>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fd19 <+97>:\tmov    r10d,0x4\n   0x000000000008fd1f <+103>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008fd24 <+108>:\tmov    r11,QWORD PTR [r15+0x194f]\n   0x000000000008fd2b <+115>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008fd2f <+119>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008fd33 <+123>:\tmov    QWORD PTR [rax+0x1f],rsi\n   0x000000000008fd37 <+127>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008fd3b <+131>:\tcall   0x5caf8 <_StringBase._interpolate>\n   0x000000000008fd40 <+136>:\tmov    rdi,rax\n   0x000000000008fd43 <+139>:\tcall   0x904f0 <print>\n   0x000000000008fd48 <+144>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008fd4c <+148>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008fd50 <+152>:\tcall   0x8fee8 <KdTree.nearest>\n   0x000000000008fd55 <+157>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fd59 <+161>:\tmov    r10d,0x4\n   0x000000000008fd5f <+167>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008fd63 <+171>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008fd68 <+176>:\tmov    r11,QWORD PTR [r15+0x1957]\n   0x000000000008fd6f <+183>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008fd73 <+187>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008fd77 <+191>:\tmov    rdx,QWORD PTR [rcx+0x7]\n   0x000000000008fd7b <+195>:\tmov    QWORD PTR [rax+0x1f],rdx\n   0x000000000008fd7f <+199>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008fd83 <+203>:\tcall   0x5caf8 <_StringBase._interpolate>\n   0x000000000008fd88 <+208>:\tmov    rdi,rax\n   0x000000000008fd8b <+211>:\tcall   0x904f0 <print>\n   0x000000000008fd90 <+216>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fd94 <+220>:\tmov    r10d,0x4\n   0x000000000008fd9a <+226>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008fd9f <+231>:\tmov    r11,QWORD PTR [r15+0x195f]\n   0x000000000008fda6 <+238>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008fdaa <+242>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008fdae <+246>:\tmovsd  xmm0,QWORD PTR [rcx+0xf]\n   0x000000000008fdb3 <+251>:\tsqrtsd xmm1,xmm0\n   0x000000000008fdb7 <+255>:\tmov    rdx,QWORD PTR [r14+0x48]\n   0x000000000008fdbb <+259>:\tadd    rdx,0x10\n   0x000000000008fdbf <+263>:\tcmp    rdx,QWORD PTR [r14+0x50]\n   0x000000000008fdc3 <+267>:\tjae    0x8fe63 <showNearest+427>\n   0x000000000008fdc9 <+273>:\tmov    QWORD PTR [r14+0x48],rdx\n   0x000000000008fdcd <+277>:\tsub    rdx,0xf\n   0x000000000008fdd1 <+281>:\tmov    QWORD PTR [rdx-0x1],0x3e15c\n   0x000000000008fdd9 <+289>:\tmovsd  QWORD PTR [rdx+0x7],xmm1\n   0x000000000008fdde <+294>:\tmov    QWORD PTR [rax+0x1f],rdx\n   0x000000000008fde2 <+298>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008fde6 <+302>:\tcall   0x5caf8 <_StringBase._interpolate>\n   0x000000000008fdeb <+307>:\tmov    rdi,rax\n   0x000000000008fdee <+310>:\tcall   0x904f0 <print>\n   0x000000000008fdf3 <+315>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008fdf7 <+319>:\tmov    r10d,0x4\n   0x000000000008fdfd <+325>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008fe02 <+330>:\tmov    rcx,rax\n   0x000000000008fe05 <+333>:\tmov    r11,QWORD PTR [r15+0x1967]\n   0x000000000008fe0c <+340>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000008fe10 <+344>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008fe14 <+348>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008fe18 <+352>:\tmov    rax,rdx\n   0x000000000008fe1b <+355>:\tadd    rax,rax\n   0x000000000008fe1e <+358>:\tjno    0x8fe2d <showNearest+373>\n   0x000000000008fe24 <+364>:\tcall   0x89428 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008fe29 <+369>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008fe2d <+373>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008fe31 <+377>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008fe35 <+381>:\tcall   0x5caf8 <_StringBase._interpolate>\n   0x000000000008fe3a <+386>:\tmov    rdi,rax\n   0x000000000008fe3d <+389>:\tcall   0x904f0 <print>\n   0x000000000008fe42 <+394>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008fe49 <+401>:\tcall   0x8fe84 <printToConsole>\n   0x000000000008fe4e <+406>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008fe52 <+410>:\tmov    rsp,rbp\n   0x000000000008fe55 <+413>:\tpop    rbp\n   0x000000000008fe56 <+414>:\tret\n   0x000000000008fe57 <+415>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008fe5e <+422>:\tjmp    0x8fcdf <showNearest+39>\n   0x000000000008fe63 <+427>:\tsub    rsp,0x10\n   0x000000000008fe67 <+431>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x000000000008fe6b <+435>:\tpush   rcx\n   0x000000000008fe6c <+436>:\tpush   rax\n   0x000000000008fe6d <+437>:\tcall   0x89124 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008fe72 <+442>:\tmov    rdx,rax\n   0x000000000008fe75 <+445>:\tpop    rax\n   0x000000000008fe76 <+446>:\tpop    rcx\n   0x000000000008fe77 <+447>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x000000000008fe7b <+451>:\tadd    rsp,0x10\n   0x000000000008fe7f <+455>:\tjmp    0x8fdd9 <showNearest+289>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  // Note: Using List<Point> instead of MutableList\n  final points = <Point>[\n    [2.0, 3.0],\n    [5.0, 4.0],\n    [9.0, 6.0],\n    [4.0, 7.0],\n    [8.0, 1.0],\n    [7.0, 2.0],\n  ];\n\n  var hr = HyperRect([0.0, 0.0], [10.0, 10.0]);\n  var kd = KdTree(points, hr); // Pass the original list\n  showNearest('WP example data', kd, [9.0, 2.0]);\n\n  hr = HyperRect([0.0, 0.0, 0.0], [1.0, 1.0, 1.0]);\n  // Generate random points directly as List<Point>\n  kd = KdTree(randomPts(3, 1000), hr);\n  showNearest('1000 random 3D points', kd, randomPt(3));\n\n  // Use hr.copy() if you intend to modify hr later, otherwise it's not strictly needed\n  // The Kotlin code uses copy, so we replicate it here.\n  var hrCopy = hr.copy();\n  kd = KdTree(randomPts(3, 400000), hrCopy); // Pass the copy\n  showNearest('400,000 random 3D points', kd, randomPt(3));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008e68c <+0>:\tpush   rbp\n   0x000000000008e68d <+1>:\tmov    rbp,rsp\n   0x000000000008e690 <+4>:\tsub    rsp,0x48\n   0x000000000008e694 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008e698 <+12>:\tjbe    0x8efb5 <main+2345>\n   0x000000000008e69e <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e6a2 <+22>:\tmov    r10d,0x4\n   0x000000000008e6a8 <+28>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e6ad <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e6b1 <+37>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008e6b8 <+44>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e6bc <+48>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008e6c3 <+55>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e6c7 <+59>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e6ce <+66>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e6d3 <+71>:\tmov    rcx,rax\n   0x000000000008e6d6 <+74>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e6da <+78>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008e6de <+82>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e6e2 <+86>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e6ea <+94>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e6ee <+98>:\tmov    r10d,0x4\n   0x000000000008e6f4 <+104>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e6f9 <+109>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e6fd <+113>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008e704 <+120>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e708 <+124>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008e70f <+131>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e713 <+135>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e71a <+142>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e71f <+147>:\tmov    rcx,rax\n   0x000000000008e722 <+150>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e726 <+154>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008e72a <+158>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e72e <+162>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e736 <+170>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e73a <+174>:\tmov    r10d,0x4\n   0x000000000008e740 <+180>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e745 <+185>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e749 <+189>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008e750 <+196>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e754 <+200>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008e75b <+207>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e75f <+211>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e766 <+218>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e76b <+223>:\tmov    rcx,rax\n   0x000000000008e76e <+226>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e772 <+230>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008e776 <+234>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e77a <+238>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e782 <+246>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e786 <+250>:\tmov    r10d,0x4\n   0x000000000008e78c <+256>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e791 <+261>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e795 <+265>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008e79c <+272>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e7a0 <+276>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008e7a7 <+283>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e7ab <+287>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e7b2 <+294>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e7b7 <+299>:\tmov    rcx,rax\n   0x000000000008e7ba <+302>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e7be <+306>:\tmov    QWORD PTR [rbp-0x28],rcx\n   0x000000000008e7c2 <+310>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e7c6 <+314>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e7ce <+322>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e7d2 <+326>:\tmov    r10d,0x4\n   0x000000000008e7d8 <+332>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e7dd <+337>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e7e1 <+341>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008e7e8 <+348>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e7ec <+352>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008e7f3 <+359>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e7f7 <+363>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e7fe <+370>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e803 <+375>:\tmov    rcx,rax\n   0x000000000008e806 <+378>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e80a <+382>:\tmov    QWORD PTR [rbp-0x30],rcx\n   0x000000000008e80e <+386>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e812 <+390>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e81a <+398>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e81e <+402>:\tmov    r10d,0x4\n   0x000000000008e824 <+408>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e829 <+413>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e82d <+417>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008e834 <+424>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e838 <+428>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008e83f <+435>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e843 <+439>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e84a <+446>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e84f <+451>:\tmov    rcx,rax\n   0x000000000008e852 <+454>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e856 <+458>:\tmov    QWORD PTR [rbp-0x38],rcx\n   0x000000000008e85a <+462>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e85e <+466>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e866 <+474>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e86a <+478>:\tmov    r10d,0xc\n   0x000000000008e870 <+484>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e875 <+489>:\tmov    rcx,rax\n   0x000000000008e878 <+492>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008e87c <+496>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008e880 <+500>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e884 <+504>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008e888 <+508>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x000000000008e88c <+512>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008e890 <+516>:\tmov    QWORD PTR [rcx+0x27],rax\n   0x000000000008e894 <+520>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008e898 <+524>:\tmov    QWORD PTR [rcx+0x2f],rax\n   0x000000000008e89c <+528>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008e8a0 <+532>:\tmov    QWORD PTR [rcx+0x37],rax\n   0x000000000008e8a4 <+536>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x000000000008e8a8 <+540>:\tmov    QWORD PTR [rcx+0x3f],rax\n   0x000000000008e8ac <+544>:\tmov    rdx,QWORD PTR [r15+0x1847]\n   0x000000000008e8b3 <+551>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e8b8 <+556>:\tmov    rcx,rax\n   0x000000000008e8bb <+559>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e8bf <+563>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008e8c3 <+567>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e8c7 <+571>:\tmov    QWORD PTR [rcx+0xf],0xc\n   0x000000000008e8cf <+579>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e8d3 <+583>:\tmov    r10d,0x4\n   0x000000000008e8d9 <+589>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e8de <+594>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e8e2 <+598>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008e8e9 <+605>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e8ed <+609>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008e8f4 <+616>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e8f8 <+620>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e8ff <+627>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e904 <+632>:\tmov    rcx,rax\n   0x000000000008e907 <+635>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e90b <+639>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008e90f <+643>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e913 <+647>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e91b <+655>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e91f <+659>:\tmov    r10d,0x4\n   0x000000000008e925 <+665>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e92a <+670>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e92e <+674>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x000000000008e935 <+681>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e939 <+685>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x000000000008e940 <+692>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e944 <+696>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e94b <+703>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e950 <+708>:\tmov    rcx,rax\n   0x000000000008e953 <+711>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008e957 <+715>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008e95b <+719>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e95f <+723>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e967 <+731>:\tcall   0x92cc8 <new HyperRect>\n   0x000000000008e96c <+736>:\tmov    rcx,rax\n   0x000000000008e96f <+739>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008e973 <+743>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008e977 <+747>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000008e97b <+751>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008e97f <+755>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008e983 <+759>:\tcall   0x92cbc <new KdTree>\n   0x000000000008e988 <+764>:\tmov    rdi,rax\n   0x000000000008e98b <+767>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008e98f <+771>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008e993 <+775>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e997 <+779>:\tcall   0x90528 <new KdTree>\n   0x000000000008e99c <+784>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e9a0 <+788>:\tmov    r10d,0x4\n   0x000000000008e9a6 <+794>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008e9ab <+799>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008e9af <+803>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008e9b6 <+810>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008e9ba <+814>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008e9c1 <+821>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008e9c5 <+825>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008e9cc <+832>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008e9d1 <+837>:\tmov    rcx,rax\n   0x000000000008e9d4 <+840>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008e9d8 <+844>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008e9dc <+848>:\tmov    QWORD PTR [rcx+0xf],0x4\n   0x000000000008e9e4 <+856>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008e9e8 <+860>:\tmov    rdx,rcx\n   0x000000000008e9eb <+863>:\tmov    rdi,QWORD PTR [r15+0x185f]\n   0x000000000008e9f2 <+870>:\tcall   0x8fcb8 <showNearest>\n   0x000000000008e9f7 <+875>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008e9fb <+879>:\tmov    r10d,0x6\n   0x000000000008ea01 <+885>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008ea06 <+890>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008ea0a <+894>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008ea11 <+901>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008ea15 <+905>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008ea1c <+912>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008ea20 <+916>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008ea27 <+923>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008ea2b <+927>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008ea32 <+934>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008ea37 <+939>:\tmov    rcx,rax\n   0x000000000008ea3a <+942>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008ea3e <+946>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008ea42 <+950>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008ea46 <+954>:\tmov    QWORD PTR [rcx+0xf],0x6\n   0x000000000008ea4e <+962>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008ea52 <+966>:\tmov    r10d,0x6\n   0x000000000008ea58 <+972>:\tcall   0x891a4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008ea5d <+977>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008ea61 <+981>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008ea68 <+988>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008ea6c <+992>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008ea73 <+999>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008ea77 <+1003>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008ea7e <+1010>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008ea82 <+1014>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008ea89 <+1021>:\tcall   0x88264 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008ea8e <+1026>:\tmov    rcx,rax\n   0x000000000008ea91 <+1029>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008ea95 <+1033>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008ea99 <+1037>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008ea9d <+1041>:\tmov    QWORD PTR [rcx+0xf],0x6\n   0x000000000008eaa5 <+1049>:\tcall   0x92cc8 <new HyperRect>\n   0x000000000008eaaa <+1054>:\tmov    rcx,rax\n   0x000000000008eaad <+1057>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008eab1 <+1061>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008eab5 <+1065>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000008eab9 <+1069>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008eabd <+1073>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008eac1 <+1077>:\tmov    rdi,QWORD PTR [r15+0x1847]\n   0x000000000008eac8 <+1084>:\tmov    esi,0x3e8\n   0x000000000008eacd <+1089>:\tcall   0x56fd8 <new _GrowableList>\n   0x000000000008ead2 <+1094>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008ead6 <+1098>:\txor    ebx,ebx\n   0x000000000008ead8 <+1100>:\tmov    QWORD PTR [rbp-0x40],rbx\n   0x000000000008eadc <+1104>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008eae0 <+1108>:\tjbe    0x8efc1 <main+2357>\n   0x000000000008eae6 <+1114>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008eaea <+1118>:\tsar    rcx,1\n   0x000000000008eaed <+1121>:\tcmp    rbx,rcx\n   0x000000000008eaf0 <+1124>:\tjge    0x8ec26 <main+1434>\n   0x000000000008eaf6 <+1130>:\tmov    rdi,QWORD PTR [r15+0x1807]\n   0x000000000008eafd <+1137>:\tmov    esi,0x3\n   0x000000000008eb02 <+1142>:\tcall   0x56fd8 <new _GrowableList>\n   0x000000000008eb07 <+1147>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008eb0b <+1151>:\txor    ebx,ebx\n   0x000000000008eb0d <+1153>:\tmov    QWORD PTR [rbp-0x48],rbx\n   0x000000000008eb11 <+1157>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008eb15 <+1161>:\tjbe    0x8efcd <main+2369>\n   0x000000000008eb1b <+1167>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008eb1f <+1171>:\tsar    rcx,1\n   0x000000000008eb22 <+1174>:\tcmp    rbx,rcx\n   0x000000000008eb25 <+1177>:\tjge    0x8ebce <main+1346>\n   0x000000000008eb2b <+1183>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008eb2f <+1187>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008eb36 <+1194>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008eb3a <+1198>:\tjne    0x8eb4c <main+1216>\n   0x000000000008eb40 <+1204>:\tmov    rdx,QWORD PTR [r15+0x1867]\n   0x000000000008eb47 <+1211>:\tcall   0x876b8 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000008eb4c <+1216>:\tmov    rdi,rax\n   0x000000000008eb4f <+1219>:\tcall   0x8fa40 <_Random.nextDouble>\n   0x000000000008eb54 <+1224>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008eb58 <+1228>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008eb5c <+1232>:\tsar    rax,1\n   0x000000000008eb5f <+1235>:\tmov    rbx,QWORD PTR [rbp-0x48]\n   0x000000000008eb63 <+1239>:\tcmp    rbx,rax\n   0x000000000008eb66 <+1242>:\tjae    0x8efd9 <main+2381>\n   0x000000000008eb6c <+1248>:\tmov    rdx,QWORD PTR [rcx+0x17]\n   0x000000000008eb70 <+1252>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008eb74 <+1256>:\tadd    rax,0x10\n   0x000000000008eb78 <+1260>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008eb7c <+1264>:\tjae    0x8efde <main+2386>\n   0x000000000008eb82 <+1270>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008eb86 <+1274>:\tsub    rax,0xf\n   0x000000000008eb8a <+1278>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008eb92 <+1286>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008eb97 <+1291>:\tmov    rsi,QWORD PTR [rbp-0x48]\n   0x000000000008eb9b <+1295>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008eba0 <+1300>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008eba4 <+1304>:\ttest   al,0x1\n   0x000000000008eba6 <+1306>:\tje     0x8ebbf <main+1331>\n   0x000000000008eba8 <+1308>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008ebac <+1312>:\tshr    r11d,0x2\n   0x000000000008ebb0 <+1316>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008ebb4 <+1320>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008ebb8 <+1324>:\tje     0x8ebbf <main+1331>\n   0x000000000008ebba <+1326>:\tcall   0x877bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008ebbf <+1331>:\tadd    rsi,0x1\n   0x000000000008ebc3 <+1335>:\tmov    rbx,rsi\n   0x000000000008ebc6 <+1338>:\tmov    rax,rcx\n   0x000000000008ebc9 <+1341>:\tjmp    0x8eb0d <main+1153>\n   0x000000000008ebce <+1346>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008ebd2 <+1350>:\tmov    rdi,QWORD PTR [rbp-0x40]\n   0x000000000008ebd6 <+1354>:\tmov    rcx,rax\n   0x000000000008ebd9 <+1357>:\tmov    rax,QWORD PTR [rsi+0xf]\n   0x000000000008ebdd <+1361>:\tsar    rax,1\n   0x000000000008ebe0 <+1364>:\tmov    rbx,rdi\n   0x000000000008ebe3 <+1367>:\tcmp    rbx,rax\n   0x000000000008ebe6 <+1370>:\tjae    0x8effc <main+2416>\n   0x000000000008ebec <+1376>:\tmov    rdx,QWORD PTR [rsi+0x17]\n   0x000000000008ebf0 <+1380>:\tmov    rax,rcx\n   0x000000000008ebf3 <+1383>:\tlea    r13,[rdx+rdi*8+0x17]\n   0x000000000008ebf8 <+1388>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008ebfc <+1392>:\ttest   al,0x1\n   0x000000000008ebfe <+1394>:\tje     0x8ec17 <main+1419>\n   0x000000000008ec00 <+1396>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008ec04 <+1400>:\tshr    r11d,0x2\n   0x000000000008ec08 <+1404>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008ec0c <+1408>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008ec10 <+1412>:\tje     0x8ec17 <main+1419>\n   0x000000000008ec12 <+1414>:\tcall   0x877bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008ec17 <+1419>:\tadd    rdi,0x1\n   0x000000000008ec1b <+1423>:\tmov    rbx,rdi\n   0x000000000008ec1e <+1426>:\tmov    rax,rsi\n   0x000000000008ec21 <+1429>:\tjmp    0x8ead8 <main+1100>\n   0x000000000008ec26 <+1434>:\tmov    rsi,rax\n   0x000000000008ec29 <+1437>:\tcall   0x92cbc <new KdTree>\n   0x000000000008ec2e <+1442>:\tmov    rdi,rax\n   0x000000000008ec31 <+1445>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008ec35 <+1449>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008ec39 <+1453>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008ec3d <+1457>:\tcall   0x90528 <new KdTree>\n   0x000000000008ec42 <+1462>:\tmov    rdi,QWORD PTR [r15+0x1807]\n   0x000000000008ec49 <+1469>:\tmov    esi,0x3\n   0x000000000008ec4e <+1474>:\tcall   0x56fd8 <new _GrowableList>\n   0x000000000008ec53 <+1479>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008ec57 <+1483>:\txor    ebx,ebx\n   0x000000000008ec59 <+1485>:\tmov    QWORD PTR [rbp-0x40],rbx\n   0x000000000008ec5d <+1489>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ec61 <+1493>:\tjbe    0x8f001 <main+2421>\n   0x000000000008ec67 <+1499>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008ec6b <+1503>:\tsar    rcx,1\n   0x000000000008ec6e <+1506>:\tcmp    rbx,rcx\n   0x000000000008ec71 <+1509>:\tjge    0x8ed1a <main+1678>\n   0x000000000008ec77 <+1515>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008ec7b <+1519>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008ec82 <+1526>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008ec86 <+1530>:\tjne    0x8ec98 <main+1548>\n   0x000000000008ec8c <+1536>:\tmov    rdx,QWORD PTR [r15+0x1867]\n   0x000000000008ec93 <+1543>:\tcall   0x876b8 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000008ec98 <+1548>:\tmov    rdi,rax\n   0x000000000008ec9b <+1551>:\tcall   0x8fa40 <_Random.nextDouble>\n   0x000000000008eca0 <+1556>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008eca4 <+1560>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008eca8 <+1564>:\tsar    rax,1\n   0x000000000008ecab <+1567>:\tmov    rbx,QWORD PTR [rbp-0x40]\n   0x000000000008ecaf <+1571>:\tcmp    rbx,rax\n   0x000000000008ecb2 <+1574>:\tjae    0x8f00d <main+2433>\n   0x000000000008ecb8 <+1580>:\tmov    rdx,QWORD PTR [rcx+0x17]\n   0x000000000008ecbc <+1584>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008ecc0 <+1588>:\tadd    rax,0x10\n   0x000000000008ecc4 <+1592>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008ecc8 <+1596>:\tjae    0x8f012 <main+2438>\n   0x000000000008ecce <+1602>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008ecd2 <+1606>:\tsub    rax,0xf\n   0x000000000008ecd6 <+1610>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008ecde <+1618>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008ece3 <+1623>:\tmov    rsi,QWORD PTR [rbp-0x40]\n   0x000000000008ece7 <+1627>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008ecec <+1632>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008ecf0 <+1636>:\ttest   al,0x1\n   0x000000000008ecf2 <+1638>:\tje     0x8ed0b <main+1663>\n   0x000000000008ecf4 <+1640>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008ecf8 <+1644>:\tshr    r11d,0x2\n   0x000000000008ecfc <+1648>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008ed00 <+1652>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008ed04 <+1656>:\tje     0x8ed0b <main+1663>\n   0x000000000008ed06 <+1658>:\tcall   0x877bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008ed0b <+1663>:\tadd    rsi,0x1\n   0x000000000008ed0f <+1667>:\tmov    rbx,rsi\n   0x000000000008ed12 <+1670>:\tmov    rax,rcx\n   0x000000000008ed15 <+1673>:\tjmp    0x8ec59 <main+1485>\n   0x000000000008ed1a <+1678>:\tmov    rcx,rax\n   0x000000000008ed1d <+1681>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008ed21 <+1685>:\tmov    rdx,rcx\n   0x000000000008ed24 <+1688>:\tmov    rdi,QWORD PTR [r15+0x186f]\n   0x000000000008ed2b <+1695>:\tcall   0x8fcb8 <showNearest>\n   0x000000000008ed30 <+1700>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008ed34 <+1704>:\tcall   0x8f0a0 <HyperRect.copy>\n   0x000000000008ed39 <+1709>:\tmov    rdi,QWORD PTR [r15+0x1847]\n   0x000000000008ed40 <+1716>:\tmov    esi,0x61a80\n   0x000000000008ed45 <+1721>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008ed49 <+1725>:\tcall   0x56fd8 <new _GrowableList>\n   0x000000000008ed4e <+1730>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008ed52 <+1734>:\txor    ebx,ebx\n   0x000000000008ed54 <+1736>:\tmov    QWORD PTR [rbp-0x40],rbx\n   0x000000000008ed58 <+1740>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ed5c <+1744>:\tjbe    0x8f030 <main+2468>\n   0x000000000008ed62 <+1750>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008ed66 <+1754>:\tsar    rcx,1\n   0x000000000008ed69 <+1757>:\tcmp    rbx,rcx\n   0x000000000008ed6c <+1760>:\tjge    0x8eea2 <main+2070>\n   0x000000000008ed72 <+1766>:\tmov    rdi,QWORD PTR [r15+0x1807]\n   0x000000000008ed79 <+1773>:\tmov    esi,0x3\n   0x000000000008ed7e <+1778>:\tcall   0x56fd8 <new _GrowableList>\n   0x000000000008ed83 <+1783>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008ed87 <+1787>:\txor    ebx,ebx\n   0x000000000008ed89 <+1789>:\tmov    QWORD PTR [rbp-0x48],rbx\n   0x000000000008ed8d <+1793>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ed91 <+1797>:\tjbe    0x8f03c <main+2480>\n   0x000000000008ed97 <+1803>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008ed9b <+1807>:\tsar    rcx,1\n   0x000000000008ed9e <+1810>:\tcmp    rbx,rcx\n   0x000000000008eda1 <+1813>:\tjge    0x8ee4a <main+1982>\n   0x000000000008eda7 <+1819>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008edab <+1823>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008edb2 <+1830>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008edb6 <+1834>:\tjne    0x8edc8 <main+1852>\n   0x000000000008edbc <+1840>:\tmov    rdx,QWORD PTR [r15+0x1867]\n   0x000000000008edc3 <+1847>:\tcall   0x876b8 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000008edc8 <+1852>:\tmov    rdi,rax\n   0x000000000008edcb <+1855>:\tcall   0x8fa40 <_Random.nextDouble>\n   0x000000000008edd0 <+1860>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008edd4 <+1864>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008edd8 <+1868>:\tsar    rax,1\n   0x000000000008eddb <+1871>:\tmov    rbx,QWORD PTR [rbp-0x48]\n   0x000000000008eddf <+1875>:\tcmp    rbx,rax\n   0x000000000008ede2 <+1878>:\tjae    0x8f048 <main+2492>\n   0x000000000008ede8 <+1884>:\tmov    rdx,QWORD PTR [rcx+0x17]\n   0x000000000008edec <+1888>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008edf0 <+1892>:\tadd    rax,0x10\n   0x000000000008edf4 <+1896>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008edf8 <+1900>:\tjae    0x8f04d <main+2497>\n   0x000000000008edfe <+1906>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008ee02 <+1910>:\tsub    rax,0xf\n   0x000000000008ee06 <+1914>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008ee0e <+1922>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008ee13 <+1927>:\tmov    rsi,QWORD PTR [rbp-0x48]\n   0x000000000008ee17 <+1931>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008ee1c <+1936>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008ee20 <+1940>:\ttest   al,0x1\n   0x000000000008ee22 <+1942>:\tje     0x8ee3b <main+1967>\n   0x000000000008ee24 <+1944>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008ee28 <+1948>:\tshr    r11d,0x2\n   0x000000000008ee2c <+1952>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008ee30 <+1956>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008ee34 <+1960>:\tje     0x8ee3b <main+1967>\n   0x000000000008ee36 <+1962>:\tcall   0x877bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008ee3b <+1967>:\tadd    rsi,0x1\n   0x000000000008ee3f <+1971>:\tmov    rbx,rsi\n   0x000000000008ee42 <+1974>:\tmov    rax,rcx\n   0x000000000008ee45 <+1977>:\tjmp    0x8ed89 <main+1789>\n   0x000000000008ee4a <+1982>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008ee4e <+1986>:\tmov    rdi,QWORD PTR [rbp-0x40]\n   0x000000000008ee52 <+1990>:\tmov    rcx,rax\n   0x000000000008ee55 <+1993>:\tmov    rax,QWORD PTR [rsi+0xf]\n   0x000000000008ee59 <+1997>:\tsar    rax,1\n   0x000000000008ee5c <+2000>:\tmov    rbx,rdi\n   0x000000000008ee5f <+2003>:\tcmp    rbx,rax\n   0x000000000008ee62 <+2006>:\tjae    0x8f06b <main+2527>\n   0x000000000008ee68 <+2012>:\tmov    rdx,QWORD PTR [rsi+0x17]\n   0x000000000008ee6c <+2016>:\tmov    rax,rcx\n   0x000000000008ee6f <+2019>:\tlea    r13,[rdx+rdi*8+0x17]\n   0x000000000008ee74 <+2024>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008ee78 <+2028>:\ttest   al,0x1\n   0x000000000008ee7a <+2030>:\tje     0x8ee93 <main+2055>\n   0x000000000008ee7c <+2032>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008ee80 <+2036>:\tshr    r11d,0x2\n   0x000000000008ee84 <+2040>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008ee88 <+2044>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008ee8c <+2048>:\tje     0x8ee93 <main+2055>\n   0x000000000008ee8e <+2050>:\tcall   0x877bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008ee93 <+2055>:\tadd    rdi,0x1\n   0x000000000008ee97 <+2059>:\tmov    rbx,rdi\n   0x000000000008ee9a <+2062>:\tmov    rax,rsi\n   0x000000000008ee9d <+2065>:\tjmp    0x8ed54 <main+1736>\n   0x000000000008eea2 <+2070>:\tmov    rsi,rax\n   0x000000000008eea5 <+2073>:\tcall   0x92cbc <new KdTree>\n   0x000000000008eeaa <+2078>:\tmov    rdi,rax\n   0x000000000008eead <+2081>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008eeb1 <+2085>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008eeb5 <+2089>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008eeb9 <+2093>:\tcall   0x90528 <new KdTree>\n   0x000000000008eebe <+2098>:\tmov    rdi,QWORD PTR [r15+0x1807]\n   0x000000000008eec5 <+2105>:\tmov    esi,0x3\n   0x000000000008eeca <+2110>:\tcall   0x56fd8 <new _GrowableList>\n   0x000000000008eecf <+2115>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008eed3 <+2119>:\txor    ebx,ebx\n   0x000000000008eed5 <+2121>:\tmov    QWORD PTR [rbp-0x40],rbx\n   0x000000000008eed9 <+2125>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008eedd <+2129>:\tjbe    0x8f070 <main+2532>\n   0x000000000008eee3 <+2135>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008eee7 <+2139>:\tsar    rcx,1\n   0x000000000008eeea <+2142>:\tcmp    rbx,rcx\n   0x000000000008eeed <+2145>:\tjge    0x8ef96 <main+2314>\n   0x000000000008eef3 <+2151>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008eef7 <+2155>:\tmov    rax,QWORD PTR [rax+0x7e0]\n   0x000000000008eefe <+2162>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008ef02 <+2166>:\tjne    0x8ef14 <main+2184>\n   0x000000000008ef08 <+2172>:\tmov    rdx,QWORD PTR [r15+0x1867]\n   0x000000000008ef0f <+2179>:\tcall   0x876b8 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000008ef14 <+2184>:\tmov    rdi,rax\n   0x000000000008ef17 <+2187>:\tcall   0x8fa40 <_Random.nextDouble>\n   0x000000000008ef1c <+2192>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008ef20 <+2196>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008ef24 <+2200>:\tsar    rax,1\n   0x000000000008ef27 <+2203>:\tmov    rbx,QWORD PTR [rbp-0x40]\n   0x000000000008ef2b <+2207>:\tcmp    rbx,rax\n   0x000000000008ef2e <+2210>:\tjae    0x8f07c <main+2544>\n   0x000000000008ef34 <+2216>:\tmov    rdx,QWORD PTR [rcx+0x17]\n   0x000000000008ef38 <+2220>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008ef3c <+2224>:\tadd    rax,0x10\n   0x000000000008ef40 <+2228>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008ef44 <+2232>:\tjae    0x8f081 <main+2549>\n   0x000000000008ef4a <+2238>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008ef4e <+2242>:\tsub    rax,0xf\n   0x000000000008ef52 <+2246>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008ef5a <+2254>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008ef5f <+2259>:\tmov    rsi,QWORD PTR [rbp-0x40]\n   0x000000000008ef63 <+2263>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008ef68 <+2268>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008ef6c <+2272>:\ttest   al,0x1\n   0x000000000008ef6e <+2274>:\tje     0x8ef87 <main+2299>\n   0x000000000008ef70 <+2276>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008ef74 <+2280>:\tshr    r11d,0x2\n   0x000000000008ef78 <+2284>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008ef7c <+2288>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008ef80 <+2292>:\tje     0x8ef87 <main+2299>\n   0x000000000008ef82 <+2294>:\tcall   0x877bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008ef87 <+2299>:\tadd    rsi,0x1\n   0x000000000008ef8b <+2303>:\tmov    rbx,rsi\n   0x000000000008ef8e <+2306>:\tmov    rax,rcx\n   0x000000000008ef91 <+2309>:\tjmp    0x8eed5 <main+2121>\n   0x000000000008ef96 <+2314>:\tmov    rcx,rax\n   0x000000000008ef99 <+2317>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008ef9d <+2321>:\tmov    rdx,rcx\n   0x000000000008efa0 <+2324>:\tmov    rdi,QWORD PTR [r15+0x1877]\n   0x000000000008efa7 <+2331>:\tcall   0x8fcb8 <showNearest>\n   0x000000000008efac <+2336>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008efb0 <+2340>:\tmov    rsp,rbp\n   0x000000000008efb3 <+2343>:\tpop    rbp\n   0x000000000008efb4 <+2344>:\tret\n   0x000000000008efb5 <+2345>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008efbc <+2352>:\tjmp    0x8e69e <main+18>\n   0x000000000008efc1 <+2357>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008efc8 <+2364>:\tjmp    0x8eae6 <main+1114>\n   0x000000000008efcd <+2369>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008efd4 <+2376>:\tjmp    0x8eb1b <main+1167>\n   0x000000000008efd9 <+2381>:\tcall   0x8974c <stub _iso_stub_RangeErrorSharedWithFPURegsStub>\n   0x000000000008efde <+2386>:\tsub    rsp,0x10\n   0x000000000008efe2 <+2390>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008efe6 <+2394>:\tpush   rdx\n   0x000000000008efe7 <+2395>:\tpush   rcx\n   0x000000000008efe8 <+2396>:\tcall   0x89124 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008efed <+2401>:\tpop    rcx\n   0x000000000008efee <+2402>:\tpop    rdx\n   0x000000000008efef <+2403>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008eff3 <+2407>:\tadd    rsp,0x10\n   0x000000000008eff7 <+2411>:\tjmp    0x8eb92 <main+1286>\n   0x000000000008effc <+2416>:\tcall   0x896e8 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008f001 <+2421>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f008 <+2428>:\tjmp    0x8ec67 <main+1499>\n   0x000000000008f00d <+2433>:\tcall   0x8974c <stub _iso_stub_RangeErrorSharedWithFPURegsStub>\n   0x000000000008f012 <+2438>:\tsub    rsp,0x10\n   0x000000000008f016 <+2442>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008f01a <+2446>:\tpush   rdx\n   0x000000000008f01b <+2447>:\tpush   rcx\n   0x000000000008f01c <+2448>:\tcall   0x89124 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008f021 <+2453>:\tpop    rcx\n   0x000000000008f022 <+2454>:\tpop    rdx\n   0x000000000008f023 <+2455>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008f027 <+2459>:\tadd    rsp,0x10\n   0x000000000008f02b <+2463>:\tjmp    0x8ecde <main+1618>\n   0x000000000008f030 <+2468>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f037 <+2475>:\tjmp    0x8ed62 <main+1750>\n   0x000000000008f03c <+2480>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f043 <+2487>:\tjmp    0x8ed97 <main+1803>\n   0x000000000008f048 <+2492>:\tcall   0x8974c <stub _iso_stub_RangeErrorSharedWithFPURegsStub>\n   0x000000000008f04d <+2497>:\tsub    rsp,0x10\n   0x000000000008f051 <+2501>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008f055 <+2505>:\tpush   rdx\n   0x000000000008f056 <+2506>:\tpush   rcx\n   0x000000000008f057 <+2507>:\tcall   0x89124 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008f05c <+2512>:\tpop    rcx\n   0x000000000008f05d <+2513>:\tpop    rdx\n   0x000000000008f05e <+2514>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008f062 <+2518>:\tadd    rsp,0x10\n   0x000000000008f066 <+2522>:\tjmp    0x8ee0e <main+1922>\n   0x000000000008f06b <+2527>:\tcall   0x896e8 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008f070 <+2532>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f077 <+2539>:\tjmp    0x8eee3 <main+2135>\n   0x000000000008f07c <+2544>:\tcall   0x8974c <stub _iso_stub_RangeErrorSharedWithFPURegsStub>\n   0x000000000008f081 <+2549>:\tsub    rsp,0x10\n   0x000000000008f085 <+2553>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008f089 <+2557>:\tpush   rdx\n   0x000000000008f08a <+2558>:\tpush   rcx\n   0x000000000008f08b <+2559>:\tcall   0x89124 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008f090 <+2564>:\tpop    rcx\n   0x000000000008f091 <+2565>:\tpop    rdx\n   0x000000000008f092 <+2566>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008f096 <+2570>:\tadd    rsp,0x10\n   0x000000000008f09a <+2574>:\tjmp    0x8ef5a <main+2254>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "kaprekar-numbers.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  for (int x1 = 1; x1 < 1000000; x1++) {\n    int x = pow(x1, 2).toInt();\n    int i = 0;\n    while (true) {\n      int z = pow(10, i).toInt();\n      if (x % z == x) break;\n      i++;\n    }\n\n    if (i % 2 == 0) {\n      int y = pow(10, i ~/ 2).toInt();\n      int l = x % y;\n      double o = x / y;\n      o = o - l / y;\n      double o3 = o;\n\n      for (int j = 0; j < 4; j++) {\n        if (o % 10 == 0) {\n          o = o / 10;\n        } else {\n          break;\n        }\n      }\n\n      if (o + l == x1 || o3 + l == x1) {\n        print('$x1');\n      }\n    } else {\n      int y1 = pow(10, (i + 1) ~/ 2).toInt();\n      int l1 = x % y1;\n      double o1 = x / y1;\n      o1 = o1 - l1 / y1;\n      double o2 = o1;\n\n      for (int j = 0; j < 4; j++) {\n        if (o1 % 10 == 0) {\n          o1 = o1 / 10;\n        } else {\n          break;\n        }\n      }\n\n      if (o1 + l1 == x1 || o2 + l1 == x1) {\n        print('$x1');\n      }\n    }\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a1a0 <+0>:\tpush   rbp\n   0x000000000008a1a1 <+1>:\tmov    rbp,rsp\n   0x000000000008a1a4 <+4>:\tsub    rsp,0x50\n   0x000000000008a1a8 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1ac <+12>:\tjbe    0x8ac6f <main+2767>\n   0x000000000008a1b2 <+18>:\tmov    edx,0x1\n   0x000000000008a1b7 <+23>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a1bb <+27>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1bf <+31>:\tjbe    0x8ac7b <main+2779>\n   0x000000000008a1c5 <+37>:\tcmp    rdx,0xf4240\n   0x000000000008a1cc <+44>:\tjge    0x8ac66 <main+2758>\n   0x000000000008a1d2 <+50>:\tmov    rcx,rdx\n   0x000000000008a1d5 <+53>:\timul   rcx,rdx\n   0x000000000008a1d9 <+57>:\tmov    rax,rcx\n   0x000000000008a1dc <+60>:\tadd    rax,rax\n   0x000000000008a1df <+63>:\tjno    0x8a1ee <main+78>\n   0x000000000008a1e5 <+69>:\tcall   0x84f3c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1ea <+74>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a1ee <+78>:\ttest   al,0x1\n   0x000000000008a1f0 <+80>:\tmov    ecx,0x3c\n   0x000000000008a1f5 <+85>:\tje     0x8a1fd <main+93>\n   0x000000000008a1f7 <+87>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a1fa <+90>:\tshr    ecx,0xc\n   0x000000000008a1fd <+93>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a201 <+97>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a205 <+101>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a208 <+104>:\tmov    rcx,rax\n   0x000000000008a20b <+107>:\tsar    rcx,1\n   0x000000000008a20e <+110>:\tjae    0x8a215 <main+117>\n   0x000000000008a210 <+112>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a215 <+117>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a219 <+121>:\txor    edx,edx\n   0x000000000008a21b <+123>:\tmov    QWORD PTR [rbp-0x10],rdx\n   0x000000000008a21f <+127>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a223 <+131>:\tjbe    0x8ac87 <main+2791>\n   0x000000000008a229 <+137>:\tcmp    rdx,0x0\n   0x000000000008a22d <+141>:\tjl     0x8a292 <main+242>\n   0x000000000008a233 <+147>:\tmov    rax,rdx\n   0x000000000008a236 <+150>:\tmov    ebx,0xa\n   0x000000000008a23b <+155>:\tmov    esi,0x1\n   0x000000000008a240 <+160>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a244 <+164>:\tjbe    0x8ac93 <main+2803>\n   0x000000000008a24a <+170>:\tcmp    rax,0x0\n   0x000000000008a24e <+174>:\tje     0x8a275 <main+213>\n   0x000000000008a254 <+180>:\ttest   al,0x1\n   0x000000000008a256 <+182>:\tje     0x8a260 <main+192>\n   0x000000000008a25c <+188>:\timul   rsi,rbx\n   0x000000000008a260 <+192>:\tsar    rax,1\n   0x000000000008a263 <+195>:\tcmp    rax,0x0\n   0x000000000008a267 <+199>:\tje     0x8a240 <main+160>\n   0x000000000008a269 <+201>:\tmov    rdi,rbx\n   0x000000000008a26c <+204>:\timul   rdi,rbx\n   0x000000000008a270 <+208>:\tmov    rbx,rdi\n   0x000000000008a273 <+211>:\tjmp    0x8a240 <main+160>\n   0x000000000008a275 <+213>:\tmov    rax,rsi\n   0x000000000008a278 <+216>:\tadd    rax,rax\n   0x000000000008a27b <+219>:\tjno    0x8a28a <main+234>\n   0x000000000008a281 <+225>:\tcall   0x84f3c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a286 <+230>:\tmov    QWORD PTR [rax+0x7],rsi\n   0x000000000008a28a <+234>:\txchg   rcx,rax\n   0x000000000008a28d <+237>:\tjmp    0x8a400 <main+608>\n   0x000000000008a292 <+242>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a296 <+246>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a29b <+251>:\tmov    QWORD PTR [rsp],0x14\n   0x000000000008a2a3 <+259>:\tcall   0x82d64 <new _Double.fromInteger>\n   0x000000000008a2a8 <+264>:\tmov    rdx,rax\n   0x000000000008a2ab <+267>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a2af <+271>:\tmov    QWORD PTR [rbp-0x20],rdx\n   0x000000000008a2b3 <+275>:\tmov    rax,rcx\n   0x000000000008a2b6 <+278>:\tadd    rax,rax\n   0x000000000008a2b9 <+281>:\tjno    0x8a2c8 <main+296>\n   0x000000000008a2bf <+287>:\tcall   0x84f3c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a2c4 <+292>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a2c8 <+296>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a2cc <+300>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a2d1 <+305>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a2d5 <+309>:\tcall   0x82d64 <new _Double.fromInteger>\n   0x000000000008a2da <+314>:\tmov    rcx,rax\n   0x000000000008a2dd <+317>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a2e1 <+321>:\tmovsd  xmm2,QWORD PTR [rax+0x7]\n   0x000000000008a2e6 <+326>:\tmovsd  xmm1,QWORD PTR [rcx+0x7]\n   0x000000000008a2eb <+331>:\txorps  xmm4,xmm4\n   0x000000000008a2ee <+334>:\tmovsd  xmm3,QWORD PTR [r15+0x17f7]\n   0x000000000008a2f7 <+343>:\tcomisd xmm1,xmm4\n   0x000000000008a2fb <+347>:\tjp     0x8a352 <main+434>\n   0x000000000008a2fd <+349>:\tje     0x8a3d2 <main+562>\n   0x000000000008a303 <+355>:\tcomisd xmm1,xmm3\n   0x000000000008a307 <+359>:\tje     0x8a33c <main+412>\n   0x000000000008a309 <+361>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x000000000008a312 <+370>:\tcomisd xmm1,xmm0\n   0x000000000008a316 <+374>:\tje     0x8a345 <main+421>\n   0x000000000008a318 <+376>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a321 <+385>:\tcomisd xmm1,xmm0\n   0x000000000008a325 <+389>:\tjne    0x8a352 <main+434>\n   0x000000000008a32b <+395>:\tmovsd  xmm3,xmm2\n   0x000000000008a32f <+399>:\tmulsd  xmm3,xmm2\n   0x000000000008a333 <+403>:\tmulsd  xmm3,xmm2\n   0x000000000008a337 <+407>:\tjmp    0x8a3d2 <main+562>\n   0x000000000008a33c <+412>:\tmovsd  xmm3,xmm2\n   0x000000000008a340 <+416>:\tjmp    0x8a3d2 <main+562>\n   0x000000000008a345 <+421>:\tmovsd  xmm3,xmm2\n   0x000000000008a349 <+425>:\tmulsd  xmm3,xmm2\n   0x000000000008a34d <+429>:\tjmp    0x8a3d2 <main+562>\n   0x000000000008a352 <+434>:\tcomisd xmm2,xmm3\n   0x000000000008a356 <+438>:\tjp     0x8a360 <main+448>\n   0x000000000008a358 <+440>:\tje     0x8a3d2 <main+562>\n   0x000000000008a35a <+442>:\tcomisd xmm1,xmm2\n   0x000000000008a35e <+446>:\tjnp    0x8a36e <main+462>\n   0x000000000008a360 <+448>:\tmovsd  xmm3,QWORD PTR [r15+0x180f]\n   0x000000000008a369 <+457>:\tjmp    0x8a3d2 <main+562>\n   0x000000000008a36e <+462>:\tmovsd  xmm3,QWORD PTR [r15+0x1817]\n   0x000000000008a377 <+471>:\tcomisd xmm2,xmm3\n   0x000000000008a37b <+475>:\tje     0x8a3a1 <main+513>\n   0x000000000008a37d <+477>:\tmovsd  xmm3,QWORD PTR [r15+0x181f]\n   0x000000000008a386 <+486>:\tcomisd xmm1,xmm3\n   0x000000000008a38a <+490>:\tjne    0x8a3a1 <main+513>\n   0x000000000008a38c <+492>:\tcomisd xmm2,xmm4\n   0x000000000008a390 <+496>:\tje     0x8a398 <main+504>\n   0x000000000008a392 <+498>:\tsqrtsd xmm3,xmm2\n   0x000000000008a396 <+502>:\tjmp    0x8a3d2 <main+562>\n   0x000000000008a398 <+504>:\tmovsd  xmm3,xmm4\n   0x000000000008a39c <+508>:\tjmp    0x8a3d2 <main+562>\n   0x000000000008a3a1 <+513>:\tpush   rbp\n   0x000000000008a3a2 <+514>:\tmov    rbp,rsp\n   0x000000000008a3a5 <+517>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008a3a9 <+521>:\tmovaps xmm0,xmm2\n   0x000000000008a3ac <+524>:\tmov    rax,QWORD PTR [r14+0x558]\n   0x000000000008a3b3 <+531>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008a3ba <+538>:\tcall   rax\n   0x000000000008a3bc <+540>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008a3c7 <+551>:\tmovaps xmm3,xmm0\n   0x000000000008a3ca <+554>:\tlea    rsp,[rbp+0x0]\n   0x000000000008a3ce <+558>:\tmov    rsp,rbp\n   0x000000000008a3d1 <+561>:\tpop    rbp\n   0x000000000008a3d2 <+562>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008a3d6 <+566>:\tadd    rax,0x10\n   0x000000000008a3da <+570>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008a3de <+574>:\tjae    0x8ac9f <main+2815>\n   0x000000000008a3e4 <+580>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008a3e8 <+584>:\tsub    rax,0xf\n   0x000000000008a3ec <+588>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008a3f4 <+596>:\tmovsd  QWORD PTR [rax+0x7],xmm3\n   0x000000000008a3f9 <+601>:\tmov    rcx,rax\n   0x000000000008a3fc <+604>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a400 <+608>:\ttest   cl,0x1\n   0x000000000008a403 <+611>:\tmov    edx,0x3c\n   0x000000000008a408 <+616>:\tje     0x8a410 <main+624>\n   0x000000000008a40a <+618>:\tmov    edx,DWORD PTR [rcx-0x1]\n   0x000000000008a40d <+621>:\tshr    edx,0xc\n   0x000000000008a410 <+624>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a414 <+628>:\tmov    rcx,rdx\n   0x000000000008a417 <+631>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a41b <+635>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a41e <+638>:\tmov    rcx,rax\n   0x000000000008a421 <+641>:\tsar    rcx,1\n   0x000000000008a424 <+644>:\tjae    0x8a42b <main+651>\n   0x000000000008a426 <+646>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a42b <+651>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a42f <+655>:\ttest   rcx,rcx\n   0x000000000008a432 <+658>:\tje     0x8acb9 <main+2841>\n   0x000000000008a438 <+664>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a43c <+668>:\tje     0x8accd <main+2861>\n   0x000000000008a442 <+674>:\tmovsxd rdx,eax\n   0x000000000008a445 <+677>:\tcmp    rdx,rax\n   0x000000000008a448 <+680>:\tjne    0x8a45a <main+698>\n   0x000000000008a44a <+682>:\tmovsxd rdx,ecx\n   0x000000000008a44d <+685>:\tcmp    rdx,rcx\n   0x000000000008a450 <+688>:\tjne    0x8a45a <main+698>\n   0x000000000008a452 <+690>:\tcdq\n   0x000000000008a453 <+691>:\tidiv   ecx\n   0x000000000008a455 <+693>:\tmovsxd rdx,edx\n   0x000000000008a458 <+696>:\tjmp    0x8a45f <main+703>\n   0x000000000008a45a <+698>:\tcqo\n   0x000000000008a45c <+700>:\tidiv   rcx\n   0x000000000008a45f <+703>:\ttest   rdx,rdx\n   0x000000000008a462 <+706>:\tjl     0x8acd4 <main+2868>\n   0x000000000008a468 <+712>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a46c <+716>:\tcmp    rdx,rcx\n   0x000000000008a46f <+719>:\tje     0x8a485 <main+741>\n   0x000000000008a475 <+725>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a479 <+729>:\tadd    rax,0x1\n   0x000000000008a47d <+733>:\tmov    rdx,rax\n   0x000000000008a480 <+736>:\tjmp    0x8a21b <main+123>\n   0x000000000008a485 <+741>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a489 <+745>:\ttest   al,0x1\n   0x000000000008a48b <+747>:\tjne    0x8a871 <main+1745>\n   0x000000000008a491 <+753>:\tmov    esi,0x2\n   0x000000000008a496 <+758>:\tmov    r11,rax\n   0x000000000008a499 <+761>:\tmov    rax,QWORD PTR [r15+0x607]\n   0x000000000008a4a0 <+768>:\timul   r11\n   0x000000000008a4a3 <+771>:\tadd    rdx,r11\n   0x000000000008a4a6 <+774>:\tmov    rax,rdx\n   0x000000000008a4a9 <+777>:\tshr    rdx,0x3f\n   0x000000000008a4ad <+781>:\tadd    rdx,rax\n   0x000000000008a4b0 <+784>:\tmov    rax,rdx\n   0x000000000008a4b3 <+787>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a4b7 <+791>:\tcmp    rax,0x0\n   0x000000000008a4bb <+795>:\tjl     0x8a51d <main+893>\n   0x000000000008a4c1 <+801>:\tmov    ebx,0xa\n   0x000000000008a4c6 <+806>:\tmov    edx,0x1\n   0x000000000008a4cb <+811>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a4cf <+815>:\tjbe    0x8ace9 <main+2889>\n   0x000000000008a4d5 <+821>:\tcmp    rax,0x0\n   0x000000000008a4d9 <+825>:\tje     0x8a500 <main+864>\n   0x000000000008a4df <+831>:\ttest   al,0x1\n   0x000000000008a4e1 <+833>:\tje     0x8a4eb <main+843>\n   0x000000000008a4e7 <+839>:\timul   rdx,rbx\n   0x000000000008a4eb <+843>:\tsar    rax,1\n   0x000000000008a4ee <+846>:\tcmp    rax,0x0\n   0x000000000008a4f2 <+850>:\tje     0x8a4cb <main+811>\n   0x000000000008a4f4 <+852>:\tmov    rdi,rbx\n   0x000000000008a4f7 <+855>:\timul   rdi,rbx\n   0x000000000008a4fb <+859>:\tmov    rbx,rdi\n   0x000000000008a4fe <+862>:\tjmp    0x8a4cb <main+811>\n   0x000000000008a500 <+864>:\tmov    rax,rdx\n   0x000000000008a503 <+867>:\tadd    rax,rax\n   0x000000000008a506 <+870>:\tjno    0x8a515 <main+885>\n   0x000000000008a50c <+876>:\tcall   0x84f3c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a511 <+881>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a515 <+885>:\txchg   rcx,rax\n   0x000000000008a518 <+888>:\tjmp    0x8a68b <main+1259>\n   0x000000000008a51d <+893>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a521 <+897>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a526 <+902>:\tmov    QWORD PTR [rsp],0x14\n   0x000000000008a52e <+910>:\tcall   0x82d64 <new _Double.fromInteger>\n   0x000000000008a533 <+915>:\tmov    rdx,rax\n   0x000000000008a536 <+918>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008a53a <+922>:\tmov    QWORD PTR [rbp-0x20],rdx\n   0x000000000008a53e <+926>:\tmov    rax,rcx\n   0x000000000008a541 <+929>:\tadd    rax,rax\n   0x000000000008a544 <+932>:\tjno    0x8a553 <main+947>\n   0x000000000008a54a <+938>:\tcall   0x84f3c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a54f <+943>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a553 <+947>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a557 <+951>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a55c <+956>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a560 <+960>:\tcall   0x82d64 <new _Double.fromInteger>\n   0x000000000008a565 <+965>:\tmov    rcx,rax\n   0x000000000008a568 <+968>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a56c <+972>:\tmovsd  xmm2,QWORD PTR [rax+0x7]\n   0x000000000008a571 <+977>:\tmovsd  xmm1,QWORD PTR [rcx+0x7]\n   0x000000000008a576 <+982>:\txorps  xmm4,xmm4\n   0x000000000008a579 <+985>:\tmovsd  xmm3,QWORD PTR [r15+0x17f7]\n   0x000000000008a582 <+994>:\tcomisd xmm1,xmm4\n   0x000000000008a586 <+998>:\tjp     0x8a5dd <main+1085>\n   0x000000000008a588 <+1000>:\tje     0x8a65d <main+1213>\n   0x000000000008a58e <+1006>:\tcomisd xmm1,xmm3\n   0x000000000008a592 <+1010>:\tje     0x8a5c7 <main+1063>\n   0x000000000008a594 <+1012>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x000000000008a59d <+1021>:\tcomisd xmm1,xmm0\n   0x000000000008a5a1 <+1025>:\tje     0x8a5d0 <main+1072>\n   0x000000000008a5a3 <+1027>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a5ac <+1036>:\tcomisd xmm1,xmm0\n   0x000000000008a5b0 <+1040>:\tjne    0x8a5dd <main+1085>\n   0x000000000008a5b6 <+1046>:\tmovsd  xmm3,xmm2\n   0x000000000008a5ba <+1050>:\tmulsd  xmm3,xmm2\n   0x000000000008a5be <+1054>:\tmulsd  xmm3,xmm2\n   0x000000000008a5c2 <+1058>:\tjmp    0x8a65d <main+1213>\n   0x000000000008a5c7 <+1063>:\tmovsd  xmm3,xmm2\n   0x000000000008a5cb <+1067>:\tjmp    0x8a65d <main+1213>\n   0x000000000008a5d0 <+1072>:\tmovsd  xmm3,xmm2\n   0x000000000008a5d4 <+1076>:\tmulsd  xmm3,xmm2\n   0x000000000008a5d8 <+1080>:\tjmp    0x8a65d <main+1213>\n   0x000000000008a5dd <+1085>:\tcomisd xmm2,xmm3\n   0x000000000008a5e1 <+1089>:\tjp     0x8a5eb <main+1099>\n   0x000000000008a5e3 <+1091>:\tje     0x8a65d <main+1213>\n   0x000000000008a5e5 <+1093>:\tcomisd xmm1,xmm2\n   0x000000000008a5e9 <+1097>:\tjnp    0x8a5f9 <main+1113>\n   0x000000000008a5eb <+1099>:\tmovsd  xmm3,QWORD PTR [r15+0x180f]\n   0x000000000008a5f4 <+1108>:\tjmp    0x8a65d <main+1213>\n   0x000000000008a5f9 <+1113>:\tmovsd  xmm3,QWORD PTR [r15+0x1817]\n   0x000000000008a602 <+1122>:\tcomisd xmm2,xmm3\n   0x000000000008a606 <+1126>:\tje     0x8a62c <main+1164>\n   0x000000000008a608 <+1128>:\tmovsd  xmm3,QWORD PTR [r15+0x181f]\n   0x000000000008a611 <+1137>:\tcomisd xmm1,xmm3\n   0x000000000008a615 <+1141>:\tjne    0x8a62c <main+1164>\n   0x000000000008a617 <+1143>:\tcomisd xmm2,xmm4\n   0x000000000008a61b <+1147>:\tje     0x8a623 <main+1155>\n   0x000000000008a61d <+1149>:\tsqrtsd xmm3,xmm2\n   0x000000000008a621 <+1153>:\tjmp    0x8a65d <main+1213>\n   0x000000000008a623 <+1155>:\tmovsd  xmm3,xmm4\n   0x000000000008a627 <+1159>:\tjmp    0x8a65d <main+1213>\n   0x000000000008a62c <+1164>:\tpush   rbp\n   0x000000000008a62d <+1165>:\tmov    rbp,rsp\n   0x000000000008a630 <+1168>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008a634 <+1172>:\tmovaps xmm0,xmm2\n   0x000000000008a637 <+1175>:\tmov    rax,QWORD PTR [r14+0x558]\n   0x000000000008a63e <+1182>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008a645 <+1189>:\tcall   rax\n   0x000000000008a647 <+1191>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008a652 <+1202>:\tmovaps xmm3,xmm0\n   0x000000000008a655 <+1205>:\tlea    rsp,[rbp+0x0]\n   0x000000000008a659 <+1209>:\tmov    rsp,rbp\n   0x000000000008a65c <+1212>:\tpop    rbp\n   0x000000000008a65d <+1213>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008a661 <+1217>:\tadd    rax,0x10\n   0x000000000008a665 <+1221>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008a669 <+1225>:\tjae    0x8acf5 <main+2901>\n   0x000000000008a66f <+1231>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008a673 <+1235>:\tsub    rax,0xf\n   0x000000000008a677 <+1239>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008a67f <+1247>:\tmovsd  QWORD PTR [rax+0x7],xmm3\n   0x000000000008a684 <+1252>:\tmov    rcx,rax\n   0x000000000008a687 <+1255>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a68b <+1259>:\ttest   cl,0x1\n   0x000000000008a68e <+1262>:\tmov    edx,0x3c\n   0x000000000008a693 <+1267>:\tje     0x8a69b <main+1275>\n   0x000000000008a695 <+1269>:\tmov    edx,DWORD PTR [rcx-0x1]\n   0x000000000008a698 <+1272>:\tshr    edx,0xc\n   0x000000000008a69b <+1275>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a69f <+1279>:\tmov    rcx,rdx\n   0x000000000008a6a2 <+1282>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a6a6 <+1286>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a6a9 <+1289>:\tmov    rcx,rax\n   0x000000000008a6ac <+1292>:\tsar    rcx,1\n   0x000000000008a6af <+1295>:\tjae    0x8a6b6 <main+1302>\n   0x000000000008a6b1 <+1297>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a6b6 <+1302>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a6ba <+1306>:\ttest   rcx,rcx\n   0x000000000008a6bd <+1309>:\tje     0x8ad0f <main+2927>\n   0x000000000008a6c3 <+1315>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a6c7 <+1319>:\tje     0x8ad23 <main+2947>\n   0x000000000008a6cd <+1325>:\tmovsxd rdx,eax\n   0x000000000008a6d0 <+1328>:\tcmp    rdx,rax\n   0x000000000008a6d3 <+1331>:\tjne    0x8a6e5 <main+1349>\n   0x000000000008a6d5 <+1333>:\tmovsxd rdx,ecx\n   0x000000000008a6d8 <+1336>:\tcmp    rdx,rcx\n   0x000000000008a6db <+1339>:\tjne    0x8a6e5 <main+1349>\n   0x000000000008a6dd <+1341>:\tcdq\n   0x000000000008a6de <+1342>:\tidiv   ecx\n   0x000000000008a6e0 <+1344>:\tmovsxd rdx,edx\n   0x000000000008a6e3 <+1347>:\tjmp    0x8a6ea <main+1354>\n   0x000000000008a6e5 <+1349>:\tcqo\n   0x000000000008a6e7 <+1351>:\tidiv   rcx\n   0x000000000008a6ea <+1354>:\ttest   rdx,rdx\n   0x000000000008a6ed <+1357>:\tjl     0x8ad2a <main+2954>\n   0x000000000008a6f3 <+1363>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a6f7 <+1367>:\txorps  xmm0,xmm0\n   0x000000000008a6fa <+1370>:\tcvtsi2sd xmm0,rsi\n   0x000000000008a6ff <+1375>:\txorps  xmm1,xmm1\n   0x000000000008a702 <+1378>:\tcvtsi2sd xmm1,rcx\n   0x000000000008a707 <+1383>:\tdivsd  xmm0,xmm1\n   0x000000000008a70b <+1387>:\txorps  xmm2,xmm2\n   0x000000000008a70e <+1390>:\tcvtsi2sd xmm2,rdx\n   0x000000000008a713 <+1395>:\tmovsd  QWORD PTR [rbp-0x40],xmm2\n   0x000000000008a718 <+1400>:\tmovaps xmm3,xmm2\n   0x000000000008a71b <+1403>:\tdivsd  xmm3,xmm1\n   0x000000000008a71f <+1407>:\tsubsd  xmm0,xmm3\n   0x000000000008a723 <+1411>:\tmovsd  QWORD PTR [rbp-0x38],xmm0\n   0x000000000008a728 <+1416>:\tmovaps xmm1,xmm0\n   0x000000000008a72b <+1419>:\txor    eax,eax\n   0x000000000008a72d <+1421>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a731 <+1425>:\tmovsd  QWORD PTR [rbp-0x30],xmm1\n   0x000000000008a736 <+1430>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a73a <+1434>:\tjbe    0x8ad3f <main+2975>\n   0x000000000008a740 <+1440>:\tcmp    rax,0x4\n   0x000000000008a744 <+1444>:\tjge    0x8a7e2 <main+1602>\n   0x000000000008a74a <+1450>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a74e <+1454>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a753 <+1459>:\tmov    QWORD PTR [rsp],0x14\n   0x000000000008a75b <+1467>:\tcall   0x82d64 <new _Double.fromInteger>\n   0x000000000008a760 <+1472>:\tmovsd  xmm1,QWORD PTR [rax+0x7]\n   0x000000000008a765 <+1477>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x000000000008a76a <+1482>:\tpush   rbp\n   0x000000000008a76b <+1483>:\tmov    rbp,rsp\n   0x000000000008a76e <+1486>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008a772 <+1490>:\tmov    rax,QWORD PTR [r14+0x560]\n   0x000000000008a779 <+1497>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008a780 <+1504>:\tcall   rax\n   0x000000000008a782 <+1506>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008a78d <+1517>:\tlea    rsp,[rbp+0x0]\n   0x000000000008a791 <+1521>:\tmov    rsp,rbp\n   0x000000000008a794 <+1524>:\tpop    rbp\n   0x000000000008a795 <+1525>:\tmovaps xmm1,xmm0\n   0x000000000008a798 <+1528>:\txorps  xmm0,xmm0\n   0x000000000008a79b <+1531>:\tcomisd xmm1,xmm0\n   0x000000000008a79f <+1535>:\tjp     0x8a7d4 <main+1588>\n   0x000000000008a7a5 <+1541>:\tjne    0x8a7d4 <main+1588>\n   0x000000000008a7ab <+1547>:\tmovsd  xmm2,QWORD PTR [r15+0x1827]\n   0x000000000008a7b4 <+1556>:\tmovsd  xmm1,QWORD PTR [rbp-0x30]\n   0x000000000008a7b9 <+1561>:\tdivsd  xmm1,xmm2\n   0x000000000008a7bd <+1565>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a7c1 <+1569>:\tadd    rax,0x1\n   0x000000000008a7c5 <+1573>:\tmovsd  xmm0,QWORD PTR [rbp-0x38]\n   0x000000000008a7ca <+1578>:\tmovsd  xmm2,QWORD PTR [rbp-0x40]\n   0x000000000008a7cf <+1583>:\tjmp    0x8a72d <main+1421>\n   0x000000000008a7d4 <+1588>:\tmovsd  xmm2,QWORD PTR [r15+0x1827]\n   0x000000000008a7dd <+1597>:\tjmp    0x8a7ee <main+1614>\n   0x000000000008a7e2 <+1602>:\txorps  xmm0,xmm0\n   0x000000000008a7e5 <+1605>:\tmovsd  xmm2,QWORD PTR [r15+0x1827]\n   0x000000000008a7ee <+1614>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a7f2 <+1618>:\tmovsd  xmm1,QWORD PTR [rbp-0x40]\n   0x000000000008a7f7 <+1623>:\tmovsd  xmm3,QWORD PTR [rbp-0x30]\n   0x000000000008a7fc <+1628>:\taddsd  xmm3,xmm1\n   0x000000000008a800 <+1632>:\txorps  xmm4,xmm4\n   0x000000000008a803 <+1635>:\tcvtsi2sd xmm4,rdx\n   0x000000000008a808 <+1640>:\tcomisd xmm3,xmm4\n   0x000000000008a80c <+1644>:\tjp     0x8a818 <main+1656>\n   0x000000000008a812 <+1650>:\tje     0x8a831 <main+1681>\n   0x000000000008a818 <+1656>:\tmovsd  xmm3,QWORD PTR [rbp-0x38]\n   0x000000000008a81d <+1661>:\taddsd  xmm3,xmm1\n   0x000000000008a821 <+1665>:\tcomisd xmm3,xmm4\n   0x000000000008a825 <+1669>:\tjp     0x8ac56 <main+2742>\n   0x000000000008a82b <+1675>:\tjne    0x8ac56 <main+2742>\n   0x000000000008a831 <+1681>:\tmov    rax,rdx\n   0x000000000008a834 <+1684>:\tadd    rax,rax\n   0x000000000008a837 <+1687>:\tjno    0x8a846 <main+1702>\n   0x000000000008a83d <+1693>:\tcall   0x84fb0 <stub _iso_stub_AllocateMintSharedWithFPURegsStub>\n   0x000000000008a842 <+1698>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a846 <+1702>:\ttest   al,0x1\n   0x000000000008a848 <+1704>:\tmov    ecx,0x3c\n   0x000000000008a84d <+1709>:\tje     0x8a855 <main+1717>\n   0x000000000008a84f <+1711>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a852 <+1714>:\tshr    ecx,0xc\n   0x000000000008a855 <+1717>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a859 <+1721>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a85d <+1725>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008a864 <+1732>:\tmov    rdi,rax\n   0x000000000008a867 <+1735>:\tcall   0x8adb0 <printToConsole>\n   0x000000000008a86c <+1740>:\tjmp    0x8ac56 <main+2742>\n   0x000000000008a871 <+1745>:\tmov    rsi,rcx\n   0x000000000008a874 <+1748>:\tmov    ecx,0x2\n   0x000000000008a879 <+1753>:\tadd    rax,0x1\n   0x000000000008a87d <+1757>:\tmov    r11,rax\n   0x000000000008a880 <+1760>:\tmov    rax,QWORD PTR [r15+0x607]\n   0x000000000008a887 <+1767>:\timul   r11\n   0x000000000008a88a <+1770>:\tadd    rdx,r11\n   0x000000000008a88d <+1773>:\tmov    rax,rdx\n   0x000000000008a890 <+1776>:\tshr    rdx,0x3f\n   0x000000000008a894 <+1780>:\tadd    rdx,rax\n   0x000000000008a897 <+1783>:\tmov    rax,rdx\n   0x000000000008a89a <+1786>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a89e <+1790>:\tcmp    rax,0x0\n   0x000000000008a8a2 <+1794>:\tjl     0x8a907 <main+1895>\n   0x000000000008a8a8 <+1800>:\tmov    ebx,0xa\n   0x000000000008a8ad <+1805>:\tmov    edx,0x1\n   0x000000000008a8b2 <+1810>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a8b6 <+1814>:\tjbe    0x8ad4b <main+2987>\n   0x000000000008a8bc <+1820>:\tcmp    rax,0x0\n   0x000000000008a8c0 <+1824>:\tje     0x8a8e7 <main+1863>\n   0x000000000008a8c6 <+1830>:\ttest   al,0x1\n   0x000000000008a8c8 <+1832>:\tje     0x8a8d2 <main+1842>\n   0x000000000008a8ce <+1838>:\timul   rdx,rbx\n   0x000000000008a8d2 <+1842>:\tsar    rax,1\n   0x000000000008a8d5 <+1845>:\tcmp    rax,0x0\n   0x000000000008a8d9 <+1849>:\tje     0x8a8b2 <main+1810>\n   0x000000000008a8db <+1851>:\tmov    rdi,rbx\n   0x000000000008a8de <+1854>:\timul   rdi,rbx\n   0x000000000008a8e2 <+1858>:\tmov    rbx,rdi\n   0x000000000008a8e5 <+1861>:\tjmp    0x8a8b2 <main+1810>\n   0x000000000008a8e7 <+1863>:\tmov    rax,rdx\n   0x000000000008a8ea <+1866>:\tadd    rax,rax\n   0x000000000008a8ed <+1869>:\tjno    0x8a8fc <main+1884>\n   0x000000000008a8f3 <+1875>:\tcall   0x84f3c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a8f8 <+1880>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a8fc <+1884>:\tmov    rcx,rax\n   0x000000000008a8ff <+1887>:\tmov    rax,rsi\n   0x000000000008a902 <+1890>:\tjmp    0x8aa75 <main+2261>\n   0x000000000008a907 <+1895>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a90b <+1899>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a910 <+1904>:\tmov    QWORD PTR [rsp],0x14\n   0x000000000008a918 <+1912>:\tcall   0x82d64 <new _Double.fromInteger>\n   0x000000000008a91d <+1917>:\tmov    rdx,rax\n   0x000000000008a920 <+1920>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a924 <+1924>:\tmov    QWORD PTR [rbp-0x20],rdx\n   0x000000000008a928 <+1928>:\tmov    rax,rcx\n   0x000000000008a92b <+1931>:\tadd    rax,rax\n   0x000000000008a92e <+1934>:\tjno    0x8a93d <main+1949>\n   0x000000000008a934 <+1940>:\tcall   0x84f3c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a939 <+1945>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a93d <+1949>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a941 <+1953>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a946 <+1958>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a94a <+1962>:\tcall   0x82d64 <new _Double.fromInteger>\n   0x000000000008a94f <+1967>:\tmov    rcx,rax\n   0x000000000008a952 <+1970>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a956 <+1974>:\tmovsd  xmm2,QWORD PTR [rax+0x7]\n   0x000000000008a95b <+1979>:\tmovsd  xmm1,QWORD PTR [rcx+0x7]\n   0x000000000008a960 <+1984>:\txorps  xmm4,xmm4\n   0x000000000008a963 <+1987>:\tmovsd  xmm3,QWORD PTR [r15+0x17f7]\n   0x000000000008a96c <+1996>:\tcomisd xmm1,xmm4\n   0x000000000008a970 <+2000>:\tjp     0x8a9c7 <main+2087>\n   0x000000000008a972 <+2002>:\tje     0x8aa47 <main+2215>\n   0x000000000008a978 <+2008>:\tcomisd xmm1,xmm3\n   0x000000000008a97c <+2012>:\tje     0x8a9b1 <main+2065>\n   0x000000000008a97e <+2014>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x000000000008a987 <+2023>:\tcomisd xmm1,xmm0\n   0x000000000008a98b <+2027>:\tje     0x8a9ba <main+2074>\n   0x000000000008a98d <+2029>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a996 <+2038>:\tcomisd xmm1,xmm0\n   0x000000000008a99a <+2042>:\tjne    0x8a9c7 <main+2087>\n   0x000000000008a9a0 <+2048>:\tmovsd  xmm3,xmm2\n   0x000000000008a9a4 <+2052>:\tmulsd  xmm3,xmm2\n   0x000000000008a9a8 <+2056>:\tmulsd  xmm3,xmm2\n   0x000000000008a9ac <+2060>:\tjmp    0x8aa47 <main+2215>\n   0x000000000008a9b1 <+2065>:\tmovsd  xmm3,xmm2\n   0x000000000008a9b5 <+2069>:\tjmp    0x8aa47 <main+2215>\n   0x000000000008a9ba <+2074>:\tmovsd  xmm3,xmm2\n   0x000000000008a9be <+2078>:\tmulsd  xmm3,xmm2\n   0x000000000008a9c2 <+2082>:\tjmp    0x8aa47 <main+2215>\n   0x000000000008a9c7 <+2087>:\tcomisd xmm2,xmm3\n   0x000000000008a9cb <+2091>:\tjp     0x8a9d5 <main+2101>\n   0x000000000008a9cd <+2093>:\tje     0x8aa47 <main+2215>\n   0x000000000008a9cf <+2095>:\tcomisd xmm1,xmm2\n   0x000000000008a9d3 <+2099>:\tjnp    0x8a9e3 <main+2115>\n   0x000000000008a9d5 <+2101>:\tmovsd  xmm3,QWORD PTR [r15+0x180f]\n   0x000000000008a9de <+2110>:\tjmp    0x8aa47 <main+2215>\n   0x000000000008a9e3 <+2115>:\tmovsd  xmm3,QWORD PTR [r15+0x1817]\n   0x000000000008a9ec <+2124>:\tcomisd xmm2,xmm3\n   0x000000000008a9f0 <+2128>:\tje     0x8aa16 <main+2166>\n   0x000000000008a9f2 <+2130>:\tmovsd  xmm3,QWORD PTR [r15+0x181f]\n   0x000000000008a9fb <+2139>:\tcomisd xmm1,xmm3\n   0x000000000008a9ff <+2143>:\tjne    0x8aa16 <main+2166>\n   0x000000000008aa01 <+2145>:\tcomisd xmm2,xmm4\n   0x000000000008aa05 <+2149>:\tje     0x8aa0d <main+2157>\n   0x000000000008aa07 <+2151>:\tsqrtsd xmm3,xmm2\n   0x000000000008aa0b <+2155>:\tjmp    0x8aa47 <main+2215>\n   0x000000000008aa0d <+2157>:\tmovsd  xmm3,xmm4\n   0x000000000008aa11 <+2161>:\tjmp    0x8aa47 <main+2215>\n   0x000000000008aa16 <+2166>:\tpush   rbp\n   0x000000000008aa17 <+2167>:\tmov    rbp,rsp\n   0x000000000008aa1a <+2170>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008aa1e <+2174>:\tmovaps xmm0,xmm2\n   0x000000000008aa21 <+2177>:\tmov    rax,QWORD PTR [r14+0x558]\n   0x000000000008aa28 <+2184>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008aa2f <+2191>:\tcall   rax\n   0x000000000008aa31 <+2193>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008aa3c <+2204>:\tmovaps xmm3,xmm0\n   0x000000000008aa3f <+2207>:\tlea    rsp,[rbp+0x0]\n   0x000000000008aa43 <+2211>:\tmov    rsp,rbp\n   0x000000000008aa46 <+2214>:\tpop    rbp\n   0x000000000008aa47 <+2215>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008aa4b <+2219>:\tadd    rax,0x10\n   0x000000000008aa4f <+2223>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008aa53 <+2227>:\tjae    0x8ad57 <main+2999>\n   0x000000000008aa59 <+2233>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008aa5d <+2237>:\tsub    rax,0xf\n   0x000000000008aa61 <+2241>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008aa69 <+2249>:\tmovsd  QWORD PTR [rax+0x7],xmm3\n   0x000000000008aa6e <+2254>:\tmov    rcx,rax\n   0x000000000008aa71 <+2257>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008aa75 <+2261>:\ttest   cl,0x1\n   0x000000000008aa78 <+2264>:\tmov    edx,0x3c\n   0x000000000008aa7d <+2269>:\tje     0x8aa85 <main+2277>\n   0x000000000008aa7f <+2271>:\tmov    edx,DWORD PTR [rcx-0x1]\n   0x000000000008aa82 <+2274>:\tshr    edx,0xc\n   0x000000000008aa85 <+2277>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008aa89 <+2281>:\tmov    rcx,rdx\n   0x000000000008aa8c <+2284>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008aa90 <+2288>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008aa93 <+2291>:\tmov    rcx,rax\n   0x000000000008aa96 <+2294>:\tsar    rcx,1\n   0x000000000008aa99 <+2297>:\tjae    0x8aaa0 <main+2304>\n   0x000000000008aa9b <+2299>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008aaa0 <+2304>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008aaa4 <+2308>:\ttest   rcx,rcx\n   0x000000000008aaa7 <+2311>:\tje     0x8ad71 <main+3025>\n   0x000000000008aaad <+2317>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008aab1 <+2321>:\tje     0x8ad85 <main+3045>\n   0x000000000008aab7 <+2327>:\tmovsxd rdx,eax\n   0x000000000008aaba <+2330>:\tcmp    rdx,rax\n   0x000000000008aabd <+2333>:\tjne    0x8aacf <main+2351>\n   0x000000000008aabf <+2335>:\tmovsxd rdx,ecx\n   0x000000000008aac2 <+2338>:\tcmp    rdx,rcx\n   0x000000000008aac5 <+2341>:\tjne    0x8aacf <main+2351>\n   0x000000000008aac7 <+2343>:\tcdq\n   0x000000000008aac8 <+2344>:\tidiv   ecx\n   0x000000000008aaca <+2346>:\tmovsxd rdx,edx\n   0x000000000008aacd <+2349>:\tjmp    0x8aad4 <main+2356>\n   0x000000000008aacf <+2351>:\tcqo\n   0x000000000008aad1 <+2353>:\tidiv   rcx\n   0x000000000008aad4 <+2356>:\ttest   rdx,rdx\n   0x000000000008aad7 <+2359>:\tjl     0x8ad8c <main+3052>\n   0x000000000008aadd <+2365>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008aae1 <+2369>:\txorps  xmm0,xmm0\n   0x000000000008aae4 <+2372>:\tcvtsi2sd xmm0,rax\n   0x000000000008aae9 <+2377>:\txorps  xmm1,xmm1\n   0x000000000008aaec <+2380>:\tcvtsi2sd xmm1,rcx\n   0x000000000008aaf1 <+2385>:\tdivsd  xmm0,xmm1\n   0x000000000008aaf5 <+2389>:\txorps  xmm2,xmm2\n   0x000000000008aaf8 <+2392>:\tcvtsi2sd xmm2,rdx\n   0x000000000008aafd <+2397>:\tmovsd  QWORD PTR [rbp-0x40],xmm2\n   0x000000000008ab02 <+2402>:\tmovaps xmm3,xmm2\n   0x000000000008ab05 <+2405>:\tdivsd  xmm3,xmm1\n   0x000000000008ab09 <+2409>:\tsubsd  xmm0,xmm3\n   0x000000000008ab0d <+2413>:\tmovsd  QWORD PTR [rbp-0x38],xmm0\n   0x000000000008ab12 <+2418>:\tmovaps xmm1,xmm0\n   0x000000000008ab15 <+2421>:\txor    eax,eax\n   0x000000000008ab17 <+2423>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008ab1b <+2427>:\tmovsd  QWORD PTR [rbp-0x30],xmm1\n   0x000000000008ab20 <+2432>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ab24 <+2436>:\tjbe    0x8ada1 <main+3073>\n   0x000000000008ab2a <+2442>:\tcmp    rax,0x4\n   0x000000000008ab2e <+2446>:\tjge    0x8abcc <main+2604>\n   0x000000000008ab34 <+2452>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008ab38 <+2456>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008ab3d <+2461>:\tmov    QWORD PTR [rsp],0x14\n   0x000000000008ab45 <+2469>:\tcall   0x82d64 <new _Double.fromInteger>\n   0x000000000008ab4a <+2474>:\tmovsd  xmm1,QWORD PTR [rax+0x7]\n   0x000000000008ab4f <+2479>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x000000000008ab54 <+2484>:\tpush   rbp\n   0x000000000008ab55 <+2485>:\tmov    rbp,rsp\n   0x000000000008ab58 <+2488>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008ab5c <+2492>:\tmov    rax,QWORD PTR [r14+0x560]\n   0x000000000008ab63 <+2499>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008ab6a <+2506>:\tcall   rax\n   0x000000000008ab6c <+2508>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008ab77 <+2519>:\tlea    rsp,[rbp+0x0]\n   0x000000000008ab7b <+2523>:\tmov    rsp,rbp\n   0x000000000008ab7e <+2526>:\tpop    rbp\n   0x000000000008ab7f <+2527>:\tmovaps xmm1,xmm0\n   0x000000000008ab82 <+2530>:\txorps  xmm0,xmm0\n   0x000000000008ab85 <+2533>:\tcomisd xmm1,xmm0\n   0x000000000008ab89 <+2537>:\tjp     0x8abbe <main+2590>\n   0x000000000008ab8f <+2543>:\tjne    0x8abbe <main+2590>\n   0x000000000008ab95 <+2549>:\tmovsd  xmm2,QWORD PTR [r15+0x1827]\n   0x000000000008ab9e <+2558>:\tmovsd  xmm1,QWORD PTR [rbp-0x30]\n   0x000000000008aba3 <+2563>:\tdivsd  xmm1,xmm2\n   0x000000000008aba7 <+2567>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008abab <+2571>:\tadd    rax,0x1\n   0x000000000008abaf <+2575>:\tmovsd  xmm0,QWORD PTR [rbp-0x38]\n   0x000000000008abb4 <+2580>:\tmovsd  xmm2,QWORD PTR [rbp-0x40]\n   0x000000000008abb9 <+2585>:\tjmp    0x8ab17 <main+2423>\n   0x000000000008abbe <+2590>:\tmovsd  xmm2,QWORD PTR [r15+0x1827]\n   0x000000000008abc7 <+2599>:\tjmp    0x8abd8 <main+2616>\n   0x000000000008abcc <+2604>:\txorps  xmm0,xmm0\n   0x000000000008abcf <+2607>:\tmovsd  xmm2,QWORD PTR [r15+0x1827]\n   0x000000000008abd8 <+2616>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008abdc <+2620>:\tmovsd  xmm1,QWORD PTR [rbp-0x40]\n   0x000000000008abe1 <+2625>:\tmovsd  xmm3,QWORD PTR [rbp-0x30]\n   0x000000000008abe6 <+2630>:\taddsd  xmm3,xmm1\n   0x000000000008abea <+2634>:\txorps  xmm4,xmm4\n   0x000000000008abed <+2637>:\tcvtsi2sd xmm4,rdx\n   0x000000000008abf2 <+2642>:\tcomisd xmm3,xmm4\n   0x000000000008abf6 <+2646>:\tjp     0x8ac02 <main+2658>\n   0x000000000008abfc <+2652>:\tje     0x8ac1b <main+2683>\n   0x000000000008ac02 <+2658>:\tmovsd  xmm3,QWORD PTR [rbp-0x38]\n   0x000000000008ac07 <+2663>:\taddsd  xmm3,xmm1\n   0x000000000008ac0b <+2667>:\tcomisd xmm3,xmm4\n   0x000000000008ac0f <+2671>:\tjp     0x8ac56 <main+2742>\n   0x000000000008ac15 <+2677>:\tjne    0x8ac56 <main+2742>\n   0x000000000008ac1b <+2683>:\tmov    rax,rdx\n   0x000000000008ac1e <+2686>:\tadd    rax,rax\n   0x000000000008ac21 <+2689>:\tjno    0x8ac30 <main+2704>\n   0x000000000008ac27 <+2695>:\tcall   0x84fb0 <stub _iso_stub_AllocateMintSharedWithFPURegsStub>\n   0x000000000008ac2c <+2700>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008ac30 <+2704>:\ttest   al,0x1\n   0x000000000008ac32 <+2706>:\tmov    ecx,0x3c\n   0x000000000008ac37 <+2711>:\tje     0x8ac3f <main+2719>\n   0x000000000008ac39 <+2713>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008ac3c <+2716>:\tshr    ecx,0xc\n   0x000000000008ac3f <+2719>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008ac43 <+2723>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008ac47 <+2727>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008ac4e <+2734>:\tmov    rdi,rax\n   0x000000000008ac51 <+2737>:\tcall   0x8adb0 <printToConsole>\n   0x000000000008ac56 <+2742>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008ac5a <+2746>:\tadd    rcx,0x1\n   0x000000000008ac5e <+2750>:\tmov    rdx,rcx\n   0x000000000008ac61 <+2753>:\tjmp    0x8a1b7 <main+23>\n   0x000000000008ac66 <+2758>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008ac6a <+2762>:\tmov    rsp,rbp\n   0x000000000008ac6d <+2765>:\tpop    rbp\n   0x000000000008ac6e <+2766>:\tret\n   0x000000000008ac6f <+2767>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ac76 <+2774>:\tjmp    0x8a1b2 <main+18>\n   0x000000000008ac7b <+2779>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ac82 <+2786>:\tjmp    0x8a1c5 <main+37>\n   0x000000000008ac87 <+2791>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ac8e <+2798>:\tjmp    0x8a229 <main+137>\n   0x000000000008ac93 <+2803>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ac9a <+2810>:\tjmp    0x8a24a <main+170>\n   0x000000000008ac9f <+2815>:\tsub    rsp,0x10\n   0x000000000008aca3 <+2819>:\tmovups XMMWORD PTR [rsp],xmm3\n   0x000000000008aca7 <+2823>:\tcall   0x84c38 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008acac <+2828>:\tmovups xmm3,XMMWORD PTR [rsp]\n   0x000000000008acb0 <+2832>:\tadd    rsp,0x10\n   0x000000000008acb4 <+2836>:\tjmp    0x8a3f4 <main+596>\n   0x000000000008acb9 <+2841>:\tpush   rcx\n   0x000000000008acba <+2842>:\tpush   rax\n   0x000000000008acbb <+2843>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008acc2 <+2850>:\txor    r10d,r10d\n   0x000000000008acc5 <+2853>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008accc <+2860>:\tint3\n   0x000000000008accd <+2861>:\txor    edx,edx\n   0x000000000008accf <+2863>:\tjmp    0x8a468 <main+712>\n   0x000000000008acd4 <+2868>:\ttest   rcx,rcx\n   0x000000000008acd7 <+2871>:\tjl     0x8ace1 <main+2881>\n   0x000000000008acd9 <+2873>:\tadd    rdx,rcx\n   0x000000000008acdc <+2876>:\tjmp    0x8a468 <main+712>\n   0x000000000008ace1 <+2881>:\tsub    rdx,rcx\n   0x000000000008ace4 <+2884>:\tjmp    0x8a468 <main+712>\n   0x000000000008ace9 <+2889>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008acf0 <+2896>:\tjmp    0x8a4d5 <main+821>\n   0x000000000008acf5 <+2901>:\tsub    rsp,0x10\n   0x000000000008acf9 <+2905>:\tmovups XMMWORD PTR [rsp],xmm3\n   0x000000000008acfd <+2909>:\tcall   0x84c38 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008ad02 <+2914>:\tmovups xmm3,XMMWORD PTR [rsp]\n   0x000000000008ad06 <+2918>:\tadd    rsp,0x10\n   0x000000000008ad0a <+2922>:\tjmp    0x8a67f <main+1247>\n   0x000000000008ad0f <+2927>:\tpush   rcx\n   0x000000000008ad10 <+2928>:\tpush   rax\n   0x000000000008ad11 <+2929>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008ad18 <+2936>:\txor    r10d,r10d\n   0x000000000008ad1b <+2939>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008ad22 <+2946>:\tint3\n   0x000000000008ad23 <+2947>:\txor    edx,edx\n   0x000000000008ad25 <+2949>:\tjmp    0x8a6f3 <main+1363>\n   0x000000000008ad2a <+2954>:\ttest   rcx,rcx\n   0x000000000008ad2d <+2957>:\tjl     0x8ad37 <main+2967>\n   0x000000000008ad2f <+2959>:\tadd    rdx,rcx\n   0x000000000008ad32 <+2962>:\tjmp    0x8a6f3 <main+1363>\n   0x000000000008ad37 <+2967>:\tsub    rdx,rcx\n   0x000000000008ad3a <+2970>:\tjmp    0x8a6f3 <main+1363>\n   0x000000000008ad3f <+2975>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008ad46 <+2982>:\tjmp    0x8a740 <main+1440>\n   0x000000000008ad4b <+2987>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad52 <+2994>:\tjmp    0x8a8bc <main+1820>\n   0x000000000008ad57 <+2999>:\tsub    rsp,0x10\n   0x000000000008ad5b <+3003>:\tmovups XMMWORD PTR [rsp],xmm3\n   0x000000000008ad5f <+3007>:\tcall   0x84c38 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008ad64 <+3012>:\tmovups xmm3,XMMWORD PTR [rsp]\n   0x000000000008ad68 <+3016>:\tadd    rsp,0x10\n   0x000000000008ad6c <+3020>:\tjmp    0x8aa69 <main+2249>\n   0x000000000008ad71 <+3025>:\tpush   rcx\n   0x000000000008ad72 <+3026>:\tpush   rax\n   0x000000000008ad73 <+3027>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008ad7a <+3034>:\txor    r10d,r10d\n   0x000000000008ad7d <+3037>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008ad84 <+3044>:\tint3\n   0x000000000008ad85 <+3045>:\txor    edx,edx\n   0x000000000008ad87 <+3047>:\tjmp    0x8aadd <main+2365>\n   0x000000000008ad8c <+3052>:\ttest   rcx,rcx\n   0x000000000008ad8f <+3055>:\tjl     0x8ad99 <main+3065>\n   0x000000000008ad91 <+3057>:\tadd    rdx,rcx\n   0x000000000008ad94 <+3060>:\tjmp    0x8aadd <main+2365>\n   0x000000000008ad99 <+3065>:\tsub    rdx,rcx\n   0x000000000008ad9c <+3068>:\tjmp    0x8aadd <main+2365>\n   0x000000000008ada1 <+3073>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008ada8 <+3080>:\tjmp    0x8ab2a <main+2442>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "largest-proper-divisor-of-n.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  print(\"El mayor divisor propio de n es:\");\n  for (int n = 1; n < 101; ++n) {\n    stdout.write(largest_proper_divisor(n));\n    print(largest_proper_divisor(n) + n % 10 == 0 ? \"\\n\" : \" \");\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090dc8 <+0>:\tpush   rbp\n   0x0000000000090dc9 <+1>:\tmov    rbp,rsp\n   0x0000000000090dcc <+4>:\tsub    rsp,0x18\n   0x0000000000090dd0 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090dd4 <+12>:\tjbe    0x910db <main+787>\n   0x0000000000090dda <+18>:\tmov    rdi,QWORD PTR [r15+0x1847]\n   0x0000000000090de1 <+25>:\tcall   0x91664 <printToConsole>\n   0x0000000000090de6 <+30>:\tmov    eax,0x1\n   0x0000000000090deb <+35>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000090def <+39>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090df3 <+43>:\tjbe    0x910e7 <main+799>\n   0x0000000000090df9 <+49>:\tcmp    rax,0x65\n   0x0000000000090dfd <+53>:\tjge    0x910d2 <main+778>\n   0x0000000000090e03 <+59>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090e07 <+63>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x0000000000090e0e <+70>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090e12 <+74>:\tjne    0x90e24 <main+92>\n   0x0000000000090e18 <+80>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000090e1f <+87>:\tcall   0x89e18 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090e24 <+92>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090e28 <+96>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000090e2f <+103>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090e33 <+107>:\tjne    0x90e45 <main+125>\n   0x0000000000090e39 <+113>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000090e40 <+120>:\tcall   0x89dd0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090e45 <+125>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090e49 <+129>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x0000000000090e50 <+136>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090e54 <+140>:\tjne    0x90e66 <main+158>\n   0x0000000000090e5a <+146>:\tmov    rdx,QWORD PTR [r15+0x184f]\n   0x0000000000090e61 <+153>:\tcall   0x89dd0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090e66 <+158>:\tmov    rbx,rax\n   0x0000000000090e69 <+161>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000090e6d <+165>:\ttest   cl,0x1\n   0x0000000000090e70 <+168>:\tjne    0x90e8a <main+194>\n   0x0000000000090e76 <+174>:\tmov    rax,rcx\n   0x0000000000090e79 <+177>:\tsar    rax,1\n   0x0000000000090e7c <+180>:\tmov    rdx,rax\n   0x0000000000090e7f <+183>:\tadd    rdx,rdx\n   0x0000000000090e82 <+186>:\tmov    rsi,rdx\n   0x0000000000090e85 <+189>:\tjmp    0x90f3d <main+373>\n   0x0000000000090e8a <+194>:\tmov    esi,0x3\n   0x0000000000090e8f <+199>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090e93 <+203>:\tjbe    0x910f3 <main+811>\n   0x0000000000090e99 <+209>:\tmov    rax,rsi\n   0x0000000000090e9c <+212>:\timul   rax,rsi\n   0x0000000000090ea0 <+216>:\tcmp    rax,rcx\n   0x0000000000090ea3 <+219>:\tjg     0x90f38 <main+368>\n   0x0000000000090ea9 <+225>:\tmov    rax,rcx\n   0x0000000000090eac <+228>:\ttest   rsi,rsi\n   0x0000000000090eaf <+231>:\tje     0x910ff <main+823>\n   0x0000000000090eb5 <+237>:\tcmp    rsi,0xffffffffffffffff\n   0x0000000000090eb9 <+241>:\tje     0x91115 <main+845>\n   0x0000000000090ebf <+247>:\tmovsxd rdx,eax\n   0x0000000000090ec2 <+250>:\tcmp    rdx,rax\n   0x0000000000090ec5 <+253>:\tjne    0x90ed7 <main+271>\n   0x0000000000090ec7 <+255>:\tmovsxd rdx,esi\n   0x0000000000090eca <+258>:\tcmp    rdx,rsi\n   0x0000000000090ecd <+261>:\tjne    0x90ed7 <main+271>\n   0x0000000000090ecf <+263>:\tcdq\n   0x0000000000090ed0 <+264>:\tidiv   esi\n   0x0000000000090ed2 <+266>:\tmovsxd rdx,edx\n   0x0000000000090ed5 <+269>:\tjmp    0x90edc <main+276>\n   0x0000000000090ed7 <+271>:\tcqo\n   0x0000000000090ed9 <+273>:\tidiv   rsi\n   0x0000000000090edc <+276>:\ttest   rdx,rdx\n   0x0000000000090edf <+279>:\tjl     0x9111c <main+852>\n   0x0000000000090ee5 <+285>:\tcmp    rdx,0x0\n   0x0000000000090ee9 <+289>:\tje     0x90ef5 <main+301>\n   0x0000000000090eef <+295>:\tadd    rsi,0x2\n   0x0000000000090ef3 <+299>:\tjmp    0x90e8f <main+199>\n   0x0000000000090ef5 <+301>:\txorps  xmm0,xmm0\n   0x0000000000090ef8 <+304>:\tcvtsi2sd xmm0,rcx\n   0x0000000000090efd <+309>:\txorps  xmm1,xmm1\n   0x0000000000090f00 <+312>:\tcvtsi2sd xmm1,rsi\n   0x0000000000090f05 <+317>:\tdivsd  xmm0,xmm1\n   0x0000000000090f09 <+321>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x0000000000090f0d <+325>:\tadd    rax,0x10\n   0x0000000000090f11 <+329>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x0000000000090f15 <+333>:\tjae    0x91131 <main+873>\n   0x0000000000090f1b <+339>:\tmov    QWORD PTR [r14+0x48],rax\n   0x0000000000090f1f <+343>:\tsub    rax,0xf\n   0x0000000000090f23 <+347>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x0000000000090f2b <+355>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x0000000000090f30 <+360>:\tmov    rsi,rax\n   0x0000000000090f33 <+363>:\tjmp    0x90f3d <main+373>\n   0x0000000000090f38 <+368>:\tmov    esi,0x2\n   0x0000000000090f3d <+373>:\tmov    rdi,rbx\n   0x0000000000090f40 <+376>:\tcall   0x911ac <_StdSink._write>\n   0x0000000000090f45 <+381>:\tmov    rbx,QWORD PTR [rbp-0x8]\n   0x0000000000090f49 <+385>:\ttest   bl,0x1\n   0x0000000000090f4c <+388>:\tjne    0x90f63 <main+411>\n   0x0000000000090f52 <+394>:\tmov    rax,rbx\n   0x0000000000090f55 <+397>:\tsar    rax,1\n   0x0000000000090f58 <+400>:\tmov    rcx,rax\n   0x0000000000090f5b <+403>:\tadd    rcx,rcx\n   0x0000000000090f5e <+406>:\tjmp    0x91013 <main+587>\n   0x0000000000090f63 <+411>:\tmov    ecx,0x3\n   0x0000000000090f68 <+416>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090f6c <+420>:\tjbe    0x9114f <main+903>\n   0x0000000000090f72 <+426>:\tmov    rax,rcx\n   0x0000000000090f75 <+429>:\timul   rax,rcx\n   0x0000000000090f79 <+433>:\tcmp    rax,rbx\n   0x0000000000090f7c <+436>:\tjg     0x9100e <main+582>\n   0x0000000000090f82 <+442>:\tmov    rax,rbx\n   0x0000000000090f85 <+445>:\ttest   rcx,rcx\n   0x0000000000090f88 <+448>:\tje     0x9115b <main+915>\n   0x0000000000090f8e <+454>:\tcmp    rcx,0xffffffffffffffff\n   0x0000000000090f92 <+458>:\tje     0x91170 <main+936>\n   0x0000000000090f98 <+464>:\tmovsxd rdx,eax\n   0x0000000000090f9b <+467>:\tcmp    rdx,rax\n   0x0000000000090f9e <+470>:\tjne    0x90fb0 <main+488>\n   0x0000000000090fa0 <+472>:\tmovsxd rdx,ecx\n   0x0000000000090fa3 <+475>:\tcmp    rdx,rcx\n   0x0000000000090fa6 <+478>:\tjne    0x90fb0 <main+488>\n   0x0000000000090fa8 <+480>:\tcdq\n   0x0000000000090fa9 <+481>:\tidiv   ecx\n   0x0000000000090fab <+483>:\tmovsxd rdx,edx\n   0x0000000000090fae <+486>:\tjmp    0x90fb5 <main+493>\n   0x0000000000090fb0 <+488>:\tcqo\n   0x0000000000090fb2 <+490>:\tidiv   rcx\n   0x0000000000090fb5 <+493>:\ttest   rdx,rdx\n   0x0000000000090fb8 <+496>:\tjl     0x91177 <main+943>\n   0x0000000000090fbe <+502>:\tcmp    rdx,0x0\n   0x0000000000090fc2 <+506>:\tje     0x90fce <main+518>\n   0x0000000000090fc8 <+512>:\tadd    rcx,0x2\n   0x0000000000090fcc <+516>:\tjmp    0x90f68 <main+416>\n   0x0000000000090fce <+518>:\txorps  xmm0,xmm0\n   0x0000000000090fd1 <+521>:\tcvtsi2sd xmm0,rbx\n   0x0000000000090fd6 <+526>:\txorps  xmm1,xmm1\n   0x0000000000090fd9 <+529>:\tcvtsi2sd xmm1,rcx\n   0x0000000000090fde <+534>:\tdivsd  xmm0,xmm1\n   0x0000000000090fe2 <+538>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x0000000000090fe6 <+542>:\tadd    rcx,0x10\n   0x0000000000090fea <+546>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x0000000000090fee <+550>:\tjae    0x9118c <main+964>\n   0x0000000000090ff4 <+556>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x0000000000090ff8 <+560>:\tsub    rcx,0xf\n   0x0000000000090ffc <+564>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x0000000000091004 <+572>:\tmovsd  QWORD PTR [rcx+0x7],xmm0\n   0x0000000000091009 <+577>:\tjmp    0x91013 <main+587>\n   0x000000000009100e <+582>:\tmov    ecx,0x2\n   0x0000000000091013 <+587>:\tmov    esi,0xa\n   0x0000000000091018 <+592>:\tmov    rax,rbx\n   0x000000000009101b <+595>:\tmov    r11,rax\n   0x000000000009101e <+598>:\tmov    rax,QWORD PTR [r15+0x1857]\n   0x0000000000091025 <+605>:\timul   r11\n   0x0000000000091028 <+608>:\tsar    rdx,0x2\n   0x000000000009102c <+612>:\tmov    rax,rdx\n   0x000000000009102f <+615>:\tshr    rdx,0x3f\n   0x0000000000091033 <+619>:\tadd    rdx,rax\n   0x0000000000091036 <+622>:\tmov    rax,r11\n   0x0000000000091039 <+625>:\tmov    r11d,0xa\n   0x000000000009103f <+631>:\timul   rdx,r11\n   0x0000000000091043 <+635>:\tsub    rax,rdx\n   0x0000000000091046 <+638>:\tjge    0x9104f <main+647>\n   0x000000000009104c <+644>:\tadd    rax,r11\n   0x000000000009104f <+647>:\tmov    rdx,rax\n   0x0000000000091052 <+650>:\tmov    rax,rdx\n   0x0000000000091055 <+653>:\tadd    rax,rax\n   0x0000000000091058 <+656>:\ttest   cl,0x1\n   0x000000000009105b <+659>:\tmov    edx,0x3c\n   0x0000000000091060 <+664>:\tje     0x91068 <main+672>\n   0x0000000000091062 <+666>:\tmov    edx,DWORD PTR [rcx-0x1]\n   0x0000000000091065 <+669>:\tshr    edx,0xc\n   0x0000000000091068 <+672>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000009106d <+677>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000091071 <+681>:\tmov    rcx,rdx\n   0x0000000000091074 <+684>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000091078 <+688>:\tcall   QWORD PTR [rax+rcx*8+0xa30]\n   0x000000000009107f <+695>:\ttest   al,0x1\n   0x0000000000091081 <+697>:\tmov    ecx,0x3c\n   0x0000000000091086 <+702>:\tje     0x9108e <main+710>\n   0x0000000000091088 <+704>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000009108b <+707>:\tshr    ecx,0xc\n   0x000000000009108e <+710>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x0000000000091093 <+715>:\tmov    QWORD PTR [rsp],0x0\n   0x000000000009109b <+723>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000009109f <+727>:\tcall   QWORD PTR [rax+rcx*8]\n   0x00000000000910a2 <+730>:\ttest   al,0x10\n   0x00000000000910a4 <+732>:\tjne    0x910b6 <main+750>\n   0x00000000000910aa <+738>:\tmov    rdi,QWORD PTR [r15+0x185f]\n   0x00000000000910b1 <+745>:\tjmp    0x910bd <main+757>\n   0x00000000000910b6 <+750>:\tmov    rdi,QWORD PTR [r15+0x5df]\n   0x00000000000910bd <+757>:\tcall   0x91664 <printToConsole>\n   0x00000000000910c2 <+762>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x00000000000910c6 <+766>:\tadd    rcx,0x1\n   0x00000000000910ca <+770>:\tmov    rax,rcx\n   0x00000000000910cd <+773>:\tjmp    0x90deb <main+35>\n   0x00000000000910d2 <+778>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x00000000000910d6 <+782>:\tmov    rsp,rbp\n   0x00000000000910d9 <+785>:\tpop    rbp\n   0x00000000000910da <+786>:\tret\n   0x00000000000910db <+787>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000910e2 <+794>:\tjmp    0x90dda <main+18>\n   0x00000000000910e7 <+799>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000910ee <+806>:\tjmp    0x90df9 <main+49>\n   0x00000000000910f3 <+811>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000910fa <+818>:\tjmp    0x90e99 <main+209>\n   0x00000000000910ff <+823>:\tpush   rsi\n   0x0000000000091100 <+824>:\tpush   rbx\n   0x0000000000091101 <+825>:\tpush   rcx\n   0x0000000000091102 <+826>:\tpush   rax\n   0x0000000000091103 <+827>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000009110a <+834>:\txor    r10d,r10d\n   0x000000000009110d <+837>:\tcall   QWORD PTR [r14+0x200]\n   0x0000000000091114 <+844>:\tint3\n   0x0000000000091115 <+845>:\txor    edx,edx\n   0x0000000000091117 <+847>:\tjmp    0x90ee5 <main+285>\n   0x000000000009111c <+852>:\ttest   rsi,rsi\n   0x000000000009111f <+855>:\tjl     0x91129 <main+865>\n   0x0000000000091121 <+857>:\tadd    rdx,rsi\n   0x0000000000091124 <+860>:\tjmp    0x90ee5 <main+285>\n   0x0000000000091129 <+865>:\tsub    rdx,rsi\n   0x000000000009112c <+868>:\tjmp    0x90ee5 <main+285>\n   0x0000000000091131 <+873>:\tsub    rsp,0x10\n   0x0000000000091135 <+877>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x0000000000091139 <+881>:\tpush   rbx\n   0x000000000009113a <+882>:\tpush   rcx\n   0x000000000009113b <+883>:\tcall   0x8b83c <stub _iso_stub_AllocateDoubleStub>\n   0x0000000000091140 <+888>:\tpop    rcx\n   0x0000000000091141 <+889>:\tpop    rbx\n   0x0000000000091142 <+890>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x0000000000091146 <+894>:\tadd    rsp,0x10\n   0x000000000009114a <+898>:\tjmp    0x90f2b <main+355>\n   0x000000000009114f <+903>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091156 <+910>:\tjmp    0x90f72 <main+426>\n   0x000000000009115b <+915>:\tpush   rbx\n   0x000000000009115c <+916>:\tpush   rcx\n   0x000000000009115d <+917>:\tpush   rax\n   0x000000000009115e <+918>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x0000000000091165 <+925>:\txor    r10d,r10d\n   0x0000000000091168 <+928>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000009116f <+935>:\tint3\n   0x0000000000091170 <+936>:\txor    edx,edx\n   0x0000000000091172 <+938>:\tjmp    0x90fbe <main+502>\n   0x0000000000091177 <+943>:\ttest   rcx,rcx\n   0x000000000009117a <+946>:\tjl     0x91184 <main+956>\n   0x000000000009117c <+948>:\tadd    rdx,rcx\n   0x000000000009117f <+951>:\tjmp    0x90fbe <main+502>\n   0x0000000000091184 <+956>:\tsub    rdx,rcx\n   0x0000000000091187 <+959>:\tjmp    0x90fbe <main+502>\n   0x000000000009118c <+964>:\tsub    rsp,0x10\n   0x0000000000091190 <+968>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x0000000000091194 <+972>:\tpush   rbx\n   0x0000000000091195 <+973>:\tcall   0x8b83c <stub _iso_stub_AllocateDoubleStub>\n   0x000000000009119a <+978>:\tmov    rcx,rax\n   0x000000000009119d <+981>:\tpop    rbx\n   0x000000000009119e <+982>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x00000000000911a2 <+986>:\tadd    rsp,0x10\n   0x00000000000911a6 <+990>:\tjmp    0x91004 <main+572>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "leonardo-numbers.dart",
  "functions": [
    {
      "name": "leoN",
      "source": "void leoN(int cnt, {int l0 = 1, int l1 = 1, int add = 1}) {\n  int t;\n  for (int i = 0; i < cnt; i++) {\n    print('$l0 ');\n    t = l0 + l1 + add;\n    l0 = l1;\n    l1 = t;\n  }\n}",
      "assembly": "Dump of assembler code for function leoN:\n   0x000000000008a1c4 <+0>:\tpush   rbp\n   0x000000000008a1c5 <+1>:\tmov    rbp,rsp\n   0x000000000008a1c8 <+4>:\tsub    rsp,0x30\n   0x000000000008a1cc <+8>:\tmov    rax,QWORD PTR [r10+0x1f]\n   0x000000000008a1d0 <+12>:\tmov    rcx,QWORD PTR [r10+0x37]\n   0x000000000008a1d4 <+16>:\tcmp    rcx,QWORD PTR [r15+0x1817]\n   0x000000000008a1db <+23>:\tjne    0x8a207 <leoN+67>\n   0x000000000008a1e1 <+29>:\tmov    rcx,QWORD PTR [r10+0x3f]\n   0x000000000008a1e5 <+33>:\tmov    rdx,rax\n   0x000000000008a1e8 <+36>:\tsub    rdx,rcx\n   0x000000000008a1eb <+39>:\tmov    rcx,QWORD PTR [rbp+rdx*4+0x8]\n   0x000000000008a1f0 <+44>:\tsar    rcx,1\n   0x000000000008a1f3 <+47>:\tjae    0x8a1fa <leoN+54>\n   0x000000000008a1f5 <+49>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a1fa <+54>:\tmov    rdx,rcx\n   0x000000000008a1fd <+57>:\tmov    ecx,0x1\n   0x000000000008a202 <+62>:\tjmp    0x8a20e <leoN+74>\n   0x000000000008a207 <+67>:\tmov    edx,0x1\n   0x000000000008a20c <+72>:\txor    ecx,ecx\n   0x000000000008a20e <+74>:\tmov    QWORD PTR [rbp-0x28],rdx\n   0x000000000008a212 <+78>:\tmov    rbx,rcx\n   0x000000000008a215 <+81>:\tadd    rbx,rbx\n   0x000000000008a218 <+84>:\tshl    rbx,1\n   0x000000000008a21b <+87>:\tmov    rcx,rbx\n   0x000000000008a21e <+90>:\tadd    rcx,0x8\n   0x000000000008a222 <+94>:\tmov    rsi,QWORD PTR [r10+rcx*4+0x17]\n   0x000000000008a227 <+99>:\tcmp    rsi,QWORD PTR [r15+0x181f]\n   0x000000000008a22e <+106>:\tjne    0x8a257 <leoN+147>\n   0x000000000008a234 <+112>:\tadd    rbx,0xa\n   0x000000000008a238 <+116>:\tmov    rcx,QWORD PTR [r10+rbx*4+0x17]\n   0x000000000008a23d <+121>:\tsub    rax,rcx\n   0x000000000008a240 <+124>:\tmov    rcx,QWORD PTR [rbp+rax*4+0x8]\n   0x000000000008a245 <+129>:\tsar    rcx,1\n   0x000000000008a248 <+132>:\tjae    0x8a24f <leoN+139>\n   0x000000000008a24a <+134>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a24f <+139>:\tmov    rax,rcx\n   0x000000000008a252 <+142>:\tjmp    0x8a25c <leoN+152>\n   0x000000000008a257 <+147>:\tmov    eax,0x1\n   0x000000000008a25c <+152>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a260 <+156>:\tjbe    0x8a30a <leoN+326>\n   0x000000000008a266 <+162>:\tmov    rdi,rax\n   0x000000000008a269 <+165>:\tmov    esi,0x1\n   0x000000000008a26e <+170>:\txor    ecx,ecx\n   0x000000000008a270 <+172>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x000000000008a274 <+176>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a278 <+180>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008a27c <+184>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a280 <+188>:\tjbe    0x8a316 <leoN+338>\n   0x000000000008a286 <+194>:\tcmp    rcx,0x19\n   0x000000000008a28a <+198>:\tjge    0x8a301 <leoN+317>\n   0x000000000008a290 <+204>:\tmov    rax,rdi\n   0x000000000008a293 <+207>:\tadd    rax,rax\n   0x000000000008a296 <+210>:\tjno    0x8a2a5 <leoN+225>\n   0x000000000008a29c <+216>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a2a1 <+221>:\tmov    QWORD PTR [rax+0x7],rdi\n   0x000000000008a2a5 <+225>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a2a9 <+229>:\tmov    r10d,0x4\n   0x000000000008a2af <+235>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a2b3 <+239>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2b8 <+244>:\tmov    rcx,rax\n   0x000000000008a2bb <+247>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a2bf <+251>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a2c3 <+255>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x000000000008a2ca <+262>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a2ce <+266>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a2d2 <+270>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a2d7 <+275>:\tmov    rdi,rax\n   0x000000000008a2da <+278>:\tcall   0x8a324 <printToConsole>\n   0x000000000008a2df <+283>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a2e3 <+287>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a2e7 <+291>:\tadd    rax,rdi\n   0x000000000008a2ea <+294>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a2ee <+298>:\tadd    rax,rdx\n   0x000000000008a2f1 <+301>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a2f5 <+305>:\tadd    rcx,0x1\n   0x000000000008a2f9 <+309>:\tmov    rsi,rax\n   0x000000000008a2fc <+312>:\tjmp    0x8a270 <leoN+172>\n   0x000000000008a301 <+317>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a305 <+321>:\tmov    rsp,rbp\n   0x000000000008a308 <+324>:\tpop    rbp\n   0x000000000008a309 <+325>:\tret\n   0x000000000008a30a <+326>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a311 <+333>:\tjmp    0x8a266 <leoN+162>\n   0x000000000008a316 <+338>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a31d <+345>:\tjmp    0x8a286 <leoN+194>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print('Leonardo Numbers: ');\n  leoN(25);\n  print('\\nFibonacci Numbers: ');\n  leoN(25, l0: 0, l1: 1, add: 0);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x18\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1b9 <main+101>\n   0x000000000008a166 <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a16d <+25>:\tcall   0x8a324 <printToConsole>\n   0x000000000008a172 <+30>:\tmov    r10,QWORD PTR [r15+0x17ff]\n   0x000000000008a179 <+37>:\tcall   0x8a1c4 <leoN>\n   0x000000000008a17e <+42>:\tmov    rdi,QWORD PTR [r15+0x1807]\n   0x000000000008a185 <+49>:\tcall   0x8a324 <printToConsole>\n   0x000000000008a18a <+54>:\tmov    QWORD PTR [rsp+0x10],0x0\n   0x000000000008a193 <+63>:\tmov    QWORD PTR [rsp+0x8],0x2\n   0x000000000008a19c <+72>:\tmov    QWORD PTR [rsp],0x0\n   0x000000000008a1a4 <+80>:\tmov    r10,QWORD PTR [r15+0x180f]\n   0x000000000008a1ab <+87>:\tcall   0x8a1c4 <leoN>\n   0x000000000008a1b0 <+92>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1b4 <+96>:\tmov    rsp,rbp\n   0x000000000008a1b7 <+99>:\tpop    rbp\n   0x000000000008a1b8 <+100>:\tret\n   0x000000000008a1b9 <+101>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1c0 <+108>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "longest-common-subsequence.dart",
  "functions": [
    {
      "name": "lcsRecursion",
      "source": "String lcsRecursion(String a, String b) {\n  int aLen = a.length;\n  int bLen = b.length;\n\n  if (aLen == 0 || bLen == 0) {\n    return \"\";\n  } else if (a[aLen-1] == b[bLen-1]) {\n    return lcsRecursion(a.substring(0,aLen-1),b.substring(0,bLen-1)) + a[aLen-1];\n  } else {\n    var x = lcsRecursion(a, b.substring(0,bLen-1));\n    var y = lcsRecursion(a.substring(0,aLen-1), b);\n    return (x.length > y.length) ? x : y;\n  }\n}",
      "assembly": "Dump of assembler code for function lcsRecursion:\n   0x000000000008a490 <+0>:\tpush   rbp\n   0x000000000008a491 <+1>:\tmov    rbp,rsp\n   0x000000000008a494 <+4>:\tsub    rsp,0x40\n   0x000000000008a498 <+8>:\tmov    rax,rdi\n   0x000000000008a49b <+11>:\tmov    QWORD PTR [rbp-0x18],rdi\n   0x000000000008a49f <+15>:\tmov    rdi,rsi\n   0x000000000008a4a2 <+18>:\tmov    QWORD PTR [rbp-0x20],rsi\n   0x000000000008a4a6 <+22>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a4aa <+26>:\tjbe    0x8a63a <lcsRecursion+426>\n   0x000000000008a4b0 <+32>:\tmov    rcx,QWORD PTR [rax+0x7]\n   0x000000000008a4b4 <+36>:\tmov    rdx,QWORD PTR [rdi+0x7]\n   0x000000000008a4b8 <+40>:\tsar    rcx,1\n   0x000000000008a4bb <+43>:\tcmp    rcx,0x0\n   0x000000000008a4bf <+47>:\tje     0x8a4d6 <lcsRecursion+70>\n   0x000000000008a4c5 <+53>:\tsar    rdx,1\n   0x000000000008a4c8 <+56>:\tmov    QWORD PTR [rbp-0x10],rdx\n   0x000000000008a4cc <+60>:\tcmp    rdx,0x0\n   0x000000000008a4d0 <+64>:\tjne    0x8a4e2 <lcsRecursion+82>\n   0x000000000008a4d6 <+70>:\tmov    rax,QWORD PTR [r15+0xcf]\n   0x000000000008a4dd <+77>:\tmov    rsp,rbp\n   0x000000000008a4e0 <+80>:\tpop    rbp\n   0x000000000008a4e1 <+81>:\tret\n   0x000000000008a4e2 <+82>:\tsub    rcx,0x1\n   0x000000000008a4e6 <+86>:\tmov    rbx,rcx\n   0x000000000008a4e9 <+89>:\tadd    rbx,rbx\n   0x000000000008a4ec <+92>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x000000000008a4f0 <+96>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a4f5 <+101>:\tmov    QWORD PTR [rsp],rbx\n   0x000000000008a4f9 <+105>:\tcall   0x586b0 <_StringBase.[]>\n   0x000000000008a4fe <+110>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a502 <+114>:\tmov    QWORD PTR [rbp-0x30],rax\n   0x000000000008a506 <+118>:\tsub    rcx,0x1\n   0x000000000008a50a <+122>:\tmov    rdx,rcx\n   0x000000000008a50d <+125>:\tadd    rdx,rdx\n   0x000000000008a510 <+128>:\tmov    QWORD PTR [rbp-0x28],rdx\n   0x000000000008a514 <+132>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008a518 <+136>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a51d <+141>:\tmov    QWORD PTR [rsp],rdx\n   0x000000000008a521 <+145>:\tcall   0x586b0 <_StringBase.[]>\n   0x000000000008a526 <+150>:\tmov    rcx,rax\n   0x000000000008a529 <+153>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008a52d <+157>:\tmov    edx,DWORD PTR [rax-0x1]\n   0x000000000008a530 <+160>:\tshr    edx,0xc\n   0x000000000008a533 <+163>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a538 <+168>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a53c <+172>:\tmov    rcx,rdx\n   0x000000000008a53f <+175>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a543 <+179>:\tcall   QWORD PTR [rax+rcx*8+0x10c0]\n   0x000000000008a54a <+186>:\ttest   al,0x10\n   0x000000000008a54c <+188>:\tjne    0x8a5c7 <lcsRecursion+311>\n   0x000000000008a552 <+194>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a556 <+198>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a55a <+202>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a55e <+206>:\txor    esi,esi\n   0x000000000008a560 <+208>:\tmov    r10,QWORD PTR [r15+0x9f]\n   0x000000000008a567 <+215>:\tcall   0x5c04c <_StringBase.substring>\n   0x000000000008a56c <+220>:\tmov    QWORD PTR [rbp-0x30],rax\n   0x000000000008a570 <+224>:\tmov    r11,QWORD PTR [rbp-0x28]\n   0x000000000008a574 <+228>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a578 <+232>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a57c <+236>:\txor    esi,esi\n   0x000000000008a57e <+238>:\tmov    r10,QWORD PTR [r15+0x9f]\n   0x000000000008a585 <+245>:\tcall   0x5c04c <_StringBase.substring>\n   0x000000000008a58a <+250>:\tmov    rdi,QWORD PTR [rbp-0x30]\n   0x000000000008a58e <+254>:\tmov    rsi,rax\n   0x000000000008a591 <+257>:\tcall   0x8a490 <lcsRecursion>\n   0x000000000008a596 <+262>:\tmov    QWORD PTR [rbp-0x30],rax\n   0x000000000008a59a <+266>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008a59e <+270>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a5a3 <+275>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a5a7 <+279>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a5ab <+283>:\tcall   0x586b0 <_StringBase.[]>\n   0x000000000008a5b0 <+288>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x000000000008a5b4 <+292>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a5b9 <+297>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a5bd <+301>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a5c2 <+306>:\tmov    rsp,rbp\n   0x000000000008a5c5 <+309>:\tpop    rbp\n   0x000000000008a5c6 <+310>:\tret\n   0x000000000008a5c7 <+311>:\tmov    r11,QWORD PTR [rbp-0x28]\n   0x000000000008a5cb <+315>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a5cf <+319>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a5d3 <+323>:\txor    esi,esi\n   0x000000000008a5d5 <+325>:\tmov    r10,QWORD PTR [r15+0x9f]\n   0x000000000008a5dc <+332>:\tcall   0x5c04c <_StringBase.substring>\n   0x000000000008a5e1 <+337>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a5e5 <+341>:\tmov    rsi,rax\n   0x000000000008a5e8 <+344>:\tcall   0x8a490 <lcsRecursion>\n   0x000000000008a5ed <+349>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a5f1 <+353>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a5f5 <+357>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a5f9 <+361>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a5fd <+365>:\txor    esi,esi\n   0x000000000008a5ff <+367>:\tmov    r10,QWORD PTR [r15+0x9f]\n   0x000000000008a606 <+374>:\tcall   0x5c04c <_StringBase.substring>\n   0x000000000008a60b <+379>:\tmov    rdi,rax\n   0x000000000008a60e <+382>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a612 <+386>:\tcall   0x8a490 <lcsRecursion>\n   0x000000000008a617 <+391>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008a61b <+395>:\tmov    rdx,QWORD PTR [rcx+0x7]\n   0x000000000008a61f <+399>:\tmov    rbx,QWORD PTR [rax+0x7]\n   0x000000000008a623 <+403>:\tsar    rdx,1\n   0x000000000008a626 <+406>:\tsar    rbx,1\n   0x000000000008a629 <+409>:\tcmp    rdx,rbx\n   0x000000000008a62c <+412>:\tjle    0x8a635 <lcsRecursion+421>\n   0x000000000008a632 <+418>:\tmov    rax,rcx\n   0x000000000008a635 <+421>:\tmov    rsp,rbp\n   0x000000000008a638 <+424>:\tpop    rbp\n   0x000000000008a639 <+425>:\tret\n   0x000000000008a63a <+426>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a641 <+433>:\tjmp    0x8a4b0 <lcsRecursion+32>\nEnd of assembler dump.\n"
    },
    {
      "name": "lcsDynamic",
      "source": "String lcsDynamic(String a, String b) {\n  var lengths = new List<List<int>>.generate(a.length + 1,\n      (_) => new List.filled(b.length+1, 0), growable: false);\n\n  // row 0 and column 0 are initialized to 0 already\n  for (int i = 0; i < a.length; i++) {\n    for (int j = 0; j < b.length; j++) {\n      if (a[i] == b[j]) {\n        lengths[i+1][j+1] = lengths[i][j] + 1;\n      } else {\n        lengths[i+1][j+1] = max(lengths[i+1][j], lengths[i][j+1]);\n      }\n    }\n  }\n\n  // read the substring out from the matrix\n  StringBuffer reversedLcsBuffer = new StringBuffer();\n  for (int x = a.length, y = b.length; x != 0 && y != 0;) {\n    if (lengths[x][y] == lengths[x-1][y]) {\n      x--;\n    } else if (lengths[x][y] == lengths[x][y-1]) {\n      y--;\n    } else {\n      assert(a[x-1] == b[y-1]);\n      reversedLcsBuffer.write(a[x-1]);\n      x--;\n      y--;\n    }\n  }\n\n  // reverse String\n  var reversedLCS = reversedLcsBuffer.toString();\n  var lcsBuffer = new StringBuffer();\n  for(var i = reversedLCS.length - 1; i>=0; i--) {\n    lcsBuffer.write(reversedLCS[i]);\n  }\n  return lcsBuffer.toString();\n}",
      "assembly": "Dump of assembler code for function lcsDynamic:\n   0x000000000008a6e4 <+0>:\tpush   rbp\n   0x000000000008a6e5 <+1>:\tmov    rbp,rsp\n   0x000000000008a6e8 <+4>:\tsub    rsp,0x90\n   0x000000000008a6ef <+11>:\tmov    QWORD PTR [rbp-0x18],rdi\n   0x000000000008a6f3 <+15>:\tmov    QWORD PTR [rbp-0x20],rsi\n   0x000000000008a6f7 <+19>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a6fb <+23>:\tjbe    0x8ad11 <lcsDynamic+1581>\n   0x000000000008a701 <+29>:\tmov    rax,QWORD PTR [rdi+0x7]\n   0x000000000008a705 <+33>:\tsar    rax,1\n   0x000000000008a708 <+36>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a70c <+40>:\tmov    rcx,rax\n   0x000000000008a70f <+43>:\tadd    rcx,0x1\n   0x000000000008a713 <+47>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a717 <+51>:\tmov    r10,rcx\n   0x000000000008a71a <+54>:\tadd    r10,r10\n   0x000000000008a71d <+57>:\tmov    rbx,QWORD PTR [r15+0x185f]\n   0x000000000008a724 <+64>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a729 <+69>:\tmov    rcx,rax\n   0x000000000008a72c <+72>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a730 <+76>:\tmov    QWORD PTR [rbp-0x48],rcx\n   0x000000000008a734 <+80>:\tmov    rdx,QWORD PTR [rax+0x7]\n   0x000000000008a738 <+84>:\tmov    QWORD PTR [rbp-0x40],rdx\n   0x000000000008a73c <+88>:\tmov    rbx,rdx\n   0x000000000008a73f <+91>:\tsar    rbx,1\n   0x000000000008a742 <+94>:\tmov    rsi,rbx\n   0x000000000008a745 <+97>:\tadd    rsi,0x1\n   0x000000000008a749 <+101>:\tmov    QWORD PTR [rbp-0x38],rsi\n   0x000000000008a74d <+105>:\tmov    rdi,rsi\n   0x000000000008a750 <+108>:\tadd    rdi,rdi\n   0x000000000008a753 <+111>:\tmov    QWORD PTR [rbp-0x30],rdi\n   0x000000000008a757 <+115>:\txor    r9d,r9d\n   0x000000000008a75a <+118>:\tmov    r8,QWORD PTR [rbp-0x8]\n   0x000000000008a75e <+122>:\tmov    QWORD PTR [rbp-0x28],r9\n   0x000000000008a762 <+126>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a766 <+130>:\tjbe    0x8ad1d <lcsDynamic+1593>\n   0x000000000008a76c <+136>:\tcmp    r9,r8\n   0x000000000008a76f <+139>:\tjge    0x8a7f7 <lcsDynamic+275>\n   0x000000000008a775 <+145>:\tmov    r10,rdi\n   0x000000000008a778 <+148>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x000000000008a77f <+155>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a784 <+160>:\tmov    rcx,QWORD PTR [rbp-0x38]\n   0x000000000008a788 <+164>:\txor    edx,edx\n   0x000000000008a78a <+166>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a78e <+170>:\tjbe    0x8ad29 <lcsDynamic+1605>\n   0x000000000008a794 <+176>:\tcmp    rdx,rcx\n   0x000000000008a797 <+179>:\tjge    0x8a7ac <lcsDynamic+200>\n   0x000000000008a79d <+185>:\tmov    QWORD PTR [rax+rdx*8+0x17],0x0\n   0x000000000008a7a6 <+194>:\tadd    rdx,0x1\n   0x000000000008a7aa <+198>:\tjmp    0x8a78a <lcsDynamic+166>\n   0x000000000008a7ac <+200>:\tmov    rbx,QWORD PTR [rbp-0x28]\n   0x000000000008a7b0 <+204>:\tmov    rdx,QWORD PTR [rbp-0x48]\n   0x000000000008a7b4 <+208>:\tlea    r13,[rdx+rbx*8+0x17]\n   0x000000000008a7b9 <+213>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a7bd <+217>:\ttest   al,0x1\n   0x000000000008a7bf <+219>:\tje     0x8a7d8 <lcsDynamic+244>\n   0x000000000008a7c1 <+221>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a7c5 <+225>:\tshr    r11d,0x2\n   0x000000000008a7c9 <+229>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a7cd <+233>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a7d1 <+237>:\tje     0x8a7d8 <lcsDynamic+244>\n   0x000000000008a7d3 <+239>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a7d8 <+244>:\tadd    rbx,0x1\n   0x000000000008a7dc <+248>:\tmov    r9,rbx\n   0x000000000008a7df <+251>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a7e3 <+255>:\tmov    rsi,rcx\n   0x000000000008a7e6 <+258>:\tmov    rcx,QWORD PTR [rbp-0x48]\n   0x000000000008a7ea <+262>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x000000000008a7ee <+266>:\tmov    rdi,QWORD PTR [rbp-0x30]\n   0x000000000008a7f2 <+270>:\tjmp    0x8a75a <lcsDynamic+118>\n   0x000000000008a7f7 <+275>:\tmov    rax,QWORD PTR [rbp-0x40]\n   0x000000000008a7fb <+279>:\tsar    rax,1\n   0x000000000008a7fe <+282>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a802 <+286>:\txor    edi,edi\n   0x000000000008a804 <+288>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008a808 <+292>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a80c <+296>:\tmov    rdx,QWORD PTR [rbp-0x48]\n   0x000000000008a810 <+300>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a814 <+304>:\tmov    QWORD PTR [rbp-0x60],rdi\n   0x000000000008a818 <+308>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a81c <+312>:\tjbe    0x8ad35 <lcsDynamic+1617>\n   0x000000000008a822 <+318>:\tcmp    rdi,rsi\n   0x000000000008a825 <+321>:\tjge    0x8aa67 <lcsDynamic+899>\n   0x000000000008a82b <+327>:\tmov    r8,rdi\n   0x000000000008a82e <+330>:\tadd    r8,0x1\n   0x000000000008a832 <+334>:\tmov    QWORD PTR [rbp-0x58],r8\n   0x000000000008a836 <+338>:\tmov    r9,rdi\n   0x000000000008a839 <+341>:\tadd    r9,0x1\n   0x000000000008a83d <+345>:\tmov    QWORD PTR [rbp-0x50],r9\n   0x000000000008a841 <+349>:\txor    r10d,r10d\n   0x000000000008a844 <+352>:\tmov    QWORD PTR [rbp-0x38],r10\n   0x000000000008a848 <+356>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a84c <+360>:\tjbe    0x8ad41 <lcsDynamic+1629>\n   0x000000000008a852 <+366>:\tcmp    r10,rax\n   0x000000000008a855 <+369>:\tjge    0x8aa53 <lcsDynamic+879>\n   0x000000000008a85b <+375>:\tmovzx  r12,BYTE PTR [rbx+rdi*1+0xf]\n   0x000000000008a861 <+381>:\tmov    r13,r12\n   0x000000000008a864 <+384>:\tadd    r13,r13\n   0x000000000008a867 <+387>:\tmov    r12,QWORD PTR [r14+0x2a0]\n   0x000000000008a86e <+394>:\tmov    r12,QWORD PTR [r12+r13*4]\n   0x000000000008a872 <+398>:\tmov    r13,r10\n   0x000000000008a875 <+401>:\tadd    r13,r13\n   0x000000000008a878 <+404>:\tmov    QWORD PTR [rbp-0x30],r13\n   0x000000000008a87c <+408>:\tmovzx  rax,BYTE PTR [rcx+r10*1+0xf]\n   0x000000000008a882 <+414>:\tmov    rcx,rax\n   0x000000000008a885 <+417>:\tadd    rcx,rcx\n   0x000000000008a888 <+420>:\tmov    rax,QWORD PTR [r14+0x2a0]\n   0x000000000008a88f <+427>:\tmov    rax,QWORD PTR [rax+rcx*4]\n   0x000000000008a893 <+431>:\tmov    QWORD PTR [rsp+0x8],r12\n   0x000000000008a898 <+436>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a89c <+440>:\tcall   0x7a80c <String.==>\n   0x000000000008a8a1 <+445>:\ttest   al,0x10\n   0x000000000008a8a3 <+447>:\tjne    0x8a94c <lcsDynamic+616>\n   0x000000000008a8a9 <+453>:\tmov    rdx,QWORD PTR [rbp-0x60]\n   0x000000000008a8ad <+457>:\tmov    rbx,QWORD PTR [rbp-0x50]\n   0x000000000008a8b1 <+461>:\tmov    rax,QWORD PTR [rbp-0x48]\n   0x000000000008a8b5 <+465>:\tmov    rsi,QWORD PTR [rax+rbx*8+0x17]\n   0x000000000008a8ba <+470>:\tmov    QWORD PTR [rbp-0x70],rsi\n   0x000000000008a8be <+474>:\tmov    rdi,QWORD PTR [rbp-0x38]\n   0x000000000008a8c2 <+478>:\tadd    rdi,0x1\n   0x000000000008a8c6 <+482>:\tmov    QWORD PTR [rbp-0x68],rdi\n   0x000000000008a8ca <+486>:\tmov    rcx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a8cf <+491>:\tmov    r8d,DWORD PTR [rcx-0x1]\n   0x000000000008a8d3 <+495>:\tshr    r8d,0xc\n   0x000000000008a8d7 <+499>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008a8dc <+504>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x000000000008a8e0 <+508>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a8e4 <+512>:\tmov    rcx,r8\n   0x000000000008a8e7 <+515>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a8eb <+519>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a8ee <+522>:\tsar    rax,1\n   0x000000000008a8f1 <+525>:\tjae    0x8a8f8 <lcsDynamic+532>\n   0x000000000008a8f3 <+527>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008a8f8 <+532>:\tmov    rcx,rax\n   0x000000000008a8fb <+535>:\tadd    rcx,0x1\n   0x000000000008a8ff <+539>:\tmov    rax,QWORD PTR [rbp-0x68]\n   0x000000000008a903 <+543>:\tmov    rdx,rax\n   0x000000000008a906 <+546>:\tadd    rdx,rdx\n   0x000000000008a909 <+549>:\tmov    rax,rcx\n   0x000000000008a90c <+552>:\tadd    rax,rax\n   0x000000000008a90f <+555>:\tjno    0x8a91e <lcsDynamic+570>\n   0x000000000008a915 <+561>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a91a <+566>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a91e <+570>:\tmov    rcx,rax\n   0x000000000008a921 <+573>:\tmov    rax,QWORD PTR [rbp-0x70]\n   0x000000000008a925 <+577>:\tmov    ebx,DWORD PTR [rax-0x1]\n   0x000000000008a928 <+580>:\tshr    ebx,0xc\n   0x000000000008a92b <+583>:\tmov    QWORD PTR [rsp+0x10],rax\n   0x000000000008a930 <+588>:\tmov    QWORD PTR [rsp+0x8],rdx\n   0x000000000008a935 <+593>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a939 <+597>:\tmov    rcx,rbx\n   0x000000000008a93c <+600>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a940 <+604>:\tcall   QWORD PTR [rax+rcx*8+0x8188]\n   0x000000000008a947 <+611>:\tjmp    0x8aa23 <lcsDynamic+831>\n   0x000000000008a94c <+616>:\tmov    rdx,QWORD PTR [rbp-0x60]\n   0x000000000008a950 <+620>:\tmov    rbx,QWORD PTR [rbp-0x58]\n   0x000000000008a954 <+624>:\tmov    rax,QWORD PTR [rbp-0x48]\n   0x000000000008a958 <+628>:\tmov    rsi,QWORD PTR [rax+rbx*8+0x17]\n   0x000000000008a95d <+633>:\tmov    QWORD PTR [rbp-0x70],rsi\n   0x000000000008a961 <+637>:\tmov    rdi,QWORD PTR [rbp-0x38]\n   0x000000000008a965 <+641>:\tadd    rdi,0x1\n   0x000000000008a969 <+645>:\tmov    QWORD PTR [rbp-0x68],rdi\n   0x000000000008a96d <+649>:\tmov    ecx,DWORD PTR [rsi-0x1]\n   0x000000000008a970 <+652>:\tshr    ecx,0xc\n   0x000000000008a973 <+655>:\tmov    QWORD PTR [rsp+0x8],rsi\n   0x000000000008a978 <+660>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x000000000008a97c <+664>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a980 <+668>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a984 <+672>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a987 <+675>:\tmov    rbx,rax\n   0x000000000008a98a <+678>:\tmov    rdx,QWORD PTR [rbp-0x60]\n   0x000000000008a98e <+682>:\tmov    rax,QWORD PTR [rbp-0x48]\n   0x000000000008a992 <+686>:\tmov    QWORD PTR [rbp-0x78],rbx\n   0x000000000008a996 <+690>:\tmov    rcx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a99b <+695>:\tmov    rsi,QWORD PTR [rbp-0x68]\n   0x000000000008a99f <+699>:\tmov    rdi,rsi\n   0x000000000008a9a2 <+702>:\tadd    rdi,rdi\n   0x000000000008a9a5 <+705>:\tmov    QWORD PTR [rbp-0x30],rdi\n   0x000000000008a9a9 <+709>:\tmov    esi,DWORD PTR [rcx-0x1]\n   0x000000000008a9ac <+712>:\tshr    esi,0xc\n   0x000000000008a9af <+715>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008a9b4 <+720>:\tmov    QWORD PTR [rsp],rdi\n   0x000000000008a9b8 <+724>:\tmov    rcx,rsi\n   0x000000000008a9bb <+727>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a9bf <+731>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a9c2 <+734>:\tmov    rcx,QWORD PTR [rbp-0x78]\n   0x000000000008a9c6 <+738>:\tsar    rcx,1\n   0x000000000008a9c9 <+741>:\tjae    0x8a9d0 <lcsDynamic+748>\n   0x000000000008a9cb <+743>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a9d0 <+748>:\tsar    rax,1\n   0x000000000008a9d3 <+751>:\tjae    0x8a9da <lcsDynamic+758>\n   0x000000000008a9d5 <+753>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008a9da <+758>:\tcmp    rcx,rax\n   0x000000000008a9dd <+761>:\tcmovl  rcx,rax\n   0x000000000008a9e1 <+765>:\tmov    rax,rcx\n   0x000000000008a9e4 <+768>:\tadd    rax,rax\n   0x000000000008a9e7 <+771>:\tjno    0x8a9f6 <lcsDynamic+786>\n   0x000000000008a9ed <+777>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a9f2 <+782>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a9f6 <+786>:\tmov    rcx,rax\n   0x000000000008a9f9 <+789>:\tmov    rax,QWORD PTR [rbp-0x70]\n   0x000000000008a9fd <+793>:\tmov    edx,DWORD PTR [rax-0x1]\n   0x000000000008aa00 <+796>:\tshr    edx,0xc\n   0x000000000008aa03 <+799>:\tmov    QWORD PTR [rsp+0x10],rax\n   0x000000000008aa08 <+804>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x000000000008aa0c <+808>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008aa11 <+813>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008aa15 <+817>:\tmov    rcx,rdx\n   0x000000000008aa18 <+820>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008aa1c <+824>:\tcall   QWORD PTR [rax+rcx*8+0x8188]\n   0x000000000008aa23 <+831>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x000000000008aa27 <+835>:\tadd    rax,0x1\n   0x000000000008aa2b <+839>:\tmov    r10,rax\n   0x000000000008aa2e <+842>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008aa32 <+846>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008aa36 <+850>:\tmov    rdi,QWORD PTR [rbp-0x60]\n   0x000000000008aa3a <+854>:\tmov    r8,QWORD PTR [rbp-0x58]\n   0x000000000008aa3e <+858>:\tmov    r9,QWORD PTR [rbp-0x50]\n   0x000000000008aa42 <+862>:\tmov    rdx,QWORD PTR [rbp-0x48]\n   0x000000000008aa46 <+866>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008aa4a <+870>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008aa4e <+874>:\tjmp    0x8a844 <lcsDynamic+352>\n   0x000000000008aa53 <+879>:\tmov    rax,QWORD PTR [rbp-0x60]\n   0x000000000008aa57 <+883>:\tadd    rax,0x1\n   0x000000000008aa5b <+887>:\tmov    rdi,rax\n   0x000000000008aa5e <+890>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008aa62 <+894>:\tjmp    0x8a804 <lcsDynamic+288>\n   0x000000000008aa67 <+899>:\tcall   0x599dc <new StringBuffer>\n   0x000000000008aa6c <+904>:\tmov    rdi,rax\n   0x000000000008aa6f <+907>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008aa73 <+911>:\tmov    r10,QWORD PTR [r15+0x7f]\n   0x000000000008aa77 <+915>:\tcall   0x59978 <new StringBuffer>\n   0x000000000008aa7c <+920>:\tmov    rax,QWORD PTR [rbp-0x40]\n   0x000000000008aa80 <+924>:\tsar    rax,1\n   0x000000000008aa83 <+927>:\tmov    r8,QWORD PTR [rbp-0x10]\n   0x000000000008aa87 <+931>:\tmov    rdi,rax\n   0x000000000008aa8a <+934>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008aa8e <+938>:\tmov    rdx,QWORD PTR [rbp-0x48]\n   0x000000000008aa92 <+942>:\tmov    QWORD PTR [rbp-0x10],r8\n   0x000000000008aa96 <+946>:\tmov    QWORD PTR [rbp-0x28],rdi\n   0x000000000008aa9a <+950>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008aa9e <+954>:\tjbe    0x8ad4d <lcsDynamic+1641>\n   0x000000000008aaa4 <+960>:\tcmp    r8,0x0\n   0x000000000008aaa8 <+964>:\tje     0x8ac4d <lcsDynamic+1385>\n   0x000000000008aaae <+970>:\tcmp    rdi,0x0\n   0x000000000008aab2 <+974>:\tje     0x8ac4d <lcsDynamic+1385>\n   0x000000000008aab8 <+980>:\tmov    rcx,QWORD PTR [rdx+r8*8+0x17]\n   0x000000000008aabd <+985>:\tmov    rax,rdi\n   0x000000000008aac0 <+988>:\tadd    rax,rax\n   0x000000000008aac3 <+991>:\tjno    0x8aad2 <lcsDynamic+1006>\n   0x000000000008aac9 <+997>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008aace <+1002>:\tmov    QWORD PTR [rax+0x7],rdi\n   0x000000000008aad2 <+1006>:\tmov    QWORD PTR [rbp-0x30],rax\n   0x000000000008aad6 <+1010>:\tmov    ebx,DWORD PTR [rcx-0x1]\n   0x000000000008aad9 <+1013>:\tshr    ebx,0xc\n   0x000000000008aadc <+1016>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008aae1 <+1021>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008aae5 <+1025>:\tmov    rcx,rbx\n   0x000000000008aae8 <+1028>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008aaec <+1032>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008aaef <+1035>:\tmov    rdx,rax\n   0x000000000008aaf2 <+1038>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008aaf6 <+1042>:\tmov    QWORD PTR [rbp-0x40],rdx\n   0x000000000008aafa <+1046>:\tsub    rsi,0x1\n   0x000000000008aafe <+1050>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008ab02 <+1054>:\tmov    rbx,rsi\n   0x000000000008ab05 <+1057>:\tmov    QWORD PTR [rbp-0x38],rsi\n   0x000000000008ab09 <+1061>:\tcmp    rbx,rax\n   0x000000000008ab0c <+1064>:\tjae    0x8ad59 <lcsDynamic+1653>\n   0x000000000008ab12 <+1070>:\tmov    rax,QWORD PTR [rbp-0x48]\n   0x000000000008ab16 <+1074>:\tmov    rcx,QWORD PTR [rax+rsi*8+0x17]\n   0x000000000008ab1b <+1079>:\tmov    ebx,DWORD PTR [rcx-0x1]\n   0x000000000008ab1e <+1082>:\tshr    ebx,0xc\n   0x000000000008ab21 <+1085>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008ab26 <+1090>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x000000000008ab2a <+1094>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008ab2e <+1098>:\tmov    rcx,rbx\n   0x000000000008ab31 <+1101>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008ab35 <+1105>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008ab38 <+1108>:\tmov    rcx,QWORD PTR [rbp-0x40]\n   0x000000000008ab3c <+1112>:\tsar    rcx,1\n   0x000000000008ab3f <+1115>:\tjae    0x8ab46 <lcsDynamic+1122>\n   0x000000000008ab41 <+1117>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008ab46 <+1122>:\tsar    rax,1\n   0x000000000008ab49 <+1125>:\tjae    0x8ab50 <lcsDynamic+1132>\n   0x000000000008ab4b <+1127>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008ab50 <+1132>:\tcmp    rcx,rax\n   0x000000000008ab53 <+1135>:\tjne    0x8ab66 <lcsDynamic+1154>\n   0x000000000008ab59 <+1141>:\tmov    r8,QWORD PTR [rbp-0x38]\n   0x000000000008ab5d <+1145>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x000000000008ab61 <+1149>:\tjmp    0x8aa8a <lcsDynamic+934>\n   0x000000000008ab66 <+1154>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008ab6a <+1158>:\tmov    rax,QWORD PTR [rbp-0x48]\n   0x000000000008ab6e <+1162>:\tmov    rcx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008ab73 <+1167>:\tmov    ebx,DWORD PTR [rcx-0x1]\n   0x000000000008ab76 <+1170>:\tshr    ebx,0xc\n   0x000000000008ab79 <+1173>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008ab7e <+1178>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x000000000008ab82 <+1182>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008ab86 <+1186>:\tmov    rcx,rbx\n   0x000000000008ab89 <+1189>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008ab8d <+1193>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008ab90 <+1196>:\tmov    rdi,rax\n   0x000000000008ab93 <+1199>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008ab97 <+1203>:\tmov    rdx,QWORD PTR [rbp-0x48]\n   0x000000000008ab9b <+1207>:\tmov    QWORD PTR [rbp-0x30],rdi\n   0x000000000008ab9f <+1211>:\tmov    rcx,QWORD PTR [rdx+rsi*8+0x17]\n   0x000000000008aba4 <+1216>:\tmov    r8,QWORD PTR [rbp-0x28]\n   0x000000000008aba8 <+1220>:\tsub    r8,0x1\n   0x000000000008abac <+1224>:\tmov    QWORD PTR [rbp-0x28],r8\n   0x000000000008abb0 <+1228>:\tmov    rax,r8\n   0x000000000008abb3 <+1231>:\tadd    rax,rax\n   0x000000000008abb6 <+1234>:\tjno    0x8abc5 <lcsDynamic+1249>\n   0x000000000008abbc <+1240>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008abc1 <+1245>:\tmov    QWORD PTR [rax+0x7],r8\n   0x000000000008abc5 <+1249>:\tmov    ebx,DWORD PTR [rcx-0x1]\n   0x000000000008abc8 <+1252>:\tshr    ebx,0xc\n   0x000000000008abcb <+1255>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008abd0 <+1260>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008abd4 <+1264>:\tmov    rcx,rbx\n   0x000000000008abd7 <+1267>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008abdb <+1271>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008abde <+1274>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x000000000008abe2 <+1278>:\tsar    rcx,1\n   0x000000000008abe5 <+1281>:\tjae    0x8abec <lcsDynamic+1288>\n   0x000000000008abe7 <+1283>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008abec <+1288>:\tsar    rax,1\n   0x000000000008abef <+1291>:\tjae    0x8abf6 <lcsDynamic+1298>\n   0x000000000008abf1 <+1293>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008abf6 <+1298>:\tcmp    rcx,rax\n   0x000000000008abf9 <+1301>:\tjne    0x8ac08 <lcsDynamic+1316>\n   0x000000000008abff <+1307>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008ac03 <+1311>:\tjmp    0x8ac41 <lcsDynamic+1373>\n   0x000000000008ac08 <+1316>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008ac0c <+1320>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x000000000008ac10 <+1324>:\tmovzx  rdx,BYTE PTR [rcx+rax*1+0xf]\n   0x000000000008ac16 <+1330>:\tmov    rbx,rdx\n   0x000000000008ac19 <+1333>:\tadd    rbx,rbx\n   0x000000000008ac1c <+1336>:\tmov    rsi,QWORD PTR [r14+0x2a0]\n   0x000000000008ac23 <+1343>:\tmov    rsi,QWORD PTR [rsi+rbx*4]\n   0x000000000008ac27 <+1347>:\tmov    rdx,QWORD PTR [rsi+0x7]\n   0x000000000008ac2b <+1351>:\ttest   rdx,rdx\n   0x000000000008ac2e <+1354>:\tje     0x8ac3d <lcsDynamic+1369>\n   0x000000000008ac34 <+1360>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008ac38 <+1364>:\tcall   0x591f0 <StringBuffer._writeString>\n   0x000000000008ac3d <+1369>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x000000000008ac41 <+1373>:\tmov    r8,rax\n   0x000000000008ac44 <+1376>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x000000000008ac48 <+1380>:\tjmp    0x8aa8a <lcsDynamic+934>\n   0x000000000008ac4d <+1385>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008ac51 <+1389>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008ac55 <+1393>:\tcall   0x73f9c <StringBuffer.toString>\n   0x000000000008ac5a <+1398>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008ac5e <+1402>:\tcall   0x599dc <new StringBuffer>\n   0x000000000008ac63 <+1407>:\tmov    rdi,rax\n   0x000000000008ac66 <+1410>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008ac6a <+1414>:\tmov    r10,QWORD PTR [r15+0x7f]\n   0x000000000008ac6e <+1418>:\tcall   0x59978 <new StringBuffer>\n   0x000000000008ac73 <+1423>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008ac77 <+1427>:\tmov    rax,QWORD PTR [rcx+0x7]\n   0x000000000008ac7b <+1431>:\tsar    rax,1\n   0x000000000008ac7e <+1434>:\tsub    rax,0x1\n   0x000000000008ac82 <+1438>:\tmov    rdx,rax\n   0x000000000008ac85 <+1441>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008ac89 <+1445>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ac8d <+1449>:\tjbe    0x8ad5e <lcsDynamic+1658>\n   0x000000000008ac93 <+1455>:\tcmp    rdx,0x0\n   0x000000000008ac97 <+1459>:\tjl     0x8acff <lcsDynamic+1563>\n   0x000000000008ac9d <+1465>:\tmov    rax,rdx\n   0x000000000008aca0 <+1468>:\tadd    rax,rax\n   0x000000000008aca3 <+1471>:\tjno    0x8acb2 <lcsDynamic+1486>\n   0x000000000008aca9 <+1477>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008acae <+1482>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008acb2 <+1486>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008acb7 <+1491>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008acbb <+1495>:\tcall   0x586b0 <_StringBase.[]>\n   0x000000000008acc0 <+1500>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008acc3 <+1503>:\tshr    ecx,0xc\n   0x000000000008acc6 <+1506>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008acca <+1510>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008acce <+1514>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008acd5 <+1521>:\tmov    rcx,QWORD PTR [rax+0x7]\n   0x000000000008acd9 <+1525>:\ttest   rcx,rcx\n   0x000000000008acdc <+1528>:\tje     0x8acee <lcsDynamic+1546>\n   0x000000000008ace2 <+1534>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008ace6 <+1538>:\tmov    rsi,rax\n   0x000000000008ace9 <+1541>:\tcall   0x591f0 <StringBuffer._writeString>\n   0x000000000008acee <+1546>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008acf2 <+1550>:\tsub    rax,0x1\n   0x000000000008acf6 <+1554>:\tmov    rdx,rax\n   0x000000000008acf9 <+1557>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008acfd <+1561>:\tjmp    0x8ac85 <lcsDynamic+1441>\n   0x000000000008acff <+1563>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008ad03 <+1567>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008ad07 <+1571>:\tcall   0x73f9c <StringBuffer.toString>\n   0x000000000008ad0c <+1576>:\tmov    rsp,rbp\n   0x000000000008ad0f <+1579>:\tpop    rbp\n   0x000000000008ad10 <+1580>:\tret\n   0x000000000008ad11 <+1581>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad18 <+1588>:\tjmp    0x8a701 <lcsDynamic+29>\n   0x000000000008ad1d <+1593>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad24 <+1600>:\tjmp    0x8a76c <lcsDynamic+136>\n   0x000000000008ad29 <+1605>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad30 <+1612>:\tjmp    0x8a794 <lcsDynamic+176>\n   0x000000000008ad35 <+1617>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad3c <+1624>:\tjmp    0x8a822 <lcsDynamic+318>\n   0x000000000008ad41 <+1629>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad48 <+1636>:\tjmp    0x8a852 <lcsDynamic+366>\n   0x000000000008ad4d <+1641>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad54 <+1648>:\tjmp    0x8aaa4 <lcsDynamic+960>\n   0x000000000008ad59 <+1653>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008ad5e <+1658>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ad65 <+1665>:\tjmp    0x8ac93 <lcsDynamic+1455>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print(\"lcsDynamic('1234', '1224533324') =  ${lcsDynamic('1234', '1224533324')}\");\n  print(\"lcsDynamic('thisisatest', 'testing123testing') = ${lcsDynamic('thisisatest', 'testing123testing')}\");\n  print(\"lcsDynamic('', 'x') = ${lcsDynamic('', 'x')}\");\n  print(\"lcsDynamic('x', 'x') = ${lcsDynamic('x', 'x')}\");\n  print('');\n  print(\"lcsRecursion('1234', '1224533324') = ${lcsRecursion('1234', '1224533324')}\");\n  print(\"lcsRecursion('thisisatest', 'testing123testing') = ${lcsRecursion('thisisatest', 'testing123testing')}\");\n  print(\"lcsRecursion('', 'x') = ${lcsRecursion('', 'x')}\");\n  print(\"lcsRecursion('x', 'x') = ${lcsRecursion('x', 'x')}\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a482 <main+814>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0x4\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a179 <+37>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a180 <+44>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a184 <+48>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a18b <+55>:\tmov    rsi,QWORD PTR [r15+0x1807]\n   0x000000000008a192 <+62>:\tcall   0x8a6e4 <lcsDynamic>\n   0x000000000008a197 <+67>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a19b <+71>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a19f <+75>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a1a3 <+79>:\ttest   al,0x1\n   0x000000000008a1a5 <+81>:\tje     0x8a1be <main+106>\n   0x000000000008a1a7 <+83>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a1ab <+87>:\tshr    r11d,0x2\n   0x000000000008a1af <+91>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a1b3 <+95>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a1b7 <+99>:\tje     0x8a1be <main+106>\n   0x000000000008a1b9 <+101>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a1be <+106>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a1c2 <+110>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a1c6 <+114>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1cb <+119>:\tmov    rdi,rax\n   0x000000000008a1ce <+122>:\tcall   0x8a6ac <print>\n   0x000000000008a1d3 <+127>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1d7 <+131>:\tmov    r10d,0x4\n   0x000000000008a1dd <+137>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a1e2 <+142>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a1e6 <+146>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a1ed <+153>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a1f1 <+157>:\tmov    rdi,QWORD PTR [r15+0x1817]\n   0x000000000008a1f8 <+164>:\tmov    rsi,QWORD PTR [r15+0x181f]\n   0x000000000008a1ff <+171>:\tcall   0x8a6e4 <lcsDynamic>\n   0x000000000008a204 <+176>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a208 <+180>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a20c <+184>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a210 <+188>:\ttest   al,0x1\n   0x000000000008a212 <+190>:\tje     0x8a22b <main+215>\n   0x000000000008a214 <+192>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a218 <+196>:\tshr    r11d,0x2\n   0x000000000008a21c <+200>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a220 <+204>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a224 <+208>:\tje     0x8a22b <main+215>\n   0x000000000008a226 <+210>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a22b <+215>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a22f <+219>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a233 <+223>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a238 <+228>:\tmov    rdi,rax\n   0x000000000008a23b <+231>:\tcall   0x8a6ac <print>\n   0x000000000008a240 <+236>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a244 <+240>:\tmov    r10d,0x4\n   0x000000000008a24a <+246>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a24f <+251>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a253 <+255>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a25a <+262>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a25e <+266>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a265 <+273>:\tmov    rsi,QWORD PTR [r15+0x182f]\n   0x000000000008a26c <+280>:\tcall   0x8a6e4 <lcsDynamic>\n   0x000000000008a271 <+285>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a275 <+289>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a279 <+293>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a27d <+297>:\ttest   al,0x1\n   0x000000000008a27f <+299>:\tje     0x8a298 <main+324>\n   0x000000000008a281 <+301>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a285 <+305>:\tshr    r11d,0x2\n   0x000000000008a289 <+309>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a28d <+313>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a291 <+317>:\tje     0x8a298 <main+324>\n   0x000000000008a293 <+319>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a298 <+324>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a29c <+328>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a2a0 <+332>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a2a5 <+337>:\tmov    rdi,rax\n   0x000000000008a2a8 <+340>:\tcall   0x8a6ac <print>\n   0x000000000008a2ad <+345>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a2b1 <+349>:\tmov    r10d,0x4\n   0x000000000008a2b7 <+355>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2bc <+360>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a2c0 <+364>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a2c7 <+371>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a2cb <+375>:\tmov    rdi,QWORD PTR [r15+0x182f]\n   0x000000000008a2d2 <+382>:\tmov    rsi,QWORD PTR [r15+0x182f]\n   0x000000000008a2d9 <+389>:\tcall   0x8a6e4 <lcsDynamic>\n   0x000000000008a2de <+394>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a2e2 <+398>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a2e6 <+402>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a2ea <+406>:\ttest   al,0x1\n   0x000000000008a2ec <+408>:\tje     0x8a305 <main+433>\n   0x000000000008a2ee <+410>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a2f2 <+414>:\tshr    r11d,0x2\n   0x000000000008a2f6 <+418>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a2fa <+422>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a2fe <+426>:\tje     0x8a305 <main+433>\n   0x000000000008a300 <+428>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a305 <+433>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a309 <+437>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a30d <+441>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a312 <+446>:\tmov    rdi,rax\n   0x000000000008a315 <+449>:\tcall   0x8a6ac <print>\n   0x000000000008a31a <+454>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a321 <+461>:\tcall   0x8a648 <printToConsole>\n   0x000000000008a326 <+466>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a32a <+470>:\tmov    r10d,0x4\n   0x000000000008a330 <+476>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a335 <+481>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a339 <+485>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a340 <+492>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a344 <+496>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a34b <+503>:\tmov    rsi,QWORD PTR [r15+0x1807]\n   0x000000000008a352 <+510>:\tcall   0x8a490 <lcsRecursion>\n   0x000000000008a357 <+515>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a35b <+519>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a35f <+523>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a363 <+527>:\ttest   al,0x1\n   0x000000000008a365 <+529>:\tje     0x8a37e <main+554>\n   0x000000000008a367 <+531>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a36b <+535>:\tshr    r11d,0x2\n   0x000000000008a36f <+539>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a373 <+543>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a377 <+547>:\tje     0x8a37e <main+554>\n   0x000000000008a379 <+549>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a37e <+554>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a382 <+558>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a386 <+562>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a38b <+567>:\tmov    rdi,rax\n   0x000000000008a38e <+570>:\tcall   0x8a6ac <print>\n   0x000000000008a393 <+575>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a397 <+579>:\tmov    r10d,0x4\n   0x000000000008a39d <+585>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a3a2 <+590>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a3a6 <+594>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x000000000008a3ad <+601>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a3b1 <+605>:\tmov    rdi,QWORD PTR [r15+0x1817]\n   0x000000000008a3b8 <+612>:\tmov    rsi,QWORD PTR [r15+0x181f]\n   0x000000000008a3bf <+619>:\tcall   0x8a490 <lcsRecursion>\n   0x000000000008a3c4 <+624>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a3c8 <+628>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a3cc <+632>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a3d0 <+636>:\ttest   al,0x1\n   0x000000000008a3d2 <+638>:\tje     0x8a3eb <main+663>\n   0x000000000008a3d4 <+640>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a3d8 <+644>:\tshr    r11d,0x2\n   0x000000000008a3dc <+648>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a3e0 <+652>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a3e4 <+656>:\tje     0x8a3eb <main+663>\n   0x000000000008a3e6 <+658>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a3eb <+663>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a3ef <+667>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a3f3 <+671>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a3f8 <+676>:\tmov    rdi,rax\n   0x000000000008a3fb <+679>:\tcall   0x8a6ac <print>\n   0x000000000008a400 <+684>:\tmov    rdi,QWORD PTR [r15+0x184f]\n   0x000000000008a407 <+691>:\tcall   0x8a6ac <print>\n   0x000000000008a40c <+696>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a410 <+700>:\tmov    r10d,0x4\n   0x000000000008a416 <+706>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a41b <+711>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a41f <+715>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x000000000008a426 <+722>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a42a <+726>:\tmov    rdi,QWORD PTR [r15+0x182f]\n   0x000000000008a431 <+733>:\tmov    rsi,QWORD PTR [r15+0x182f]\n   0x000000000008a438 <+740>:\tcall   0x8a490 <lcsRecursion>\n   0x000000000008a43d <+745>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a441 <+749>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a445 <+753>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a449 <+757>:\ttest   al,0x1\n   0x000000000008a44b <+759>:\tje     0x8a464 <main+784>\n   0x000000000008a44d <+761>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a451 <+765>:\tshr    r11d,0x2\n   0x000000000008a455 <+769>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a459 <+773>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a45d <+777>:\tje     0x8a464 <main+784>\n   0x000000000008a45f <+779>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a464 <+784>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a468 <+788>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a46c <+792>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a471 <+797>:\tmov    rdi,rax\n   0x000000000008a474 <+800>:\tcall   0x8a6ac <print>\n   0x000000000008a479 <+805>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a47d <+809>:\tmov    rsp,rbp\n   0x000000000008a480 <+812>:\tpop    rbp\n   0x000000000008a481 <+813>:\tret\n   0x000000000008a482 <+814>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a489 <+821>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "loops-do-while.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  int val = 0;\n  do {\n    val++;\n    print(val);\n  } while (val % 6 != 0);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1fb <main+167>\n   0x000000000008a166 <+18>:\txor    eax,eax\n   0x000000000008a168 <+20>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a16c <+24>:\tjbe    0x8a207 <main+179>\n   0x000000000008a172 <+30>:\tmov    rcx,rax\n   0x000000000008a175 <+33>:\tadd    rcx,0x1\n   0x000000000008a179 <+37>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a17d <+41>:\tmov    rax,rcx\n   0x000000000008a180 <+44>:\tadd    rax,rax\n   0x000000000008a183 <+47>:\tjno    0x8a192 <main+62>\n   0x000000000008a189 <+53>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a18e <+58>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a192 <+62>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a196 <+66>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a19b <+71>:\tmov    rdi,rax\n   0x000000000008a19e <+74>:\tcall   0x8a214 <printToConsole>\n   0x000000000008a1a3 <+79>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1a7 <+83>:\tmov    ecx,0x6\n   0x000000000008a1ac <+88>:\tmov    r11,rax\n   0x000000000008a1af <+91>:\tmov    rax,QWORD PTR [r15+0x17f7]\n   0x000000000008a1b6 <+98>:\timul   r11\n   0x000000000008a1b9 <+101>:\tmov    rax,rdx\n   0x000000000008a1bc <+104>:\tshr    rdx,0x3f\n   0x000000000008a1c0 <+108>:\tadd    rdx,rax\n   0x000000000008a1c3 <+111>:\tmov    rax,r11\n   0x000000000008a1c6 <+114>:\tmov    r11d,0x6\n   0x000000000008a1cc <+120>:\timul   rdx,r11\n   0x000000000008a1d0 <+124>:\tsub    rax,rdx\n   0x000000000008a1d3 <+127>:\tjge    0x8a1dc <main+136>\n   0x000000000008a1d9 <+133>:\tadd    rax,r11\n   0x000000000008a1dc <+136>:\tmov    rdx,rax\n   0x000000000008a1df <+139>:\tcmp    rdx,0x0\n   0x000000000008a1e3 <+143>:\tje     0x8a1f2 <main+158>\n   0x000000000008a1e9 <+149>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1ed <+153>:\tjmp    0x8a168 <main+20>\n   0x000000000008a1f2 <+158>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1f6 <+162>:\tmov    rsp,rbp\n   0x000000000008a1f9 <+165>:\tpop    rbp\n   0x000000000008a1fa <+166>:\tret\n   0x000000000008a1fb <+167>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a202 <+174>:\tjmp    0x8a166 <main+18>\n   0x000000000008a207 <+179>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a20e <+186>:\tjmp    0x8a172 <main+30>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "loops-downward-for.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  for (var i = 10; i >= 0; --i) {\n    print(i);\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1bc <main+104>\n   0x000000000008a166 <+18>:\tmov    ecx,0xa\n   0x000000000008a16b <+23>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a16f <+27>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a173 <+31>:\tjbe    0x8a1c5 <main+113>\n   0x000000000008a179 <+37>:\tcmp    rcx,0x0\n   0x000000000008a17d <+41>:\tjl     0x8a1b3 <main+95>\n   0x000000000008a183 <+47>:\tmov    rax,rcx\n   0x000000000008a186 <+50>:\tadd    rax,rax\n   0x000000000008a189 <+53>:\tjno    0x8a198 <main+68>\n   0x000000000008a18f <+59>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a194 <+64>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a198 <+68>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a19c <+72>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a1a1 <+77>:\tmov    rdi,rax\n   0x000000000008a1a4 <+80>:\tcall   0x8a1d0 <printToConsole>\n   0x000000000008a1a9 <+85>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a1ad <+89>:\tsub    rcx,0x1\n   0x000000000008a1b1 <+93>:\tjmp    0x8a16b <main+23>\n   0x000000000008a1b3 <+95>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1b7 <+99>:\tmov    rsp,rbp\n   0x000000000008a1ba <+102>:\tpop    rbp\n   0x000000000008a1bb <+103>:\tret\n   0x000000000008a1bc <+104>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1c3 <+111>:\tjmp    0x8a166 <main+18>\n   0x000000000008a1c5 <+113>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1cc <+120>:\tjmp    0x8a179 <main+37>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "loops-for-with-a-specified-step.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  for (int i = 1; i <= 21; i += 2) print(i);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1bc <main+104>\n   0x000000000008a166 <+18>:\tmov    ecx,0x1\n   0x000000000008a16b <+23>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a16f <+27>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a173 <+31>:\tjbe    0x8a1c5 <main+113>\n   0x000000000008a179 <+37>:\tcmp    rcx,0x15\n   0x000000000008a17d <+41>:\tjg     0x8a1b3 <main+95>\n   0x000000000008a183 <+47>:\tmov    rax,rcx\n   0x000000000008a186 <+50>:\tadd    rax,rax\n   0x000000000008a189 <+53>:\tjno    0x8a198 <main+68>\n   0x000000000008a18f <+59>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a194 <+64>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a198 <+68>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a19c <+72>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a1a1 <+77>:\tmov    rdi,rax\n   0x000000000008a1a4 <+80>:\tcall   0x8a1d0 <printToConsole>\n   0x000000000008a1a9 <+85>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a1ad <+89>:\tadd    rcx,0x2\n   0x000000000008a1b1 <+93>:\tjmp    0x8a16b <main+23>\n   0x000000000008a1b3 <+95>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1b7 <+99>:\tmov    rsp,rbp\n   0x000000000008a1ba <+102>:\tpop    rbp\n   0x000000000008a1bb <+103>:\tret\n   0x000000000008a1bc <+104>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1c3 <+111>:\tjmp    0x8a166 <main+18>\n   0x000000000008a1c5 <+113>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1cc <+120>:\tjmp    0x8a179 <main+37>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "loops-for.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n    for (var i = 0; i < 5; i++) {\n        for (var j = 0; j < i + 1; j++)\n            stdout.write(\"*\");\n        print(\"\");\n    }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090b3c <+0>:\tpush   rbp\n   0x0000000000090b3d <+1>:\tmov    rbp,rsp\n   0x0000000000090b40 <+4>:\tsub    rsp,0x10\n   0x0000000000090b44 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b48 <+12>:\tjbe    0x90c22 <main+230>\n   0x0000000000090b4e <+18>:\txor    eax,eax\n   0x0000000000090b50 <+20>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b54 <+24>:\tjbe    0x90c2e <main+242>\n   0x0000000000090b5a <+30>:\tcmp    rax,0x5\n   0x0000000000090b5e <+34>:\tjge    0x90c19 <main+221>\n   0x0000000000090b64 <+40>:\tadd    rax,0x1\n   0x0000000000090b68 <+44>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000090b6c <+48>:\txor    ecx,ecx\n   0x0000000000090b6e <+50>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x0000000000090b72 <+54>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b76 <+58>:\tjbe    0x90c3a <main+254>\n   0x0000000000090b7c <+64>:\tcmp    rcx,rax\n   0x0000000000090b7f <+67>:\tjge    0x90c04 <main+200>\n   0x0000000000090b85 <+73>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090b89 <+77>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x0000000000090b90 <+84>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090b94 <+88>:\tjne    0x90ba6 <main+106>\n   0x0000000000090b9a <+94>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000090ba1 <+101>:\tcall   0x89bac <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090ba6 <+106>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090baa <+110>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000090bb1 <+117>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090bb5 <+121>:\tjne    0x90bc7 <main+139>\n   0x0000000000090bbb <+127>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000090bc2 <+134>:\tcall   0x89b64 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090bc7 <+139>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090bcb <+143>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x0000000000090bd2 <+150>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090bd6 <+154>:\tjne    0x90be8 <main+172>\n   0x0000000000090bdc <+160>:\tmov    rdx,QWORD PTR [r15+0x1847]\n   0x0000000000090be3 <+167>:\tcall   0x89b64 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090be8 <+172>:\tmov    rdi,rax\n   0x0000000000090beb <+175>:\tcall   0x90cac <_StdSink._write>\n   0x0000000000090bf0 <+180>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090bf4 <+184>:\tadd    rax,0x1\n   0x0000000000090bf8 <+188>:\tmov    rcx,rax\n   0x0000000000090bfb <+191>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000090bff <+195>:\tjmp    0x90b6e <main+50>\n   0x0000000000090c04 <+200>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x0000000000090c0b <+207>:\tcall   0x90c48 <printToConsole>\n   0x0000000000090c10 <+212>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000090c14 <+216>:\tjmp    0x90b50 <main+20>\n   0x0000000000090c19 <+221>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000090c1d <+225>:\tmov    rsp,rbp\n   0x0000000000090c20 <+228>:\tpop    rbp\n   0x0000000000090c21 <+229>:\tret\n   0x0000000000090c22 <+230>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090c29 <+237>:\tjmp    0x90b4e <main+18>\n   0x0000000000090c2e <+242>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090c35 <+249>:\tjmp    0x90b5a <main+30>\n   0x0000000000090c3a <+254>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090c41 <+261>:\tjmp    0x90b7c <main+64>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "loops-infinite.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  while(true) {\n    print(\"SPAM\");\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a17a <main+38>\n   0x000000000008a162 <+14>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a166 <+18>:\tjbe    0x8a183 <main+47>\n   0x000000000008a16c <+24>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a173 <+31>:\tcall   0x8a18c <printToConsole>\n   0x000000000008a178 <+36>:\tjmp    0x8a162 <main+14>\n   0x000000000008a17a <+38>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a181 <+45>:\tjmp    0x8a162 <main+14>\n   0x000000000008a183 <+47>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a18a <+54>:\tjmp    0x8a16c <main+24>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "loops-n-plus-one-half.dart",
  "functions": [
    {
      "name": "loopPlusHalf",
      "source": "String loopPlusHalf(start, end) {\n  var result = '';\n  for(int i = start; i <= end; i++) {\n    result += '$i';\n    if(i == end) {\n      break;\n    }\n    result += ', ';\n  }\n  return result;\n}",
      "assembly": "Dump of assembler code for function loopPlusHalf:\n   0x000000000008a220 <+0>:\tpush   rbp\n   0x000000000008a221 <+1>:\tmov    rbp,rsp\n   0x000000000008a224 <+4>:\tsub    rsp,0x20\n   0x000000000008a228 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a22c <+12>:\tjbe    0x8a2e6 <loopPlusHalf+198>\n   0x000000000008a232 <+18>:\tmov    rsi,QWORD PTR [r15+0xcf]\n   0x000000000008a239 <+25>:\tmov    edx,0x1\n   0x000000000008a23e <+30>:\tmov    QWORD PTR [rbp-0x8],rsi\n   0x000000000008a242 <+34>:\tmov    QWORD PTR [rbp-0x10],rdx\n   0x000000000008a246 <+38>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a24a <+42>:\tjbe    0x8a2f2 <loopPlusHalf+210>\n   0x000000000008a250 <+48>:\tcmp    rdx,0xa\n   0x000000000008a254 <+52>:\tjg     0x8a2dd <loopPlusHalf+189>\n   0x000000000008a25a <+58>:\tmov    rax,rdx\n   0x000000000008a25d <+61>:\tadd    rax,rax\n   0x000000000008a260 <+64>:\tjno    0x8a26f <loopPlusHalf+79>\n   0x000000000008a266 <+70>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a26b <+75>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a26f <+79>:\ttest   al,0x1\n   0x000000000008a271 <+81>:\tmov    ecx,0x3c\n   0x000000000008a276 <+86>:\tje     0x8a27e <loopPlusHalf+94>\n   0x000000000008a278 <+88>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a27b <+91>:\tshr    ecx,0xc\n   0x000000000008a27e <+94>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a282 <+98>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a286 <+102>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008a28d <+109>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a291 <+113>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a296 <+118>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a29a <+122>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a29f <+127>:\tmov    rcx,rax\n   0x000000000008a2a2 <+130>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a2a6 <+134>:\tcmp    rax,0xa\n   0x000000000008a2aa <+138>:\tje     0x8a2d5 <loopPlusHalf+181>\n   0x000000000008a2b0 <+144>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008a2b5 <+149>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a2bc <+156>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a2c0 <+160>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a2c5 <+165>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a2c9 <+169>:\tadd    rdx,0x1\n   0x000000000008a2cd <+173>:\tmov    rsi,rax\n   0x000000000008a2d0 <+176>:\tjmp    0x8a23e <loopPlusHalf+30>\n   0x000000000008a2d5 <+181>:\tmov    rax,rcx\n   0x000000000008a2d8 <+184>:\tjmp    0x8a2e1 <loopPlusHalf+193>\n   0x000000000008a2dd <+189>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a2e1 <+193>:\tmov    rsp,rbp\n   0x000000000008a2e4 <+196>:\tpop    rbp\n   0x000000000008a2e5 <+197>:\tret\n   0x000000000008a2e6 <+198>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2ed <+205>:\tjmp    0x8a232 <loopPlusHalf+18>\n   0x000000000008a2f2 <+210>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2f9 <+217>:\tjmp    0x8a250 <loopPlusHalf+48>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print(loopPlusHalf(1, 10));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a178 <main+36>\n   0x000000000008a162 <+14>:\tcall   0x8a220 <loopPlusHalf>\n   0x000000000008a167 <+19>:\tmov    rdi,rax\n   0x000000000008a16a <+22>:\tcall   0x8a184 <print>\n   0x000000000008a16f <+27>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a173 <+31>:\tmov    rsp,rbp\n   0x000000000008a176 <+34>:\tpop    rbp\n   0x000000000008a177 <+35>:\tret\n   0x000000000008a178 <+36>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a17f <+43>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "loops-while-1.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var val = 1024;\n  while (val > 0) {\n    print(val);\n    val >>= 1;\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1af <main+91>\n   0x000000000008a166 <+18>:\tmov    eax,0x400\n   0x000000000008a16b <+23>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a16f <+27>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a173 <+31>:\tjbe    0x8a1b8 <main+100>\n   0x000000000008a179 <+37>:\tcmp    rax,0x0\n   0x000000000008a17d <+41>:\tjle    0x8a1a6 <main+82>\n   0x000000000008a183 <+47>:\tmov    rcx,rax\n   0x000000000008a186 <+50>:\tadd    rcx,rcx\n   0x000000000008a189 <+53>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a18d <+57>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a192 <+62>:\tmov    rdi,rax\n   0x000000000008a195 <+65>:\tcall   0x8a1c4 <printToConsole>\n   0x000000000008a19a <+70>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a19e <+74>:\tsar    rcx,1\n   0x000000000008a1a1 <+77>:\tmov    rax,rcx\n   0x000000000008a1a4 <+80>:\tjmp    0x8a16b <main+23>\n   0x000000000008a1a6 <+82>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1aa <+86>:\tmov    rsp,rbp\n   0x000000000008a1ad <+89>:\tpop    rbp\n   0x000000000008a1ae <+90>:\tret\n   0x000000000008a1af <+91>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1b6 <+98>:\tjmp    0x8a166 <main+18>\n   0x000000000008a1b8 <+100>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1bf <+107>:\tjmp    0x8a179 <main+37>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "mandelbrot-set.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  const startX = -1.5;\n  const startY = -1.0;\n  const stepX = 0.03;\n  const stepY = 0.1;\n\n  for (int y = 0; y < 20; y++) {\n    String line = \"\";\n    for (int x = 0; x < 70; x++) {\n      var c = Complex(startX + stepX * x, startY + stepY * y);\n      var z = Complex(0.0, 0.0);\n      for (int i = 0; i < 100; i++) {\n        z = z * z + c;\n        if (z.abs() > 2) {\n          break;\n        }\n      }\n      line += z.abs() > 2 ? \" \" : \"*\";\n    }\n    print(line);\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a254 <+0>:\tpush   rbp\n   0x000000000008a255 <+1>:\tmov    rbp,rsp\n   0x000000000008a258 <+4>:\tsub    rsp,0x48\n   0x000000000008a25c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a260 <+12>:\tjbe    0x8a45b <main+519>\n   0x000000000008a266 <+18>:\txor    eax,eax\n   0x000000000008a268 <+20>:\tmovsd  xmm3,QWORD PTR [r15+0x17f7]\n   0x000000000008a271 <+29>:\tmovsd  xmm2,QWORD PTR [r15+0x17ff]\n   0x000000000008a27a <+38>:\tmovsd  xmm1,QWORD PTR [r15+0x1807]\n   0x000000000008a283 <+47>:\tmovsd  xmm0,QWORD PTR [r15+0x180f]\n   0x000000000008a28c <+56>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a290 <+60>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a294 <+64>:\tjbe    0x8a467 <main+531>\n   0x000000000008a29a <+70>:\tcmp    rax,0x14\n   0x000000000008a29e <+74>:\tjge    0x8a452 <main+510>\n   0x000000000008a2a4 <+80>:\txorps  xmm4,xmm4\n   0x000000000008a2a7 <+83>:\tcvtsi2sd xmm4,rax\n   0x000000000008a2ac <+88>:\tmulsd  xmm4,xmm1\n   0x000000000008a2b0 <+92>:\taddsd  xmm4,xmm0\n   0x000000000008a2b4 <+96>:\tmovsd  QWORD PTR [rbp-0x38],xmm4\n   0x000000000008a2b9 <+101>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a2c0 <+108>:\txor    ecx,ecx\n   0x000000000008a2c2 <+110>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a2c6 <+114>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a2ca <+118>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2ce <+122>:\tjbe    0x8a473 <main+543>\n   0x000000000008a2d4 <+128>:\tcmp    rcx,0x46\n   0x000000000008a2d8 <+132>:\tjge    0x8a439 <main+485>\n   0x000000000008a2de <+138>:\txorps  xmm5,xmm5\n   0x000000000008a2e1 <+141>:\tcvtsi2sd xmm5,rcx\n   0x000000000008a2e6 <+146>:\tmulsd  xmm5,xmm3\n   0x000000000008a2ea <+150>:\taddsd  xmm5,xmm2\n   0x000000000008a2ee <+154>:\tmovsd  QWORD PTR [rbp-0x30],xmm5\n   0x000000000008a2f3 <+159>:\tcall   0x8a5d8 <new Complex>\n   0x000000000008a2f8 <+164>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x000000000008a2fd <+169>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a301 <+173>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008a306 <+178>:\tmovsd  xmm0,QWORD PTR [rbp-0x38]\n   0x000000000008a30b <+183>:\tmovsd  QWORD PTR [rax+0xf],xmm0\n   0x000000000008a310 <+188>:\tcall   0x8a5d8 <new Complex>\n   0x000000000008a315 <+193>:\txorps  xmm0,xmm0\n   0x000000000008a318 <+196>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008a31d <+201>:\tmovsd  QWORD PTR [rax+0xf],xmm0\n   0x000000000008a322 <+206>:\tmov    rsi,rax\n   0x000000000008a325 <+209>:\txor    eax,eax\n   0x000000000008a327 <+211>:\txorps  xmm2,xmm2\n   0x000000000008a32a <+214>:\txorps  xmm1,xmm1\n   0x000000000008a32d <+217>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a331 <+221>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a335 <+225>:\tjbe    0x8a47f <main+555>\n   0x000000000008a33b <+231>:\tcmp    rax,0x64\n   0x000000000008a33f <+235>:\tjge    0x8a3ac <main+344>\n   0x000000000008a345 <+241>:\tmov    rdi,rsi\n   0x000000000008a348 <+244>:\tcall   0x8a574 <Complex.*>\n   0x000000000008a34d <+249>:\tmov    rdi,rax\n   0x000000000008a350 <+252>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a354 <+256>:\tcall   0x8a528 <Complex.+>\n   0x000000000008a359 <+261>:\tmov    rcx,rax\n   0x000000000008a35c <+264>:\tmovsd  xmm2,QWORD PTR [rcx+0x7]\n   0x000000000008a361 <+269>:\tmovaps xmm0,xmm2\n   0x000000000008a364 <+272>:\tmulsd  xmm0,xmm0\n   0x000000000008a368 <+276>:\tmovsd  xmm1,QWORD PTR [rcx+0xf]\n   0x000000000008a36d <+281>:\tmovaps xmm3,xmm1\n   0x000000000008a370 <+284>:\tmulsd  xmm3,xmm3\n   0x000000000008a374 <+288>:\taddsd  xmm0,xmm3\n   0x000000000008a378 <+292>:\tmovsd  xmm3,QWORD PTR [r15+0x1817]\n   0x000000000008a381 <+301>:\tcomisd xmm0,xmm3\n   0x000000000008a385 <+305>:\tjp     0x8a391 <main+317>\n   0x000000000008a38b <+311>:\tja     0x8a3a1 <main+333>\n   0x000000000008a391 <+317>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a395 <+321>:\tadd    rax,0x1\n   0x000000000008a399 <+325>:\tmov    rsi,rcx\n   0x000000000008a39c <+328>:\txorps  xmm0,xmm0\n   0x000000000008a39f <+331>:\tjmp    0x8a32d <main+217>\n   0x000000000008a3a1 <+333>:\tmovaps xmm0,xmm1\n   0x000000000008a3a4 <+336>:\tmovaps xmm1,xmm2\n   0x000000000008a3a7 <+339>:\tjmp    0x8a3bb <main+359>\n   0x000000000008a3ac <+344>:\tmovsd  xmm3,QWORD PTR [r15+0x1817]\n   0x000000000008a3b5 <+353>:\tmovaps xmm0,xmm1\n   0x000000000008a3b8 <+356>:\tmovaps xmm1,xmm2\n   0x000000000008a3bb <+359>:\tmulsd  xmm1,xmm1\n   0x000000000008a3bf <+363>:\tmulsd  xmm0,xmm0\n   0x000000000008a3c3 <+367>:\taddsd  xmm1,xmm0\n   0x000000000008a3c7 <+371>:\tcomisd xmm1,xmm3\n   0x000000000008a3cb <+375>:\tjp     0x8a3e3 <main+399>\n   0x000000000008a3d1 <+381>:\tjbe    0x8a3e3 <main+399>\n   0x000000000008a3d7 <+387>:\tmov    rax,QWORD PTR [r15+0x5df]\n   0x000000000008a3de <+394>:\tjmp    0x8a3ea <main+406>\n   0x000000000008a3e3 <+399>:\tmov    rax,QWORD PTR [r15+0x181f]\n   0x000000000008a3ea <+406>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a3ee <+410>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a3f3 <+415>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a3f7 <+419>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a3fc <+424>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a400 <+428>:\tadd    rcx,0x1\n   0x000000000008a404 <+432>:\tmov    rdi,rax\n   0x000000000008a407 <+435>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a40b <+439>:\tmovsd  xmm4,QWORD PTR [rbp-0x38]\n   0x000000000008a410 <+444>:\tmovsd  xmm3,QWORD PTR [r15+0x17f7]\n   0x000000000008a419 <+453>:\tmovsd  xmm2,QWORD PTR [r15+0x17ff]\n   0x000000000008a422 <+462>:\tmovsd  xmm1,QWORD PTR [r15+0x1807]\n   0x000000000008a42b <+471>:\tmovsd  xmm0,QWORD PTR [r15+0x180f]\n   0x000000000008a434 <+480>:\tjmp    0x8a2c2 <main+110>\n   0x000000000008a439 <+485>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a43d <+489>:\tcall   0x8a48c <print>\n   0x000000000008a442 <+494>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a446 <+498>:\tadd    rcx,0x1\n   0x000000000008a44a <+502>:\tmov    rax,rcx\n   0x000000000008a44d <+505>:\tjmp    0x8a268 <main+20>\n   0x000000000008a452 <+510>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a456 <+514>:\tmov    rsp,rbp\n   0x000000000008a459 <+517>:\tpop    rbp\n   0x000000000008a45a <+518>:\tret\n   0x000000000008a45b <+519>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a462 <+526>:\tjmp    0x8a266 <main+18>\n   0x000000000008a467 <+531>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a46e <+538>:\tjmp    0x8a29a <main+70>\n   0x000000000008a473 <+543>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a47a <+550>:\tjmp    0x8a2d4 <main+128>\n   0x000000000008a47f <+555>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a486 <+562>:\tjmp    0x8a33b <main+231>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "mcnuggets-problem.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  var nuggets = List<int>.generate(101, (int index) => index);\n  for (int small in List<int>.generate((100 ~/ (6 + 1)), (int index) => index)) {\n    for (int medium in List<int>.generate((100 ~/ (9 + 1)), (int index) => index)) {\n      for (int large in List<int>.generate((100 ~/ (20 + 1)), (int index) => index)) {\n        nuggets.removeWhere((element) => element == 6 * small + 9 * medium + 20 * large);\n      }\n    }\n  }\n  print('Largest non-McNuggets number: ${nuggets.reduce(max).toString() ?? 'none'}.');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a430 <+0>:\tpush   rbp\n   0x000000000008a431 <+1>:\tmov    rbp,rsp\n   0x000000000008a434 <+4>:\tsub    rsp,0x78\n   0x000000000008a438 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a43c <+12>:\tjbe    0x8a73f <main+783>\n   0x000000000008a442 <+18>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008a449 <+25>:\tmov    esi,0x65\n   0x000000000008a44e <+30>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a453 <+35>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a457 <+39>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a45b <+43>:\tsar    rcx,1\n   0x000000000008a45e <+46>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a462 <+50>:\txor    ebx,ebx\n   0x000000000008a464 <+52>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a468 <+56>:\tjbe    0x8a74b <main+795>\n   0x000000000008a46e <+62>:\tcmp    rbx,rcx\n   0x000000000008a471 <+65>:\tjge    0x8a488 <main+88>\n   0x000000000008a477 <+71>:\tmov    rsi,rbx\n   0x000000000008a47a <+74>:\tadd    rsi,rsi\n   0x000000000008a47d <+77>:\tmov    QWORD PTR [rdx+rbx*8+0x17],rsi\n   0x000000000008a482 <+82>:\tadd    rbx,0x1\n   0x000000000008a486 <+86>:\tjmp    0x8a464 <main+52>\n   0x000000000008a488 <+88>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008a48f <+95>:\tmov    esi,0xe\n   0x000000000008a494 <+100>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a499 <+105>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a49d <+109>:\tsar    rcx,1\n   0x000000000008a4a0 <+112>:\tmov    QWORD PTR [rbp-0x30],rcx\n   0x000000000008a4a4 <+116>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a4a8 <+120>:\tmov    QWORD PTR [rbp-0x28],rdx\n   0x000000000008a4ac <+124>:\txor    eax,eax\n   0x000000000008a4ae <+126>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a4b2 <+130>:\tjbe    0x8a757 <main+807>\n   0x000000000008a4b8 <+136>:\tcmp    rax,rcx\n   0x000000000008a4bb <+139>:\tjge    0x8a4d2 <main+162>\n   0x000000000008a4c1 <+145>:\tmov    rbx,rax\n   0x000000000008a4c4 <+148>:\tadd    rbx,rbx\n   0x000000000008a4c7 <+151>:\tmov    QWORD PTR [rdx+rax*8+0x17],rbx\n   0x000000000008a4cc <+156>:\tadd    rax,0x1\n   0x000000000008a4d0 <+160>:\tjmp    0x8a4ae <main+126>\n   0x000000000008a4d2 <+162>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a4d6 <+166>:\txor    eax,eax\n   0x000000000008a4d8 <+168>:\tmov    QWORD PTR [rbp-0x20],rbx\n   0x000000000008a4dc <+172>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a4e0 <+176>:\tjbe    0x8a763 <main+819>\n   0x000000000008a4e6 <+182>:\tcmp    rax,rcx\n   0x000000000008a4e9 <+185>:\tjge    0x8a6a3 <main+627>\n   0x000000000008a4ef <+191>:\tmov    rsi,QWORD PTR [rdx+rax*8+0x17]\n   0x000000000008a4f4 <+196>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a4f8 <+200>:\tadd    rax,0x1\n   0x000000000008a4fc <+204>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a500 <+208>:\tmov    r10d,0x1\n   0x000000000008a506 <+214>:\tcall   0x84038 <stub _iso_stub_AllocateContextStub>\n   0x000000000008a50b <+219>:\tmov    rbx,QWORD PTR [rbp-0x20]\n   0x000000000008a50f <+223>:\tmov    QWORD PTR [rbp-0x38],rax\n   0x000000000008a513 <+227>:\tmov    QWORD PTR [rax+0xf],rbx\n   0x000000000008a517 <+231>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a51b <+235>:\tmov    QWORD PTR [rax+0x17],rcx\n   0x000000000008a51f <+239>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008a526 <+246>:\tmov    esi,0xa\n   0x000000000008a52b <+251>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a530 <+256>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a534 <+260>:\tsar    rcx,1\n   0x000000000008a537 <+263>:\tmov    QWORD PTR [rbp-0x50],rcx\n   0x000000000008a53b <+267>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a53f <+271>:\tmov    QWORD PTR [rbp-0x48],rdx\n   0x000000000008a543 <+275>:\txor    eax,eax\n   0x000000000008a545 <+277>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a549 <+281>:\tjbe    0x8a76f <main+831>\n   0x000000000008a54f <+287>:\tcmp    rax,rcx\n   0x000000000008a552 <+290>:\tjge    0x8a569 <main+313>\n   0x000000000008a558 <+296>:\tmov    rbx,rax\n   0x000000000008a55b <+299>:\tadd    rbx,rbx\n   0x000000000008a55e <+302>:\tmov    QWORD PTR [rdx+rax*8+0x17],rbx\n   0x000000000008a563 <+307>:\tadd    rax,0x1\n   0x000000000008a567 <+311>:\tjmp    0x8a545 <main+277>\n   0x000000000008a569 <+313>:\tmov    rbx,QWORD PTR [rbp-0x38]\n   0x000000000008a56d <+317>:\txor    eax,eax\n   0x000000000008a56f <+319>:\tmov    QWORD PTR [rbp-0x38],rbx\n   0x000000000008a573 <+323>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a577 <+327>:\tjbe    0x8a77b <main+843>\n   0x000000000008a57d <+333>:\tcmp    rax,rcx\n   0x000000000008a580 <+336>:\tjge    0x8a68e <main+606>\n   0x000000000008a586 <+342>:\tmov    rsi,QWORD PTR [rdx+rax*8+0x17]\n   0x000000000008a58b <+347>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a58f <+351>:\tadd    rax,0x1\n   0x000000000008a593 <+355>:\tmov    QWORD PTR [rbp-0x40],rax\n   0x000000000008a597 <+359>:\tmov    r10d,0x1\n   0x000000000008a59d <+365>:\tcall   0x84038 <stub _iso_stub_AllocateContextStub>\n   0x000000000008a5a2 <+370>:\tmov    rbx,QWORD PTR [rbp-0x38]\n   0x000000000008a5a6 <+374>:\tmov    QWORD PTR [rbp-0x58],rax\n   0x000000000008a5aa <+378>:\tmov    QWORD PTR [rax+0xf],rbx\n   0x000000000008a5ae <+382>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a5b2 <+386>:\tmov    QWORD PTR [rax+0x17],rcx\n   0x000000000008a5b6 <+390>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008a5bd <+397>:\tmov    esi,0x4\n   0x000000000008a5c2 <+402>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a5c7 <+407>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a5cb <+411>:\tsar    rcx,1\n   0x000000000008a5ce <+414>:\tmov    QWORD PTR [rbp-0x70],rcx\n   0x000000000008a5d2 <+418>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a5d6 <+422>:\tmov    QWORD PTR [rbp-0x68],rdx\n   0x000000000008a5da <+426>:\txor    eax,eax\n   0x000000000008a5dc <+428>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a5e0 <+432>:\tjbe    0x8a787 <main+855>\n   0x000000000008a5e6 <+438>:\tcmp    rax,rcx\n   0x000000000008a5e9 <+441>:\tjge    0x8a600 <main+464>\n   0x000000000008a5ef <+447>:\tmov    rbx,rax\n   0x000000000008a5f2 <+450>:\tadd    rbx,rbx\n   0x000000000008a5f5 <+453>:\tmov    QWORD PTR [rdx+rax*8+0x17],rbx\n   0x000000000008a5fa <+458>:\tadd    rax,0x1\n   0x000000000008a5fe <+462>:\tjmp    0x8a5dc <main+428>\n   0x000000000008a600 <+464>:\tmov    rbx,QWORD PTR [rbp-0x58]\n   0x000000000008a604 <+468>:\txor    eax,eax\n   0x000000000008a606 <+470>:\tmov    QWORD PTR [rbp-0x58],rbx\n   0x000000000008a60a <+474>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a60e <+478>:\tjbe    0x8a793 <main+867>\n   0x000000000008a614 <+484>:\tcmp    rax,rcx\n   0x000000000008a617 <+487>:\tjge    0x8a679 <main+585>\n   0x000000000008a61d <+493>:\tmov    rsi,QWORD PTR [rdx+rax*8+0x17]\n   0x000000000008a622 <+498>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a626 <+502>:\tadd    rax,0x1\n   0x000000000008a62a <+506>:\tmov    QWORD PTR [rbp-0x60],rax\n   0x000000000008a62e <+510>:\tmov    r10d,0x1\n   0x000000000008a634 <+516>:\tcall   0x84038 <stub _iso_stub_AllocateContextStub>\n   0x000000000008a639 <+521>:\tmov    rcx,rax\n   0x000000000008a63c <+524>:\tmov    rax,QWORD PTR [rbp-0x58]\n   0x000000000008a640 <+528>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008a644 <+532>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008a648 <+536>:\tmov    QWORD PTR [rcx+0x17],rdx\n   0x000000000008a64c <+540>:\tmov    rdx,rcx\n   0x000000000008a64f <+543>:\tmov    rbx,QWORD PTR [r15+0x17f7]\n   0x000000000008a656 <+550>:\tcall   0x84364 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a65b <+555>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a65f <+559>:\tmov    rsi,rax\n   0x000000000008a662 <+562>:\tcall   0x8a98c <ListBase._filter>\n   0x000000000008a667 <+567>:\tmov    rbx,QWORD PTR [rbp-0x58]\n   0x000000000008a66b <+571>:\tmov    rax,QWORD PTR [rbp-0x60]\n   0x000000000008a66f <+575>:\tmov    rdx,QWORD PTR [rbp-0x68]\n   0x000000000008a673 <+579>:\tmov    rcx,QWORD PTR [rbp-0x70]\n   0x000000000008a677 <+583>:\tjmp    0x8a606 <main+470>\n   0x000000000008a679 <+585>:\tmov    rbx,QWORD PTR [rbp-0x38]\n   0x000000000008a67d <+589>:\tmov    rax,QWORD PTR [rbp-0x40]\n   0x000000000008a681 <+593>:\tmov    rdx,QWORD PTR [rbp-0x48]\n   0x000000000008a685 <+597>:\tmov    rcx,QWORD PTR [rbp-0x50]\n   0x000000000008a689 <+601>:\tjmp    0x8a56f <main+319>\n   0x000000000008a68e <+606>:\tmov    rbx,QWORD PTR [rbp-0x20]\n   0x000000000008a692 <+610>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a696 <+614>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a69a <+618>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x000000000008a69e <+622>:\tjmp    0x8a4d8 <main+168>\n   0x000000000008a6a3 <+627>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a6a7 <+631>:\tmov    r10d,0x6\n   0x000000000008a6ad <+637>:\tcall   0x84f48 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a6b2 <+642>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a6b6 <+646>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a6bd <+653>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a6c1 <+657>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a6c5 <+661>:\tmov    rsi,QWORD PTR [r15+0x1807]\n   0x000000000008a6cc <+668>:\tcall   0x8a83c <ListBase.reduce>\n   0x000000000008a6d1 <+673>:\ttest   al,0x1\n   0x000000000008a6d3 <+675>:\tmov    ecx,0x3c\n   0x000000000008a6d8 <+680>:\tje     0x8a6e0 <main+688>\n   0x000000000008a6da <+682>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a6dd <+685>:\tshr    ecx,0xc\n   0x000000000008a6e0 <+688>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a6e4 <+692>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a6e8 <+696>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008a6ef <+703>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008a6f3 <+707>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a6f7 <+711>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a6fb <+715>:\ttest   al,0x1\n   0x000000000008a6fd <+717>:\tje     0x8a716 <main+742>\n   0x000000000008a6ff <+719>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a703 <+723>:\tshr    r11d,0x2\n   0x000000000008a707 <+727>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a70b <+731>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a70f <+735>:\tje     0x8a716 <main+742>\n   0x000000000008a711 <+737>:\tcall   0x83560 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a716 <+742>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a71a <+746>:\tmov    r11,QWORD PTR [r15+0xbf]\n   0x000000000008a721 <+753>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a725 <+757>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a729 <+761>:\tcall   0x587d0 <_StringBase._interpolate>\n   0x000000000008a72e <+766>:\tmov    rdi,rax\n   0x000000000008a731 <+769>:\tcall   0x8a7a0 <print>\n   0x000000000008a736 <+774>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a73a <+778>:\tmov    rsp,rbp\n   0x000000000008a73d <+781>:\tpop    rbp\n   0x000000000008a73e <+782>:\tret\n   0x000000000008a73f <+783>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a746 <+790>:\tjmp    0x8a442 <main+18>\n   0x000000000008a74b <+795>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a752 <+802>:\tjmp    0x8a46e <main+62>\n   0x000000000008a757 <+807>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a75e <+814>:\tjmp    0x8a4b8 <main+136>\n   0x000000000008a763 <+819>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a76a <+826>:\tjmp    0x8a4e6 <main+182>\n   0x000000000008a76f <+831>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a776 <+838>:\tjmp    0x8a54f <main+287>\n   0x000000000008a77b <+843>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a782 <+850>:\tjmp    0x8a57d <main+333>\n   0x000000000008a787 <+855>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a78e <+862>:\tjmp    0x8a5e6 <main+438>\n   0x000000000008a793 <+867>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a79a <+874>:\tjmp    0x8a614 <main+484>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "meissel-mertens-constant.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  const double euler = 0.57721566490153286;\n\n  double m = 0.0;\n  for (var x = 2; x <= 1e8; x++)\n    if (isPrime(x)) m += log(1 - (1 / x)) + (1 / x);\n\n  print('MM = ${euler + m}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a350 <+0>:\tpush   rbp\n   0x000000000008a351 <+1>:\tmov    rbp,rsp\n   0x000000000008a354 <+4>:\tsub    rsp,0x40\n   0x000000000008a358 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a35c <+12>:\tjbe    0x8a582 <main+562>\n   0x000000000008a362 <+18>:\txorps  xmm1,xmm1\n   0x000000000008a365 <+21>:\tmov    ecx,0x2\n   0x000000000008a36a <+26>:\tmovsd  xmm0,QWORD PTR [r15+0x17f7]\n   0x000000000008a373 <+35>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a377 <+39>:\tmovsd  QWORD PTR [rbp-0x28],xmm1\n   0x000000000008a37c <+44>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a380 <+48>:\tjbe    0x8a58e <main+574>\n   0x000000000008a386 <+54>:\txorps  xmm2,xmm2\n   0x000000000008a389 <+57>:\tcvtsi2sd xmm2,rcx\n   0x000000000008a38e <+62>:\tmovsd  QWORD PTR [rbp-0x20],xmm2\n   0x000000000008a393 <+67>:\tcomisd xmm2,xmm0\n   0x000000000008a397 <+71>:\tjp     0x8a511 <main+449>\n   0x000000000008a39d <+77>:\tja     0x8a511 <main+449>\n   0x000000000008a3a3 <+83>:\tcmp    rcx,0x1\n   0x000000000008a3a7 <+87>:\tjle    0x8a490 <main+320>\n   0x000000000008a3ad <+93>:\tcmp    rcx,0x2\n   0x000000000008a3b1 <+97>:\tjne    0x8a3bf <main+111>\n   0x000000000008a3b7 <+103>:\tmovaps xmm0,xmm2\n   0x000000000008a3ba <+106>:\tjmp    0x8a49f <main+335>\n   0x000000000008a3bf <+111>:\tmov    rax,rcx\n   0x000000000008a3c2 <+114>:\tadd    rax,rax\n   0x000000000008a3c5 <+117>:\tjno    0x8a3d4 <main+132>\n   0x000000000008a3cb <+123>:\tcall   0x85144 <stub _iso_stub_AllocateMintSharedWithFPURegsStub>\n   0x000000000008a3d0 <+128>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a3d4 <+132>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a3d8 <+136>:\tmov    edx,0x2\n   0x000000000008a3dd <+141>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a3e1 <+145>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3e5 <+149>:\tjbe    0x8a59a <main+586>\n   0x000000000008a3eb <+155>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a3ef <+159>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a3f4 <+164>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a3f8 <+168>:\tcall   0x827d4 <new _Double.fromInteger>\n   0x000000000008a3fd <+173>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008a402 <+178>:\tsqrtsd xmm1,xmm0\n   0x000000000008a406 <+182>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a40a <+186>:\txorps  xmm0,xmm0\n   0x000000000008a40d <+189>:\tcvtsi2sd xmm0,rcx\n   0x000000000008a412 <+194>:\tcomisd xmm0,xmm1\n   0x000000000008a416 <+198>:\tjp     0x8a49a <main+330>\n   0x000000000008a41c <+204>:\tja     0x8a49a <main+330>\n   0x000000000008a422 <+210>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a426 <+214>:\ttest   rcx,rcx\n   0x000000000008a429 <+217>:\tje     0x8a5a6 <main+598>\n   0x000000000008a42f <+223>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a433 <+227>:\tje     0x8a5ba <main+618>\n   0x000000000008a439 <+233>:\tmovsxd rdx,eax\n   0x000000000008a43c <+236>:\tcmp    rdx,rax\n   0x000000000008a43f <+239>:\tjne    0x8a451 <main+257>\n   0x000000000008a441 <+241>:\tmovsxd rdx,ecx\n   0x000000000008a444 <+244>:\tcmp    rdx,rcx\n   0x000000000008a447 <+247>:\tjne    0x8a451 <main+257>\n   0x000000000008a449 <+249>:\tcdq\n   0x000000000008a44a <+250>:\tidiv   ecx\n   0x000000000008a44c <+252>:\tmovsxd rdx,edx\n   0x000000000008a44f <+255>:\tjmp    0x8a456 <main+262>\n   0x000000000008a451 <+257>:\tcqo\n   0x000000000008a453 <+259>:\tidiv   rcx\n   0x000000000008a456 <+262>:\ttest   rdx,rdx\n   0x000000000008a459 <+265>:\tjl     0x8a5c1 <main+625>\n   0x000000000008a45f <+271>:\tcmp    rdx,0x0\n   0x000000000008a463 <+275>:\tje     0x8a490 <main+320>\n   0x000000000008a469 <+281>:\tadd    rcx,0x1\n   0x000000000008a46d <+285>:\tmov    rdx,rcx\n   0x000000000008a470 <+288>:\tmovsd  xmm1,QWORD PTR [rbp-0x28]\n   0x000000000008a475 <+293>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a479 <+297>:\tmovsd  xmm2,QWORD PTR [rbp-0x20]\n   0x000000000008a47e <+302>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a482 <+306>:\tmovsd  xmm0,QWORD PTR [r15+0x17f7]\n   0x000000000008a48b <+315>:\tjmp    0x8a3dd <main+141>\n   0x000000000008a490 <+320>:\tmovsd  xmm1,QWORD PTR [rbp-0x28]\n   0x000000000008a495 <+325>:\tjmp    0x8a501 <main+433>\n   0x000000000008a49a <+330>:\tmovsd  xmm0,QWORD PTR [rbp-0x20]\n   0x000000000008a49f <+335>:\tmovsd  xmm1,QWORD PTR [r15+0x17ff]\n   0x000000000008a4a8 <+344>:\tdivsd  xmm1,xmm0\n   0x000000000008a4ac <+348>:\tmovsd  QWORD PTR [rbp-0x30],xmm1\n   0x000000000008a4b1 <+353>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x000000000008a4ba <+362>:\tsubsd  xmm0,xmm1\n   0x000000000008a4be <+366>:\tpush   rbp\n   0x000000000008a4bf <+367>:\tmov    rbp,rsp\n   0x000000000008a4c2 <+370>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008a4c6 <+374>:\tmov    rax,QWORD PTR [r14+0x5d0]\n   0x000000000008a4cd <+381>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008a4d4 <+388>:\tcall   rax\n   0x000000000008a4d6 <+390>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008a4e1 <+401>:\tlea    rsp,[rbp+0x0]\n   0x000000000008a4e5 <+405>:\tmov    rsp,rbp\n   0x000000000008a4e8 <+408>:\tpop    rbp\n   0x000000000008a4e9 <+409>:\tmovaps xmm1,xmm0\n   0x000000000008a4ec <+412>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x000000000008a4f1 <+417>:\taddsd  xmm1,xmm0\n   0x000000000008a4f5 <+421>:\tmovsd  xmm0,QWORD PTR [rbp-0x28]\n   0x000000000008a4fa <+426>:\taddsd  xmm0,xmm1\n   0x000000000008a4fe <+430>:\tmovaps xmm1,xmm0\n   0x000000000008a501 <+433>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a505 <+437>:\tadd    rax,0x1\n   0x000000000008a509 <+441>:\tmov    rcx,rax\n   0x000000000008a50c <+444>:\tjmp    0x8a36a <main+26>\n   0x000000000008a511 <+449>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a515 <+453>:\tmov    r10d,0x4\n   0x000000000008a51b <+459>:\tcall   0x84e4c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a520 <+464>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a527 <+471>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a52b <+475>:\tmovsd  xmm0,QWORD PTR [r15+0x180f]\n   0x000000000008a534 <+484>:\tmovsd  xmm1,QWORD PTR [rbp-0x28]\n   0x000000000008a539 <+489>:\taddsd  xmm1,xmm0\n   0x000000000008a53d <+493>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008a541 <+497>:\tadd    rcx,0x10\n   0x000000000008a545 <+501>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008a549 <+505>:\tjae    0x8a5d6 <main+646>\n   0x000000000008a54f <+511>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008a553 <+515>:\tsub    rcx,0xf\n   0x000000000008a557 <+519>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008a55f <+527>:\tmovsd  QWORD PTR [rcx+0x7],xmm1\n   0x000000000008a564 <+532>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a568 <+536>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a56c <+540>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008a571 <+545>:\tmov    rdi,rax\n   0x000000000008a574 <+548>:\tcall   0x8a5f8 <print>\n   0x000000000008a579 <+553>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a57d <+557>:\tmov    rsp,rbp\n   0x000000000008a580 <+560>:\tpop    rbp\n   0x000000000008a581 <+561>:\tret\n   0x000000000008a582 <+562>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a589 <+569>:\tjmp    0x8a362 <main+18>\n   0x000000000008a58e <+574>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a595 <+581>:\tjmp    0x8a386 <main+54>\n   0x000000000008a59a <+586>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a5a1 <+593>:\tjmp    0x8a3eb <main+155>\n   0x000000000008a5a6 <+598>:\tpush   rcx\n   0x000000000008a5a7 <+599>:\tpush   rax\n   0x000000000008a5a8 <+600>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a5af <+607>:\txor    r10d,r10d\n   0x000000000008a5b2 <+610>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a5b9 <+617>:\tint3\n   0x000000000008a5ba <+618>:\txor    edx,edx\n   0x000000000008a5bc <+620>:\tjmp    0x8a45f <main+271>\n   0x000000000008a5c1 <+625>:\ttest   rcx,rcx\n   0x000000000008a5c4 <+628>:\tjl     0x8a5ce <main+638>\n   0x000000000008a5c6 <+630>:\tadd    rdx,rcx\n   0x000000000008a5c9 <+633>:\tjmp    0x8a45f <main+271>\n   0x000000000008a5ce <+638>:\tsub    rdx,rcx\n   0x000000000008a5d1 <+641>:\tjmp    0x8a45f <main+271>\n   0x000000000008a5d6 <+646>:\tsub    rsp,0x10\n   0x000000000008a5da <+650>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x000000000008a5de <+654>:\tpush   rax\n   0x000000000008a5df <+655>:\tcall   0x84dcc <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a5e4 <+660>:\tmov    rcx,rax\n   0x000000000008a5e7 <+663>:\tpop    rax\n   0x000000000008a5e8 <+664>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x000000000008a5ec <+668>:\tadd    rsp,0x10\n   0x000000000008a5f0 <+672>:\tjmp    0x8a55f <main+527>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "motzkin-numbers.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var M = List<int>.filled(42, 1);\n  M[0] = 1;\n  M[1] = 1;\n  print('1');\n  print('1');\n  for (int n = 2; n < 42; ++n) {\n    M[n] = M[n - 1];\n    for (int i = 0; i <= n - 2; ++i) {\n      M[n] += M[i] * M[n - 2 - i];\n    }\n    if (isPrime(M[n])) {\n      print('${M[n]}    is a prime');\n    } else {\n      print('${M[n]}');\n    }\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a294 <+0>:\tpush   rbp\n   0x000000000008a295 <+1>:\tmov    rbp,rsp\n   0x000000000008a298 <+4>:\tsub    rsp,0x38\n   0x000000000008a29c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2a0 <+12>:\tjbe    0x8a599 <main+773>\n   0x000000000008a2a6 <+18>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x000000000008a2ad <+25>:\tmov    r10d,0x54\n   0x000000000008a2b3 <+31>:\tcall   0x84dac <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2b8 <+36>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a2bc <+40>:\txor    ecx,ecx\n   0x000000000008a2be <+42>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2c2 <+46>:\tjbe    0x8a5a5 <main+785>\n   0x000000000008a2c8 <+52>:\tcmp    rcx,0x2a\n   0x000000000008a2cc <+56>:\tjge    0x8a2e1 <main+77>\n   0x000000000008a2d2 <+62>:\tmov    QWORD PTR [rax+rcx*8+0x17],0x2\n   0x000000000008a2db <+71>:\tadd    rcx,0x1\n   0x000000000008a2df <+75>:\tjmp    0x8a2be <main+42>\n   0x000000000008a2e1 <+77>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a2e9 <+85>:\tmov    QWORD PTR [rax+0x1f],0x2\n   0x000000000008a2f1 <+93>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a2f8 <+100>:\tcall   0x8a60c <printToConsole>\n   0x000000000008a2fd <+105>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a304 <+112>:\tcall   0x8a60c <printToConsole>\n   0x000000000008a309 <+117>:\tmov    esi,0x2\n   0x000000000008a30e <+122>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a312 <+126>:\tmov    QWORD PTR [rbp-0x20],rsi\n   0x000000000008a316 <+130>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a31a <+134>:\tjbe    0x8a5b1 <main+797>\n   0x000000000008a320 <+140>:\tcmp    rsi,0x2a\n   0x000000000008a324 <+144>:\tjge    0x8a590 <main+764>\n   0x000000000008a32a <+150>:\tmov    rax,rsi\n   0x000000000008a32d <+153>:\tsub    rax,0x1\n   0x000000000008a331 <+157>:\tmov    rbx,QWORD PTR [rcx+rax*8+0x17]\n   0x000000000008a336 <+162>:\tmov    rdx,rcx\n   0x000000000008a339 <+165>:\tmov    rax,rbx\n   0x000000000008a33c <+168>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008a341 <+173>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a345 <+177>:\ttest   al,0x1\n   0x000000000008a347 <+179>:\tje     0x8a360 <main+204>\n   0x000000000008a349 <+181>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a34d <+185>:\tshr    r11d,0x2\n   0x000000000008a351 <+189>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a355 <+193>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a359 <+197>:\tje     0x8a360 <main+204>\n   0x000000000008a35b <+199>:\tcall   0x833c4 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a360 <+204>:\tmov    rdi,rsi\n   0x000000000008a363 <+207>:\tsub    rdi,0x2\n   0x000000000008a367 <+211>:\tsar    rbx,1\n   0x000000000008a36a <+214>:\tjae    0x8a371 <main+221>\n   0x000000000008a36c <+216>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a371 <+221>:\tmov    rdx,rbx\n   0x000000000008a374 <+224>:\txor    r8d,r8d\n   0x000000000008a377 <+227>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008a37b <+231>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a37f <+235>:\tjbe    0x8a5bd <main+809>\n   0x000000000008a385 <+241>:\tcmp    r8,rdi\n   0x000000000008a388 <+244>:\tjg     0x8a415 <main+385>\n   0x000000000008a38e <+250>:\tmov    r9,QWORD PTR [rcx+r8*8+0x17]\n   0x000000000008a393 <+255>:\tmov    r10,rdi\n   0x000000000008a396 <+258>:\tsub    r10,r8\n   0x000000000008a399 <+261>:\tmov    rbx,r10\n   0x000000000008a39c <+264>:\tmov    eax,0x2a\n   0x000000000008a3a1 <+269>:\tcmp    rbx,rax\n   0x000000000008a3a4 <+272>:\tjae    0x8a5c9 <main+821>\n   0x000000000008a3aa <+278>:\tmov    rax,QWORD PTR [rcx+r10*8+0x17]\n   0x000000000008a3af <+283>:\tsar    r9,1\n   0x000000000008a3b2 <+286>:\tjae    0x8a3b9 <main+293>\n   0x000000000008a3b4 <+288>:\tmov    r9,QWORD PTR [r9+r9*1+0x8]\n   0x000000000008a3b9 <+293>:\tsar    rax,1\n   0x000000000008a3bc <+296>:\tjae    0x8a3c3 <main+303>\n   0x000000000008a3be <+298>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008a3c3 <+303>:\timul   r9,rax\n   0x000000000008a3c7 <+307>:\tmov    r10,rdx\n   0x000000000008a3ca <+310>:\tadd    r10,r9\n   0x000000000008a3cd <+313>:\tmov    rax,r10\n   0x000000000008a3d0 <+316>:\tadd    rax,rax\n   0x000000000008a3d3 <+319>:\tjno    0x8a3e2 <main+334>\n   0x000000000008a3d9 <+325>:\tcall   0x85030 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a3de <+330>:\tmov    QWORD PTR [rax+0x7],r10\n   0x000000000008a3e2 <+334>:\tmov    rdx,rcx\n   0x000000000008a3e5 <+337>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008a3ea <+342>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a3ee <+346>:\ttest   al,0x1\n   0x000000000008a3f0 <+348>:\tje     0x8a409 <main+373>\n   0x000000000008a3f2 <+350>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a3f6 <+354>:\tshr    r11d,0x2\n   0x000000000008a3fa <+358>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a3fe <+362>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a402 <+366>:\tje     0x8a409 <main+373>\n   0x000000000008a404 <+368>:\tcall   0x833c4 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a409 <+373>:\tadd    r8,0x1\n   0x000000000008a40d <+377>:\tmov    rdx,r10\n   0x000000000008a410 <+380>:\tjmp    0x8a377 <main+227>\n   0x000000000008a415 <+385>:\tcmp    rdx,0x1\n   0x000000000008a419 <+389>:\tjg     0x8a42a <main+406>\n   0x000000000008a41f <+395>:\tmov    rdx,rsi\n   0x000000000008a422 <+398>:\tmov    rax,rcx\n   0x000000000008a425 <+401>:\tjmp    0x8a505 <main+625>\n   0x000000000008a42a <+406>:\tcmp    rdx,0x2\n   0x000000000008a42e <+410>:\tjne    0x8a43f <main+427>\n   0x000000000008a434 <+416>:\tmov    rax,rcx\n   0x000000000008a437 <+419>:\tmov    rcx,rsi\n   0x000000000008a43a <+422>:\tjmp    0x8a541 <main+685>\n   0x000000000008a43f <+427>:\tmov    edi,0x2\n   0x000000000008a444 <+432>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x000000000008a448 <+436>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a44c <+440>:\tjbe    0x8a5ce <main+826>\n   0x000000000008a452 <+446>:\tmov    rax,rdx\n   0x000000000008a455 <+449>:\tadd    rax,rax\n   0x000000000008a458 <+452>:\tjno    0x8a467 <main+467>\n   0x000000000008a45e <+458>:\tcall   0x85030 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a463 <+463>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a467 <+467>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a46b <+471>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a470 <+476>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a474 <+480>:\tcall   0x82a20 <new _Double.fromInteger>\n   0x000000000008a479 <+485>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008a47e <+490>:\tsqrtsd xmm1,xmm0\n   0x000000000008a482 <+494>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a486 <+498>:\txorps  xmm0,xmm0\n   0x000000000008a489 <+501>:\tcvtsi2sd xmm0,rcx\n   0x000000000008a48e <+506>:\tcomisd xmm0,xmm1\n   0x000000000008a492 <+510>:\tjp     0x8a539 <main+677>\n   0x000000000008a498 <+516>:\tja     0x8a539 <main+677>\n   0x000000000008a49e <+522>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a4a2 <+526>:\ttest   rcx,rcx\n   0x000000000008a4a5 <+529>:\tje     0x8a5da <main+838>\n   0x000000000008a4ab <+535>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a4af <+539>:\tje     0x8a5ee <main+858>\n   0x000000000008a4b5 <+545>:\tmovsxd rdx,eax\n   0x000000000008a4b8 <+548>:\tcmp    rdx,rax\n   0x000000000008a4bb <+551>:\tjne    0x8a4cd <main+569>\n   0x000000000008a4bd <+553>:\tmovsxd rdx,ecx\n   0x000000000008a4c0 <+556>:\tcmp    rdx,rcx\n   0x000000000008a4c3 <+559>:\tjne    0x8a4cd <main+569>\n   0x000000000008a4c5 <+561>:\tcdq\n   0x000000000008a4c6 <+562>:\tidiv   ecx\n   0x000000000008a4c8 <+564>:\tmovsxd rdx,edx\n   0x000000000008a4cb <+567>:\tjmp    0x8a4d2 <main+574>\n   0x000000000008a4cd <+569>:\tcqo\n   0x000000000008a4cf <+571>:\tidiv   rcx\n   0x000000000008a4d2 <+574>:\ttest   rdx,rdx\n   0x000000000008a4d5 <+577>:\tjl     0x8a5f5 <main+865>\n   0x000000000008a4db <+583>:\tcmp    rdx,0x0\n   0x000000000008a4df <+587>:\tje     0x8a4fd <main+617>\n   0x000000000008a4e5 <+593>:\tadd    rcx,0x1\n   0x000000000008a4e9 <+597>:\tmov    rdi,rcx\n   0x000000000008a4ec <+600>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a4f0 <+604>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a4f4 <+608>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008a4f8 <+612>:\tjmp    0x8a444 <main+432>\n   0x000000000008a4fd <+617>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a501 <+621>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a505 <+625>:\tmov    rcx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a50a <+630>:\ttest   cl,0x1\n   0x000000000008a50d <+633>:\tmov    ebx,0x3c\n   0x000000000008a512 <+638>:\tje     0x8a51a <main+646>\n   0x000000000008a514 <+640>:\tmov    ebx,DWORD PTR [rcx-0x1]\n   0x000000000008a517 <+643>:\tshr    ebx,0xc\n   0x000000000008a51a <+646>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a51e <+650>:\tmov    rcx,rbx\n   0x000000000008a521 <+653>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a525 <+657>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008a52c <+664>:\tmov    rdi,rax\n   0x000000000008a52f <+667>:\tcall   0x8a60c <printToConsole>\n   0x000000000008a534 <+672>:\tjmp    0x8a580 <main+748>\n   0x000000000008a539 <+677>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a53d <+681>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a541 <+685>:\tmov    rdx,QWORD PTR [rax+rcx*8+0x17]\n   0x000000000008a546 <+690>:\tmov    QWORD PTR [rbp-0x28],rdx\n   0x000000000008a54a <+694>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a54e <+698>:\tmov    r10d,0x4\n   0x000000000008a554 <+704>:\tcall   0x84dac <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a559 <+709>:\tmov    rcx,rax\n   0x000000000008a55c <+712>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a560 <+716>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a564 <+720>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a56b <+727>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a56f <+731>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a573 <+735>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a578 <+740>:\tmov    rdi,rax\n   0x000000000008a57b <+743>:\tcall   0x8a60c <printToConsole>\n   0x000000000008a580 <+748>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a584 <+752>:\tadd    rcx,0x1\n   0x000000000008a588 <+756>:\tmov    rsi,rcx\n   0x000000000008a58b <+759>:\tjmp    0x8a30e <main+122>\n   0x000000000008a590 <+764>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a594 <+768>:\tmov    rsp,rbp\n   0x000000000008a597 <+771>:\tpop    rbp\n   0x000000000008a598 <+772>:\tret\n   0x000000000008a599 <+773>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a5a0 <+780>:\tjmp    0x8a2a6 <main+18>\n   0x000000000008a5a5 <+785>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a5ac <+792>:\tjmp    0x8a2c8 <main+52>\n   0x000000000008a5b1 <+797>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a5b8 <+804>:\tjmp    0x8a320 <main+140>\n   0x000000000008a5bd <+809>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a5c4 <+816>:\tjmp    0x8a385 <main+241>\n   0x000000000008a5c9 <+821>:\tcall   0x852f0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a5ce <+826>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a5d5 <+833>:\tjmp    0x8a452 <main+446>\n   0x000000000008a5da <+838>:\tpush   rcx\n   0x000000000008a5db <+839>:\tpush   rax\n   0x000000000008a5dc <+840>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a5e3 <+847>:\txor    r10d,r10d\n   0x000000000008a5e6 <+850>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a5ed <+857>:\tint3\n   0x000000000008a5ee <+858>:\txor    edx,edx\n   0x000000000008a5f0 <+860>:\tjmp    0x8a4db <main+583>\n   0x000000000008a5f5 <+865>:\ttest   rcx,rcx\n   0x000000000008a5f8 <+868>:\tjl     0x8a602 <main+878>\n   0x000000000008a5fa <+870>:\tadd    rdx,rcx\n   0x000000000008a5fd <+873>:\tjmp    0x8a4db <main+583>\n   0x000000000008a602 <+878>:\tsub    rdx,rcx\n   0x000000000008a605 <+881>:\tjmp    0x8a4db <main+583>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "mutual-recursion.dart",
  "functions": [
    {
      "name": "M",
      "source": "int M(int n) => n==0?1:n-F(M(n-1));",
      "assembly": "Dump of assembler code for function M:\n   0x000000000008a450 <+0>:\tpush   rbp\n   0x000000000008a451 <+1>:\tmov    rbp,rsp\n   0x000000000008a454 <+4>:\tsub    rsp,0x8\n   0x000000000008a458 <+8>:\tmov    rax,rdi\n   0x000000000008a45b <+11>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a45f <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a463 <+19>:\tjbe    0x8a4a0 <M+80>\n   0x000000000008a469 <+25>:\tcmp    rax,0x0\n   0x000000000008a46d <+29>:\tjne    0x8a47d <M+45>\n   0x000000000008a473 <+35>:\tmov    eax,0x1\n   0x000000000008a478 <+40>:\tjmp    0x8a49b <M+75>\n   0x000000000008a47d <+45>:\tmov    rdi,rax\n   0x000000000008a480 <+48>:\tsub    rdi,0x1\n   0x000000000008a484 <+52>:\tcall   0x8a450 <M>\n   0x000000000008a489 <+57>:\tmov    rdi,rax\n   0x000000000008a48c <+60>:\tcall   0x8a3f8 <F>\n   0x000000000008a491 <+65>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a495 <+69>:\tsub    rcx,rax\n   0x000000000008a498 <+72>:\tmov    rax,rcx\n   0x000000000008a49b <+75>:\tmov    rsp,rbp\n   0x000000000008a49e <+78>:\tpop    rbp\n   0x000000000008a49f <+79>:\tret\n   0x000000000008a4a0 <+80>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4a7 <+87>:\tjmp    0x8a469 <M+25>\nEnd of assembler dump.\n"
    },
    {
      "name": "F",
      "source": "int F(int n) => n==0?0:n-M(F(n-1));",
      "assembly": "Dump of assembler code for function F:\n   0x000000000008a3f8 <+0>:\tpush   rbp\n   0x000000000008a3f9 <+1>:\tmov    rbp,rsp\n   0x000000000008a3fc <+4>:\tsub    rsp,0x8\n   0x000000000008a400 <+8>:\tmov    rax,rdi\n   0x000000000008a403 <+11>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a407 <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a40b <+19>:\tjbe    0x8a445 <F+77>\n   0x000000000008a411 <+25>:\tcmp    rax,0x0\n   0x000000000008a415 <+29>:\tjne    0x8a422 <F+42>\n   0x000000000008a41b <+35>:\txor    eax,eax\n   0x000000000008a41d <+37>:\tjmp    0x8a440 <F+72>\n   0x000000000008a422 <+42>:\tmov    rdi,rax\n   0x000000000008a425 <+45>:\tsub    rdi,0x1\n   0x000000000008a429 <+49>:\tcall   0x8a3f8 <F>\n   0x000000000008a42e <+54>:\tmov    rdi,rax\n   0x000000000008a431 <+57>:\tcall   0x8a450 <M>\n   0x000000000008a436 <+62>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a43a <+66>:\tsub    rcx,rax\n   0x000000000008a43d <+69>:\tmov    rax,rcx\n   0x000000000008a440 <+72>:\tmov    rsp,rbp\n   0x000000000008a443 <+75>:\tpop    rbp\n   0x000000000008a444 <+76>:\tret\n   0x000000000008a445 <+77>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a44c <+84>:\tjmp    0x8a411 <F+25>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "main() {\n  String f=\"\",m=\"\";\n  for(int i=0;i<20;i++) {\n    m+=\"${M(i)} \";\n    f+=\"${F(i)} \";\n  }\n  print(\"M: $m\");\n  print(\"F: $f\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x38\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a344 <main+496>\n   0x000000000008a166 <+18>:\tmov    rdx,QWORD PTR [r15+0xcf]\n   0x000000000008a16d <+25>:\tmov    rcx,QWORD PTR [r15+0xcf]\n   0x000000000008a174 <+32>:\txor    eax,eax\n   0x000000000008a176 <+34>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a17a <+38>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a17e <+42>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a182 <+46>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a186 <+50>:\tjbe    0x8a350 <main+508>\n   0x000000000008a18c <+56>:\tcmp    rax,0x14\n   0x000000000008a190 <+60>:\tjge    0x8a2cf <main+379>\n   0x000000000008a196 <+66>:\tcmp    rax,0x0\n   0x000000000008a19a <+70>:\tjne    0x8a1ad <main+89>\n   0x000000000008a1a0 <+76>:\tmov    rcx,rax\n   0x000000000008a1a3 <+79>:\tmov    edx,0x1\n   0x000000000008a1a8 <+84>:\tjmp    0x8a1cf <main+123>\n   0x000000000008a1ad <+89>:\tmov    rdi,rax\n   0x000000000008a1b0 <+92>:\tsub    rdi,0x1\n   0x000000000008a1b4 <+96>:\tcall   0x8a450 <M>\n   0x000000000008a1b9 <+101>:\tmov    rdi,rax\n   0x000000000008a1bc <+104>:\tcall   0x8a3f8 <F>\n   0x000000000008a1c1 <+109>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008a1c5 <+113>:\tsub    rbx,rax\n   0x000000000008a1c8 <+116>:\tmov    rdx,rbx\n   0x000000000008a1cb <+119>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a1cf <+123>:\tmov    rax,rdx\n   0x000000000008a1d2 <+126>:\tadd    rax,rax\n   0x000000000008a1d5 <+129>:\tjno    0x8a1e4 <main+144>\n   0x000000000008a1db <+135>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1e0 <+140>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008a1e4 <+144>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1e8 <+148>:\tmov    r10d,0x4\n   0x000000000008a1ee <+154>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a1f2 <+158>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a1f7 <+163>:\tmov    rcx,rax\n   0x000000000008a1fa <+166>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a1fe <+170>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a202 <+174>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x000000000008a209 <+181>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a20d <+185>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a211 <+189>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a216 <+194>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a21a <+198>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a21f <+203>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a223 <+207>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a228 <+212>:\tmov    rcx,rax\n   0x000000000008a22b <+215>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a22f <+219>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008a233 <+223>:\tcmp    rax,0x0\n   0x000000000008a237 <+227>:\tjne    0x8a244 <main+240>\n   0x000000000008a23d <+233>:\txor    ecx,ecx\n   0x000000000008a23f <+235>:\tjmp    0x8a262 <main+270>\n   0x000000000008a244 <+240>:\tmov    rdi,rax\n   0x000000000008a247 <+243>:\tsub    rdi,0x1\n   0x000000000008a24b <+247>:\tcall   0x8a3f8 <F>\n   0x000000000008a250 <+252>:\tmov    rdi,rax\n   0x000000000008a253 <+255>:\tcall   0x8a450 <M>\n   0x000000000008a258 <+260>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008a25c <+264>:\tsub    rbx,rax\n   0x000000000008a25f <+267>:\tmov    rcx,rbx\n   0x000000000008a262 <+270>:\tmov    rax,rcx\n   0x000000000008a265 <+273>:\tadd    rax,rax\n   0x000000000008a268 <+276>:\tjno    0x8a277 <main+291>\n   0x000000000008a26e <+282>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a273 <+287>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a277 <+291>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a27b <+295>:\tmov    r10d,0x4\n   0x000000000008a281 <+301>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a285 <+305>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a28a <+310>:\tmov    rcx,rax\n   0x000000000008a28d <+313>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a291 <+317>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a295 <+321>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x000000000008a29c <+328>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a2a0 <+332>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a2a4 <+336>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a2a9 <+341>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a2ad <+345>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a2b2 <+350>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a2b6 <+354>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a2bb <+359>:\tmov    rdx,rax\n   0x000000000008a2be <+362>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a2c2 <+366>:\tadd    rax,0x1\n   0x000000000008a2c6 <+370>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a2ca <+374>:\tjmp    0x8a176 <main+34>\n   0x000000000008a2cf <+379>:\tmov    rax,rcx\n   0x000000000008a2d2 <+382>:\tmov    rcx,rdx\n   0x000000000008a2d5 <+385>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a2d9 <+389>:\tmov    r10d,0x4\n   0x000000000008a2df <+395>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2e4 <+400>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a2eb <+407>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a2ef <+411>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a2f3 <+415>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a2f7 <+419>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a2fb <+423>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a300 <+428>:\tmov    rdi,rax\n   0x000000000008a303 <+431>:\tcall   0x8a35c <print>\n   0x000000000008a308 <+436>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a30c <+440>:\tmov    r10d,0x4\n   0x000000000008a312 <+446>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a317 <+451>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a31e <+458>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a322 <+462>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a326 <+466>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a32a <+470>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a32e <+474>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a333 <+479>:\tmov    rdi,rax\n   0x000000000008a336 <+482>:\tcall   0x8a35c <print>\n   0x000000000008a33b <+487>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a33f <+491>:\tmov    rsp,rbp\n   0x000000000008a342 <+494>:\tpop    rbp\n   0x000000000008a343 <+495>:\tret\n   0x000000000008a344 <+496>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a34b <+503>:\tjmp    0x8a166 <main+18>\n   0x000000000008a350 <+508>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a357 <+515>:\tjmp    0x8a18c <main+56>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "nth-root.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  int n = 15;\n  num x = pow(-3.14159, 15);\n  print('root($n, $x) = ${nroot(n, x)}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x28\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a467 <main+787>\n   0x000000000008a166 <+18>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a16f <+27>:\tmov    QWORD PTR [rsp],0x1e\n   0x000000000008a177 <+35>:\tcall   0x82af0 <new _Double.fromInteger>\n   0x000000000008a17c <+40>:\tmovsd  xmm1,QWORD PTR [rax+0x7]\n   0x000000000008a181 <+45>:\tmovsd  xmm2,QWORD PTR [r15+0x17f7]\n   0x000000000008a18a <+54>:\txorps  xmm4,xmm4\n   0x000000000008a18d <+57>:\tmovsd  xmm3,QWORD PTR [r15+0x17ff]\n   0x000000000008a196 <+66>:\tcomisd xmm1,xmm4\n   0x000000000008a19a <+70>:\tjp     0x8a1f1 <main+157>\n   0x000000000008a19c <+72>:\tje     0x8a271 <main+285>\n   0x000000000008a1a2 <+78>:\tcomisd xmm1,xmm3\n   0x000000000008a1a6 <+82>:\tje     0x8a1db <main+135>\n   0x000000000008a1a8 <+84>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a1b1 <+93>:\tcomisd xmm1,xmm0\n   0x000000000008a1b5 <+97>:\tje     0x8a1e4 <main+144>\n   0x000000000008a1b7 <+99>:\tmovsd  xmm0,QWORD PTR [r15+0x180f]\n   0x000000000008a1c0 <+108>:\tcomisd xmm1,xmm0\n   0x000000000008a1c4 <+112>:\tjne    0x8a1f1 <main+157>\n   0x000000000008a1ca <+118>:\tmovsd  xmm3,xmm2\n   0x000000000008a1ce <+122>:\tmulsd  xmm3,xmm2\n   0x000000000008a1d2 <+126>:\tmulsd  xmm3,xmm2\n   0x000000000008a1d6 <+130>:\tjmp    0x8a271 <main+285>\n   0x000000000008a1db <+135>:\tmovsd  xmm3,xmm2\n   0x000000000008a1df <+139>:\tjmp    0x8a271 <main+285>\n   0x000000000008a1e4 <+144>:\tmovsd  xmm3,xmm2\n   0x000000000008a1e8 <+148>:\tmulsd  xmm3,xmm2\n   0x000000000008a1ec <+152>:\tjmp    0x8a271 <main+285>\n   0x000000000008a1f1 <+157>:\tcomisd xmm2,xmm3\n   0x000000000008a1f5 <+161>:\tjp     0x8a1ff <main+171>\n   0x000000000008a1f7 <+163>:\tje     0x8a271 <main+285>\n   0x000000000008a1f9 <+165>:\tcomisd xmm1,xmm2\n   0x000000000008a1fd <+169>:\tjnp    0x8a20d <main+185>\n   0x000000000008a1ff <+171>:\tmovsd  xmm3,QWORD PTR [r15+0x1817]\n   0x000000000008a208 <+180>:\tjmp    0x8a271 <main+285>\n   0x000000000008a20d <+185>:\tmovsd  xmm3,QWORD PTR [r15+0x181f]\n   0x000000000008a216 <+194>:\tcomisd xmm2,xmm3\n   0x000000000008a21a <+198>:\tje     0x8a240 <main+236>\n   0x000000000008a21c <+200>:\tmovsd  xmm3,QWORD PTR [r15+0x1827]\n   0x000000000008a225 <+209>:\tcomisd xmm1,xmm3\n   0x000000000008a229 <+213>:\tjne    0x8a240 <main+236>\n   0x000000000008a22b <+215>:\tcomisd xmm2,xmm4\n   0x000000000008a22f <+219>:\tje     0x8a237 <main+227>\n   0x000000000008a231 <+221>:\tsqrtsd xmm3,xmm2\n   0x000000000008a235 <+225>:\tjmp    0x8a271 <main+285>\n   0x000000000008a237 <+227>:\tmovsd  xmm3,xmm4\n   0x000000000008a23b <+231>:\tjmp    0x8a271 <main+285>\n   0x000000000008a240 <+236>:\tpush   rbp\n   0x000000000008a241 <+237>:\tmov    rbp,rsp\n   0x000000000008a244 <+240>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008a248 <+244>:\tmovaps xmm0,xmm2\n   0x000000000008a24b <+247>:\tmov    rax,QWORD PTR [r14+0x558]\n   0x000000000008a252 <+254>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008a259 <+261>:\tcall   rax\n   0x000000000008a25b <+263>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008a266 <+274>:\tmovaps xmm3,xmm0\n   0x000000000008a269 <+277>:\tlea    rsp,[rbp+0x0]\n   0x000000000008a26d <+281>:\tmov    rsp,rbp\n   0x000000000008a270 <+284>:\tpop    rbp\n   0x000000000008a271 <+285>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a275 <+289>:\tmov    r10d,0xc\n   0x000000000008a27b <+295>:\tmovsd  QWORD PTR [rbp-0x10],xmm3\n   0x000000000008a280 <+300>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a285 <+305>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a289 <+309>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008a290 <+316>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a294 <+320>:\tmov    QWORD PTR [rax+0x1f],0x1e\n   0x000000000008a29c <+328>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a2a3 <+335>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a2a7 <+339>:\tmovsd  xmm0,QWORD PTR [rbp-0x10]\n   0x000000000008a2ac <+344>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008a2b0 <+348>:\tadd    rcx,0x10\n   0x000000000008a2b4 <+352>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008a2b8 <+356>:\tjae    0x8a473 <main+799>\n   0x000000000008a2be <+362>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008a2c2 <+366>:\tsub    rcx,0xf\n   0x000000000008a2c6 <+370>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008a2ce <+378>:\tmovsd  QWORD PTR [rcx+0x7],xmm0\n   0x000000000008a2d3 <+383>:\tmov    QWORD PTR [rax+0x2f],rcx\n   0x000000000008a2d7 <+387>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a2de <+394>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000008a2e2 <+398>:\tmovsd  xmm1,QWORD PTR [r15+0x17ff]\n   0x000000000008a2eb <+407>:\tdivsd  xmm1,xmm0\n   0x000000000008a2ef <+411>:\tmovsd  QWORD PTR [rbp-0x18],xmm1\n   0x000000000008a2f4 <+416>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a2f8 <+420>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a2fd <+425>:\tmov    QWORD PTR [rsp],0x1e\n   0x000000000008a305 <+433>:\tcall   0x82af0 <new _Double.fromInteger>\n   0x000000000008a30a <+438>:\tmovsd  xmm2,QWORD PTR [rax+0x7]\n   0x000000000008a30f <+443>:\tmovsd  xmm1,QWORD PTR [rbp-0x18]\n   0x000000000008a314 <+448>:\txorps  xmm4,xmm4\n   0x000000000008a317 <+451>:\tmovsd  xmm3,QWORD PTR [r15+0x17ff]\n   0x000000000008a320 <+460>:\tcomisd xmm1,xmm4\n   0x000000000008a324 <+464>:\tjp     0x8a37b <main+551>\n   0x000000000008a326 <+466>:\tje     0x8a3fb <main+679>\n   0x000000000008a32c <+472>:\tcomisd xmm1,xmm3\n   0x000000000008a330 <+476>:\tje     0x8a365 <main+529>\n   0x000000000008a332 <+478>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a33b <+487>:\tcomisd xmm1,xmm0\n   0x000000000008a33f <+491>:\tje     0x8a36e <main+538>\n   0x000000000008a341 <+493>:\tmovsd  xmm0,QWORD PTR [r15+0x180f]\n   0x000000000008a34a <+502>:\tcomisd xmm1,xmm0\n   0x000000000008a34e <+506>:\tjne    0x8a37b <main+551>\n   0x000000000008a354 <+512>:\tmovsd  xmm3,xmm2\n   0x000000000008a358 <+516>:\tmulsd  xmm3,xmm2\n   0x000000000008a35c <+520>:\tmulsd  xmm3,xmm2\n   0x000000000008a360 <+524>:\tjmp    0x8a3fb <main+679>\n   0x000000000008a365 <+529>:\tmovsd  xmm3,xmm2\n   0x000000000008a369 <+533>:\tjmp    0x8a3fb <main+679>\n   0x000000000008a36e <+538>:\tmovsd  xmm3,xmm2\n   0x000000000008a372 <+542>:\tmulsd  xmm3,xmm2\n   0x000000000008a376 <+546>:\tjmp    0x8a3fb <main+679>\n   0x000000000008a37b <+551>:\tcomisd xmm2,xmm3\n   0x000000000008a37f <+555>:\tjp     0x8a389 <main+565>\n   0x000000000008a381 <+557>:\tje     0x8a3fb <main+679>\n   0x000000000008a383 <+559>:\tcomisd xmm1,xmm2\n   0x000000000008a387 <+563>:\tjnp    0x8a397 <main+579>\n   0x000000000008a389 <+565>:\tmovsd  xmm3,QWORD PTR [r15+0x1817]\n   0x000000000008a392 <+574>:\tjmp    0x8a3fb <main+679>\n   0x000000000008a397 <+579>:\tmovsd  xmm3,QWORD PTR [r15+0x181f]\n   0x000000000008a3a0 <+588>:\tcomisd xmm2,xmm3\n   0x000000000008a3a4 <+592>:\tje     0x8a3ca <main+630>\n   0x000000000008a3a6 <+594>:\tmovsd  xmm3,QWORD PTR [r15+0x1827]\n   0x000000000008a3af <+603>:\tcomisd xmm1,xmm3\n   0x000000000008a3b3 <+607>:\tjne    0x8a3ca <main+630>\n   0x000000000008a3b5 <+609>:\tcomisd xmm2,xmm4\n   0x000000000008a3b9 <+613>:\tje     0x8a3c1 <main+621>\n   0x000000000008a3bb <+615>:\tsqrtsd xmm3,xmm2\n   0x000000000008a3bf <+619>:\tjmp    0x8a3fb <main+679>\n   0x000000000008a3c1 <+621>:\tmovsd  xmm3,xmm4\n   0x000000000008a3c5 <+625>:\tjmp    0x8a3fb <main+679>\n   0x000000000008a3ca <+630>:\tpush   rbp\n   0x000000000008a3cb <+631>:\tmov    rbp,rsp\n   0x000000000008a3ce <+634>:\tand    rsp,0xfffffffffffffff0\n   0x000000000008a3d2 <+638>:\tmovaps xmm0,xmm2\n   0x000000000008a3d5 <+641>:\tmov    rax,QWORD PTR [r14+0x558]\n   0x000000000008a3dc <+648>:\tmov    QWORD PTR [r14+0x748],rax\n   0x000000000008a3e3 <+655>:\tcall   rax\n   0x000000000008a3e5 <+657>:\tmov    QWORD PTR [r14+0x748],0x8\n   0x000000000008a3f0 <+668>:\tmovaps xmm3,xmm0\n   0x000000000008a3f3 <+671>:\tlea    rsp,[rbp+0x0]\n   0x000000000008a3f7 <+675>:\tmov    rsp,rbp\n   0x000000000008a3fa <+678>:\tpop    rbp\n   0x000000000008a3fb <+679>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008a3ff <+683>:\tadd    rax,0x10\n   0x000000000008a403 <+687>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008a407 <+691>:\tjae    0x8a492 <main+830>\n   0x000000000008a40d <+697>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008a411 <+701>:\tsub    rax,0xf\n   0x000000000008a415 <+705>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008a41d <+713>:\tmovsd  QWORD PTR [rax+0x7],xmm3\n   0x000000000008a422 <+718>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a426 <+722>:\tlea    r13,[rdx+0x3f]\n   0x000000000008a42a <+726>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a42e <+730>:\ttest   al,0x1\n   0x000000000008a430 <+732>:\tje     0x8a449 <main+757>\n   0x000000000008a432 <+734>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a436 <+738>:\tshr    r11d,0x2\n   0x000000000008a43a <+742>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a43e <+746>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a442 <+750>:\tje     0x8a449 <main+757>\n   0x000000000008a444 <+752>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a449 <+757>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a44d <+761>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a451 <+765>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a456 <+770>:\tmov    rdi,rax\n   0x000000000008a459 <+773>:\tcall   0x8a4ac <print>\n   0x000000000008a45e <+778>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a462 <+782>:\tmov    rsp,rbp\n   0x000000000008a465 <+785>:\tpop    rbp\n   0x000000000008a466 <+786>:\tret\n   0x000000000008a467 <+787>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a46e <+794>:\tjmp    0x8a166 <main+18>\n   0x000000000008a473 <+799>:\tsub    rsp,0x10\n   0x000000000008a477 <+803>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a47b <+807>:\tpush   rax\n   0x000000000008a47c <+808>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a481 <+813>:\tmov    rcx,rax\n   0x000000000008a484 <+816>:\tpop    rax\n   0x000000000008a485 <+817>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a489 <+821>:\tadd    rsp,0x10\n   0x000000000008a48d <+825>:\tjmp    0x8a2ce <main+378>\n   0x000000000008a492 <+830>:\tsub    rsp,0x10\n   0x000000000008a496 <+834>:\tmovups XMMWORD PTR [rsp],xmm3\n   0x000000000008a49a <+838>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a49f <+843>:\tmovups xmm3,XMMWORD PTR [rsp]\n   0x000000000008a4a3 <+847>:\tadd    rsp,0x10\n   0x000000000008a4a7 <+851>:\tjmp    0x8a41d <main+713>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "pancake-numbers.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  for (int i = 0; i <= 3; i++) {\n    for (int j = 1; j <= 5; j++) {\n      int n = (i * 5) + j;\n      print(\"p(${n.toString().padLeft(2, ' ')}) = ${pancake(n).toString().padLeft(2, ' ')}\");\n    }\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a248 <+0>:\tpush   rbp\n   0x000000000008a249 <+1>:\tmov    rbp,rsp\n   0x000000000008a24c <+4>:\tsub    rsp,0x30\n   0x000000000008a250 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a254 <+12>:\tjbe    0x8a455 <main+525>\n   0x000000000008a25a <+18>:\txor    eax,eax\n   0x000000000008a25c <+20>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a260 <+24>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a264 <+28>:\tjbe    0x8a461 <main+537>\n   0x000000000008a26a <+34>:\tcmp    rax,0x3\n   0x000000000008a26e <+38>:\tjg     0x8a44c <main+516>\n   0x000000000008a274 <+44>:\tmov    rcx,rax\n   0x000000000008a277 <+47>:\timul   rcx,rcx,0x5\n   0x000000000008a27e <+54>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a282 <+58>:\tmov    edx,0x1\n   0x000000000008a287 <+63>:\tmov    QWORD PTR [rbp-0x10],rdx\n   0x000000000008a28b <+67>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a28f <+71>:\tjbe    0x8a46d <main+549>\n   0x000000000008a295 <+77>:\tcmp    rdx,0x5\n   0x000000000008a299 <+81>:\tjg     0x8a43c <main+500>\n   0x000000000008a29f <+87>:\tmov    rsi,rcx\n   0x000000000008a2a2 <+90>:\tadd    rsi,rdx\n   0x000000000008a2a5 <+93>:\tmov    QWORD PTR [rbp-0x8],rsi\n   0x000000000008a2a9 <+97>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a2ad <+101>:\tmov    r10d,0x8\n   0x000000000008a2b3 <+107>:\tcall   0x84d60 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2b8 <+112>:\tmov    rdx,rax\n   0x000000000008a2bb <+115>:\tmov    QWORD PTR [rbp-0x28],rdx\n   0x000000000008a2bf <+119>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a2c6 <+126>:\tmov    QWORD PTR [rdx+0x17],r11\n   0x000000000008a2ca <+130>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a2ce <+134>:\tmov    rax,rsi\n   0x000000000008a2d1 <+137>:\tadd    rax,rax\n   0x000000000008a2d4 <+140>:\tjno    0x8a2e3 <main+155>\n   0x000000000008a2da <+146>:\tcall   0x84fe4 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a2df <+151>:\tmov    QWORD PTR [rax+0x7],rsi\n   0x000000000008a2e3 <+155>:\ttest   al,0x1\n   0x000000000008a2e5 <+157>:\tmov    ecx,0x3c\n   0x000000000008a2ea <+162>:\tje     0x8a2f2 <main+170>\n   0x000000000008a2ec <+164>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a2ef <+167>:\tshr    ecx,0xc\n   0x000000000008a2f2 <+170>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a2f6 <+174>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a2fa <+178>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008a301 <+185>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a304 <+188>:\tshr    ecx,0xc\n   0x000000000008a307 <+191>:\tmov    rdi,rax\n   0x000000000008a30a <+194>:\tmov    esi,0x2\n   0x000000000008a30f <+199>:\tmov    rdx,QWORD PTR [r15+0x5df]\n   0x000000000008a316 <+206>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a31a <+210>:\tcall   QWORD PTR [rax+rcx*8-0x50]\n   0x000000000008a31e <+214>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a322 <+218>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a326 <+222>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a32a <+226>:\ttest   al,0x1\n   0x000000000008a32c <+228>:\tje     0x8a345 <main+253>\n   0x000000000008a32e <+230>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a332 <+234>:\tshr    r11d,0x2\n   0x000000000008a336 <+238>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a33a <+242>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a33e <+246>:\tje     0x8a345 <main+253>\n   0x000000000008a340 <+248>:\tcall   0x83378 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a345 <+253>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a349 <+257>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a350 <+264>:\tmov    QWORD PTR [rdx+0x27],r11\n   0x000000000008a354 <+268>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a358 <+272>:\tmov    esi,0x2\n   0x000000000008a35d <+277>:\tmov    ebx,0x2\n   0x000000000008a362 <+282>:\tmov    rcx,0xffffffffffffffff\n   0x000000000008a369 <+289>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a36d <+293>:\tjbe    0x8a479 <main+561>\n   0x000000000008a373 <+299>:\tcmp    rbx,rax\n   0x000000000008a376 <+302>:\tjge    0x8a392 <main+330>\n   0x000000000008a37c <+308>:\tadd    rcx,0x1\n   0x000000000008a380 <+312>:\tmov    rdi,rsi\n   0x000000000008a383 <+315>:\tshl    rdi,1\n   0x000000000008a386 <+318>:\tsub    rdi,0x1\n   0x000000000008a38a <+322>:\tadd    rbx,rdi\n   0x000000000008a38d <+325>:\tmov    rsi,rdi\n   0x000000000008a390 <+328>:\tjmp    0x8a369 <main+289>\n   0x000000000008a392 <+330>:\tmov    rsi,rax\n   0x000000000008a395 <+333>:\tadd    rsi,rcx\n   0x000000000008a398 <+336>:\tmov    rax,rsi\n   0x000000000008a39b <+339>:\tadd    rax,rax\n   0x000000000008a39e <+342>:\tjno    0x8a3ad <main+357>\n   0x000000000008a3a4 <+348>:\tcall   0x84fe4 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a3a9 <+353>:\tmov    QWORD PTR [rax+0x7],rsi\n   0x000000000008a3ad <+357>:\ttest   al,0x1\n   0x000000000008a3af <+359>:\tmov    ecx,0x3c\n   0x000000000008a3b4 <+364>:\tje     0x8a3bc <main+372>\n   0x000000000008a3b6 <+366>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a3b9 <+369>:\tshr    ecx,0xc\n   0x000000000008a3bc <+372>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a3c0 <+376>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3c4 <+380>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008a3cb <+387>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a3ce <+390>:\tshr    ecx,0xc\n   0x000000000008a3d1 <+393>:\tmov    rdi,rax\n   0x000000000008a3d4 <+396>:\tmov    esi,0x2\n   0x000000000008a3d9 <+401>:\tmov    rdx,QWORD PTR [r15+0x5df]\n   0x000000000008a3e0 <+408>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3e4 <+412>:\tcall   QWORD PTR [rax+rcx*8-0x50]\n   0x000000000008a3e8 <+416>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a3ec <+420>:\tlea    r13,[rdx+0x2f]\n   0x000000000008a3f0 <+424>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a3f4 <+428>:\ttest   al,0x1\n   0x000000000008a3f6 <+430>:\tje     0x8a40f <main+455>\n   0x000000000008a3f8 <+432>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a3fc <+436>:\tshr    r11d,0x2\n   0x000000000008a400 <+440>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a404 <+444>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a408 <+448>:\tje     0x8a40f <main+455>\n   0x000000000008a40a <+450>:\tcall   0x83378 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a40f <+455>:\tmov    r11,QWORD PTR [rbp-0x28]\n   0x000000000008a413 <+459>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a417 <+463>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a41c <+468>:\tmov    rdi,rax\n   0x000000000008a41f <+471>:\tcall   0x8a488 <printToConsole>\n   0x000000000008a424 <+476>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a428 <+480>:\tadd    rcx,0x1\n   0x000000000008a42c <+484>:\tmov    rdx,rcx\n   0x000000000008a42f <+487>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a433 <+491>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a437 <+495>:\tjmp    0x8a287 <main+63>\n   0x000000000008a43c <+500>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a440 <+504>:\tadd    rcx,0x1\n   0x000000000008a444 <+508>:\tmov    rax,rcx\n   0x000000000008a447 <+511>:\tjmp    0x8a25c <main+20>\n   0x000000000008a44c <+516>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a450 <+520>:\tmov    rsp,rbp\n   0x000000000008a453 <+523>:\tpop    rbp\n   0x000000000008a454 <+524>:\tret\n   0x000000000008a455 <+525>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a45c <+532>:\tjmp    0x8a25a <main+18>\n   0x000000000008a461 <+537>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a468 <+544>:\tjmp    0x8a26a <main+34>\n   0x000000000008a46d <+549>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a474 <+556>:\tjmp    0x8a295 <main+77>\n   0x000000000008a479 <+561>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a480 <+568>:\tjmp    0x8a373 <main+299>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "partition-function-p.dart",
  "functions": [
    {
      "name": "partitions",
      "source": "BigInt partitions(n) {\n  var p = List.filled(n + 1, BigInt.zero);\n  p[0] = BigInt.one;\n  for (var i = 1; i < n + 1; i++) {\n    var k = 0;\n    while (true) {\n      k += 1;\n      var j = (k * (3 * k - 1)) ~/ 2;\n      if (j > i) break;\n      var t = p[i - j];\n      p[i] = (p[i] + ((k % 2 == 1) ? t : -t)) ;\n      j = (k * (3 * k + 1)) ~/ 2;\n      if (j > i) break;\n      t = p[i - j];\n      p[i] = (p[i] + ((k % 2 == 1) ? t : -t));\n    }\n  }\n  return p[n];\n}",
      "assembly": "Dump of assembler code for function partitions:\n   0x00000000000917d0 <+0>:\tpush   rbp\n   0x00000000000917d1 <+1>:\tmov    rbp,rsp\n   0x00000000000917d4 <+4>:\tsub    rsp,0x40\n   0x00000000000917d8 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000917dc <+12>:\tjbe    0x91aa9 <partitions+729>\n   0x00000000000917e2 <+18>:\tcall   0x91bdc <BigInt.zero>\n   0x00000000000917e7 <+23>:\tmov    rdx,rax\n   0x00000000000917ea <+26>:\tmov    rdi,QWORD PTR [r15+0x1897]\n   0x00000000000917f1 <+33>:\tmov    esi,0x1a0b\n   0x00000000000917f6 <+38>:\tcall   0x70cd0 <new _List.filled>\n   0x00000000000917fb <+43>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x00000000000917ff <+47>:\tcall   0x91b9c <BigInt.one>\n   0x0000000000091804 <+52>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x0000000000091808 <+56>:\tlea    r13,[rdx+0x17]\n   0x000000000009180c <+60>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000091810 <+64>:\ttest   al,0x1\n   0x0000000000091812 <+66>:\tje     0x9182b <partitions+91>\n   0x0000000000091814 <+68>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000091818 <+72>:\tshr    r11d,0x2\n   0x000000000009181c <+76>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091820 <+80>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091824 <+84>:\tje     0x9182b <partitions+91>\n   0x0000000000091826 <+86>:\tcall   0x8a854 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000009182b <+91>:\tmov    edi,0x1\n   0x0000000000091830 <+96>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000091834 <+100>:\tmov    esi,0x2\n   0x0000000000091839 <+105>:\tmov    QWORD PTR [rbp-0x40],rdi\n   0x000000000009183d <+109>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091841 <+113>:\tjbe    0x91ab5 <partitions+741>\n   0x0000000000091847 <+119>:\tcmp    rdi,0x1a0b\n   0x000000000009184e <+126>:\tjge    0x91a9d <partitions+717>\n   0x0000000000091854 <+132>:\txor    eax,eax\n   0x0000000000091856 <+134>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009185a <+138>:\tjbe    0x91ac1 <partitions+753>\n   0x0000000000091860 <+144>:\tmov    r8,rax\n   0x0000000000091863 <+147>:\tadd    r8,0x1\n   0x0000000000091867 <+151>:\tmov    QWORD PTR [rbp-0x38],r8\n   0x000000000009186b <+155>:\tmov    r9,r8\n   0x000000000009186e <+158>:\timul   r9,r9,0x3\n   0x0000000000091875 <+165>:\tmov    QWORD PTR [rbp-0x30],r9\n   0x0000000000091879 <+169>:\tmov    rax,r9\n   0x000000000009187c <+172>:\tsub    rax,0x1\n   0x0000000000091880 <+176>:\timul   rax,r8\n   0x0000000000091884 <+180>:\tmov    r11,rax\n   0x0000000000091887 <+183>:\tmov    rax,QWORD PTR [r15+0x617]\n   0x000000000009188e <+190>:\timul   r11\n   0x0000000000091891 <+193>:\tadd    rdx,r11\n   0x0000000000091894 <+196>:\tmov    rax,rdx\n   0x0000000000091897 <+199>:\tshr    rdx,0x3f\n   0x000000000009189b <+203>:\tadd    rdx,rax\n   0x000000000009189e <+206>:\tmov    rax,rdx\n   0x00000000000918a1 <+209>:\tcmp    rax,rdi\n   0x00000000000918a4 <+212>:\tjg     0x91a8e <partitions+702>\n   0x00000000000918aa <+218>:\tmov    rdx,rdi\n   0x00000000000918ad <+221>:\tsub    rdx,rax\n   0x00000000000918b0 <+224>:\tmov    rbx,rdx\n   0x00000000000918b3 <+227>:\tmov    eax,0x1a0b\n   0x00000000000918b8 <+232>:\tcmp    rbx,rax\n   0x00000000000918bb <+235>:\tjae    0x91acd <partitions+765>\n   0x00000000000918c1 <+241>:\tmov    rbx,QWORD PTR [rcx+rdx*8+0x17]\n   0x00000000000918c6 <+246>:\tmov    rax,QWORD PTR [rcx+rdi*8+0x17]\n   0x00000000000918cb <+251>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x00000000000918cf <+255>:\ttest   r8b,0x1\n   0x00000000000918d3 <+259>:\tje     0x918e7 <partitions+279>\n   0x00000000000918d9 <+265>:\tmov    rsi,rbx\n   0x00000000000918dc <+268>:\tmov    rax,rdi\n   0x00000000000918df <+271>:\tmov    rcx,r8\n   0x00000000000918e2 <+274>:\tjmp    0x91941 <partitions+369>\n   0x00000000000918e7 <+279>:\tmov    rdx,QWORD PTR [rbx+0x17]\n   0x00000000000918eb <+283>:\tmov    QWORD PTR [rbp-0x20],rdx\n   0x00000000000918ef <+287>:\tcmp    rdx,0x0\n   0x00000000000918f3 <+291>:\tjne    0x91901 <partitions+305>\n   0x00000000000918f9 <+297>:\tmov    rcx,rbx\n   0x00000000000918fc <+300>:\tjmp    0x91936 <partitions+358>\n   0x0000000000091901 <+305>:\tmov    r10,QWORD PTR [rbx+0x7]\n   0x0000000000091905 <+309>:\txor    r10,0x10\n   0x0000000000091909 <+313>:\tmov    QWORD PTR [rbp-0x18],r10\n   0x000000000009190d <+317>:\tmov    r12,QWORD PTR [rbx+0xf]\n   0x0000000000091911 <+321>:\tmov    QWORD PTR [rbp-0x10],r12\n   0x0000000000091915 <+325>:\tcall   0x78828 <new _BigIntImpl>\n   0x000000000009191a <+330>:\tmov    rdi,rax\n   0x000000000009191d <+333>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x0000000000091921 <+337>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x0000000000091925 <+341>:\tmov    rbx,QWORD PTR [rbp-0x10]\n   0x0000000000091929 <+345>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000009192d <+349>:\tcall   0x78780 <new _BigIntImpl._>\n   0x0000000000091932 <+354>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x0000000000091936 <+358>:\tmov    rsi,rcx\n   0x0000000000091939 <+361>:\tmov    rax,QWORD PTR [rbp-0x40]\n   0x000000000009193d <+365>:\tmov    rcx,QWORD PTR [rbp-0x38]\n   0x0000000000091941 <+369>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x0000000000091945 <+373>:\tcall   0x91ad8 <_BigIntImpl.+>\n   0x000000000009194a <+378>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000009194e <+382>:\tmov    rsi,rax\n   0x0000000000091951 <+385>:\tmov    rcx,QWORD PTR [rbp-0x40]\n   0x0000000000091955 <+389>:\tmov    QWORD PTR [rbp-0x28],rsi\n   0x0000000000091959 <+393>:\tlea    r13,[rdx+rcx*8+0x17]\n   0x000000000009195e <+398>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000091962 <+402>:\ttest   al,0x1\n   0x0000000000091964 <+404>:\tje     0x9197d <partitions+429>\n   0x0000000000091966 <+406>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000009196a <+410>:\tshr    r11d,0x2\n   0x000000000009196e <+414>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091972 <+418>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091976 <+422>:\tje     0x9197d <partitions+429>\n   0x0000000000091978 <+424>:\tcall   0x8a854 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000009197d <+429>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x0000000000091981 <+433>:\tadd    rax,0x1\n   0x0000000000091985 <+437>:\tmov    rdi,QWORD PTR [rbp-0x38]\n   0x0000000000091989 <+441>:\timul   rax,rdi\n   0x000000000009198d <+445>:\tmov    r8d,0x2\n   0x0000000000091993 <+451>:\tmov    r11,rax\n   0x0000000000091996 <+454>:\tmov    rax,QWORD PTR [r15+0x617]\n   0x000000000009199d <+461>:\timul   r11\n   0x00000000000919a0 <+464>:\tadd    rdx,r11\n   0x00000000000919a3 <+467>:\tmov    rax,rdx\n   0x00000000000919a6 <+470>:\tshr    rdx,0x3f\n   0x00000000000919aa <+474>:\tadd    rdx,rax\n   0x00000000000919ad <+477>:\tmov    rax,rdx\n   0x00000000000919b0 <+480>:\tcmp    rax,rcx\n   0x00000000000919b3 <+483>:\tjg     0x91a91 <partitions+705>\n   0x00000000000919b9 <+489>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x00000000000919bd <+493>:\tmov    r9,rcx\n   0x00000000000919c0 <+496>:\tsub    r9,rax\n   0x00000000000919c3 <+499>:\tmov    rbx,r9\n   0x00000000000919c6 <+502>:\tmov    eax,0x1a0b\n   0x00000000000919cb <+507>:\tcmp    rbx,rax\n   0x00000000000919ce <+510>:\tjae    0x91ad2 <partitions+770>\n   0x00000000000919d4 <+516>:\tmov    rbx,QWORD PTR [rdx+r9*8+0x17]\n   0x00000000000919d9 <+521>:\ttest   dil,0x1\n   0x00000000000919dd <+525>:\tje     0x919ee <partitions+542>\n   0x00000000000919e3 <+531>:\tmov    rsi,rbx\n   0x00000000000919e6 <+534>:\tmov    rax,rcx\n   0x00000000000919e9 <+537>:\tjmp    0x91a44 <partitions+628>\n   0x00000000000919ee <+542>:\tmov    rax,QWORD PTR [rbx+0x17]\n   0x00000000000919f2 <+546>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x00000000000919f6 <+550>:\tcmp    rax,0x0\n   0x00000000000919fa <+554>:\tjne    0x91a08 <partitions+568>\n   0x0000000000091a00 <+560>:\tmov    rcx,rbx\n   0x0000000000091a03 <+563>:\tjmp    0x91a3d <partitions+621>\n   0x0000000000091a08 <+568>:\tmov    r9,QWORD PTR [rbx+0x7]\n   0x0000000000091a0c <+572>:\txor    r9,0x10\n   0x0000000000091a10 <+576>:\tmov    QWORD PTR [rbp-0x18],r9\n   0x0000000000091a14 <+580>:\tmov    r10,QWORD PTR [rbx+0xf]\n   0x0000000000091a18 <+584>:\tmov    QWORD PTR [rbp-0x10],r10\n   0x0000000000091a1c <+588>:\tcall   0x78828 <new _BigIntImpl>\n   0x0000000000091a21 <+593>:\tmov    rdi,rax\n   0x0000000000091a24 <+596>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x0000000000091a28 <+600>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x0000000000091a2c <+604>:\tmov    rbx,QWORD PTR [rbp-0x10]\n   0x0000000000091a30 <+608>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000091a34 <+612>:\tcall   0x78780 <new _BigIntImpl._>\n   0x0000000000091a39 <+617>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x0000000000091a3d <+621>:\tmov    rsi,rcx\n   0x0000000000091a40 <+624>:\tmov    rax,QWORD PTR [rbp-0x40]\n   0x0000000000091a44 <+628>:\tmov    rdi,QWORD PTR [rbp-0x28]\n   0x0000000000091a48 <+632>:\tcall   0x91ad8 <_BigIntImpl.+>\n   0x0000000000091a4d <+637>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x0000000000091a51 <+641>:\tmov    rcx,QWORD PTR [rbp-0x40]\n   0x0000000000091a55 <+645>:\tlea    r13,[rdx+rcx*8+0x17]\n   0x0000000000091a5a <+650>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000091a5e <+654>:\ttest   al,0x1\n   0x0000000000091a60 <+656>:\tje     0x91a79 <partitions+681>\n   0x0000000000091a62 <+658>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000091a66 <+662>:\tshr    r11d,0x2\n   0x0000000000091a6a <+666>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091a6e <+670>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091a72 <+674>:\tje     0x91a79 <partitions+681>\n   0x0000000000091a74 <+676>:\tcall   0x8a854 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x0000000000091a79 <+681>:\tmov    rax,QWORD PTR [rbp-0x38]\n   0x0000000000091a7d <+685>:\tmov    rdi,rcx\n   0x0000000000091a80 <+688>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000091a84 <+692>:\tmov    esi,0x2\n   0x0000000000091a89 <+697>:\tjmp    0x91856 <partitions+134>\n   0x0000000000091a8e <+702>:\tmov    rcx,rdi\n   0x0000000000091a91 <+705>:\tadd    rcx,0x1\n   0x0000000000091a95 <+709>:\tmov    rdi,rcx\n   0x0000000000091a98 <+712>:\tjmp    0x91830 <partitions+96>\n   0x0000000000091a9d <+717>:\tmov    rax,QWORD PTR [rcx+0xd067]\n   0x0000000000091aa4 <+724>:\tmov    rsp,rbp\n   0x0000000000091aa7 <+727>:\tpop    rbp\n   0x0000000000091aa8 <+728>:\tret\n   0x0000000000091aa9 <+729>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091ab0 <+736>:\tjmp    0x917e2 <partitions+18>\n   0x0000000000091ab5 <+741>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091abc <+748>:\tjmp    0x91847 <partitions+119>\n   0x0000000000091ac1 <+753>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091ac8 <+760>:\tjmp    0x91860 <partitions+144>\n   0x0000000000091acd <+765>:\tcall   0x8c780 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x0000000000091ad2 <+770>:\tcall   0x8c780 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "main() =>  print(partitions(6666));",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000091704 <+0>:\tpush   rbp\n   0x0000000000091705 <+1>:\tmov    rbp,rsp\n   0x0000000000091708 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009170c <+8>:\tjbe    0x91728 <main+36>\n   0x0000000000091712 <+14>:\tcall   0x917d0 <partitions>\n   0x0000000000091717 <+19>:\tmov    rdi,rax\n   0x000000000009171a <+22>:\tcall   0x91734 <print>\n   0x000000000009171f <+27>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000091723 <+31>:\tmov    rsp,rbp\n   0x0000000000091726 <+34>:\tpop    rbp\n   0x0000000000091727 <+35>:\tret\n   0x0000000000091728 <+36>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009172f <+43>:\tjmp    0x91712 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "penneys-game.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  // Dart does not need srand, Random() creates a new seeded random number generator.\n  final game = Penney();\n  game.gameLoop();\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000009ee4c <+0>:\tpush   rbp\n   0x000000000009ee4d <+1>:\tmov    rbp,rsp\n   0x000000000009ee50 <+4>:\tsub    rsp,0x8\n   0x000000000009ee54 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009ee58 <+12>:\tjbe    0x9ee81 <main+53>\n   0x000000000009ee5e <+18>:\tcall   0xa1980 <new Penney>\n   0x000000000009ee63 <+23>:\tmov    rdi,rax\n   0x000000000009ee66 <+26>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000009ee6a <+30>:\tcall   0xa1730 <new Penney>\n   0x000000000009ee6f <+35>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000009ee73 <+39>:\tcall   0x9ee8c <Penney.gameLoop>\n   0x000000000009ee78 <+44>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000009ee7c <+48>:\tmov    rsp,rbp\n   0x000000000009ee7f <+51>:\tpop    rbp\n   0x000000000009ee80 <+52>:\tret\n   0x000000000009ee81 <+53>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009ee88 <+60>:\tjmp    0x9ee5e <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "perfect-totient-numbers.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n    cache[0] = 0;\n    var count = 0;\n    var i = 1;\n    while (count < 20) {\n        if (is_perfect_totient(i)) {\n            stdout.write(\"$i \");\n            count++;\n        }\n        i++;\n    }\n    print(\" \");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090bf0 <+0>:\tpush   rbp\n   0x0000000000090bf1 <+1>:\tmov    rbp,rsp\n   0x0000000000090bf4 <+4>:\tsub    rsp,0x40\n   0x0000000000090bf8 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090bfc <+12>:\tjbe    0x90eda <main+746>\n   0x0000000000090c02 <+18>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090c06 <+22>:\tmov    rax,QWORD PTR [rax+0x7e8]\n   0x0000000000090c0d <+29>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090c11 <+33>:\tjne    0x90c23 <main+51>\n   0x0000000000090c17 <+39>:\tmov    rdx,QWORD PTR [r15+0x1847]\n   0x0000000000090c1e <+46>:\tcall   0x89c40 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090c23 <+51>:\tmov    rcx,rax\n   0x0000000000090c26 <+54>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x0000000000090c2a <+58>:\tsar    rax,1\n   0x0000000000090c2d <+61>:\txor    ebx,ebx\n   0x0000000000090c2f <+63>:\tcmp    rbx,rax\n   0x0000000000090c32 <+66>:\tjae    0x90ee6 <main+758>\n   0x0000000000090c38 <+72>:\tmov    rax,QWORD PTR [rcx+0x17]\n   0x0000000000090c3c <+76>:\tmov    QWORD PTR [rax+0x17],0x0\n   0x0000000000090c44 <+84>:\txor    ecx,ecx\n   0x0000000000090c46 <+86>:\tmov    eax,0x1\n   0x0000000000090c4b <+91>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x0000000000090c4f <+95>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x0000000000090c53 <+99>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090c57 <+103>:\tjbe    0x90eeb <main+763>\n   0x0000000000090c5d <+109>:\tcmp    rcx,0x14\n   0x0000000000090c61 <+113>:\tjge    0x90ecc <main+732>\n   0x0000000000090c67 <+119>:\tmov    rdx,rax\n   0x0000000000090c6a <+122>:\tneg    rdx\n   0x0000000000090c6d <+125>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x0000000000090c71 <+129>:\txor    r8d,r8d\n   0x0000000000090c74 <+132>:\tmov    ebx,0x1\n   0x0000000000090c79 <+137>:\tmov    QWORD PTR [rbp-0x8],r8\n   0x0000000000090c7d <+141>:\tmov    QWORD PTR [rbp-0x10],rbx\n   0x0000000000090c81 <+145>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090c85 <+149>:\tjbe    0x90ef7 <main+775>\n   0x0000000000090c8b <+155>:\tcmp    rbx,rax\n   0x0000000000090c8e <+158>:\tjge    0x90d49 <main+345>\n   0x0000000000090c94 <+164>:\tcmp    rbx,0x0\n   0x0000000000090c98 <+168>:\tjge    0x90cac <main+188>\n   0x0000000000090c9e <+174>:\tmov    rsi,rbx\n   0x0000000000090ca1 <+177>:\tneg    rsi\n   0x0000000000090ca4 <+180>:\tmov    rdi,rsi\n   0x0000000000090ca7 <+183>:\tjmp    0x90caf <main+191>\n   0x0000000000090cac <+188>:\tmov    rdi,rbx\n   0x0000000000090caf <+191>:\tcmp    rax,0x0\n   0x0000000000090cb3 <+195>:\tjge    0x90cc1 <main+209>\n   0x0000000000090cb9 <+201>:\tmov    rsi,rdx\n   0x0000000000090cbc <+204>:\tjmp    0x90cc4 <main+212>\n   0x0000000000090cc1 <+209>:\tmov    rsi,rax\n   0x0000000000090cc4 <+212>:\tcmp    rdi,0x0\n   0x0000000000090cc8 <+216>:\tjne    0x90cdd <main+237>\n   0x0000000000090cce <+222>:\tcmp    rsi,0x1\n   0x0000000000090cd2 <+226>:\tjne    0x90d29 <main+313>\n   0x0000000000090cd8 <+232>:\tjmp    0x90d19 <main+297>\n   0x0000000000090cdd <+237>:\tcmp    rsi,0x0\n   0x0000000000090ce1 <+241>:\tjne    0x90cf6 <main+262>\n   0x0000000000090ce7 <+247>:\tcmp    rdi,0x1\n   0x0000000000090ceb <+251>:\tjne    0x90d29 <main+313>\n   0x0000000000090cf1 <+257>:\tjmp    0x90d19 <main+297>\n   0x0000000000090cf6 <+262>:\tcmp    rdi,0x1\n   0x0000000000090cfa <+266>:\tje     0x90d19 <main+297>\n   0x0000000000090d00 <+272>:\tcmp    rsi,0x1\n   0x0000000000090d04 <+276>:\tje     0x90d19 <main+297>\n   0x0000000000090d0a <+282>:\tcall   0x91458 <int._binaryGcd>\n   0x0000000000090d0f <+287>:\tcmp    rax,0x1\n   0x0000000000090d13 <+291>:\tjne    0x90d29 <main+313>\n   0x0000000000090d19 <+297>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090d1d <+301>:\tadd    rax,0x1\n   0x0000000000090d21 <+305>:\tmov    r8,rax\n   0x0000000000090d24 <+308>:\tjmp    0x90d2d <main+317>\n   0x0000000000090d29 <+313>:\tmov    r8,QWORD PTR [rbp-0x8]\n   0x0000000000090d2d <+317>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000090d31 <+321>:\tadd    rax,0x1\n   0x0000000000090d35 <+325>:\tmov    rbx,rax\n   0x0000000000090d38 <+328>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x0000000000090d3c <+332>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x0000000000090d40 <+336>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x0000000000090d44 <+340>:\tjmp    0x90c79 <main+137>\n   0x0000000000090d49 <+345>:\tmov    rbx,rax\n   0x0000000000090d4c <+348>:\tmov    rax,r8\n   0x0000000000090d4f <+351>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090d53 <+355>:\tmov    rax,QWORD PTR [rax+0x7e8]\n   0x0000000000090d5a <+362>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090d5e <+366>:\tjne    0x90d70 <main+384>\n   0x0000000000090d64 <+372>:\tmov    rdx,QWORD PTR [r15+0x1847]\n   0x0000000000090d6b <+379>:\tcall   0x89c40 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090d70 <+384>:\tmov    rcx,rax\n   0x0000000000090d73 <+387>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x0000000000090d77 <+391>:\tmov    rdx,rax\n   0x0000000000090d7a <+394>:\tsar    rdx,1\n   0x0000000000090d7d <+397>:\tmov    rax,rdx\n   0x0000000000090d80 <+400>:\tmov    rbx,QWORD PTR [rbp-0x8]\n   0x0000000000090d84 <+404>:\tcmp    rbx,rax\n   0x0000000000090d87 <+407>:\tjae    0x90f03 <main+787>\n   0x0000000000090d8d <+413>:\tmov    rsi,QWORD PTR [rcx+0x17]\n   0x0000000000090d91 <+417>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090d95 <+421>:\tmov    rcx,QWORD PTR [rsi+rax*8+0x17]\n   0x0000000000090d9a <+426>:\tsar    rcx,1\n   0x0000000000090d9d <+429>:\tjae    0x90da4 <main+436>\n   0x0000000000090d9f <+431>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x0000000000090da4 <+436>:\tmov    rdi,rax\n   0x0000000000090da7 <+439>:\tadd    rdi,rcx\n   0x0000000000090daa <+442>:\tmov    rax,rdx\n   0x0000000000090dad <+445>:\tmov    rbx,QWORD PTR [rbp-0x28]\n   0x0000000000090db1 <+449>:\tcmp    rbx,rax\n   0x0000000000090db4 <+452>:\tjae    0x90f08 <main+792>\n   0x0000000000090dba <+458>:\tmov    rax,rdi\n   0x0000000000090dbd <+461>:\tadd    rax,rax\n   0x0000000000090dc0 <+464>:\tjno    0x90dcf <main+479>\n   0x0000000000090dc6 <+470>:\tcall   0x8b968 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x0000000000090dcb <+475>:\tmov    QWORD PTR [rax+0x7],rdi\n   0x0000000000090dcf <+479>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x0000000000090dd3 <+483>:\tmov    rbx,rcx\n   0x0000000000090dd6 <+486>:\tadd    rbx,rbx\n   0x0000000000090dd9 <+489>:\tmov    rdx,rsi\n   0x0000000000090ddc <+492>:\tmov    QWORD PTR [rbp-0x30],rbx\n   0x0000000000090de0 <+496>:\tlea    r13,[rdx+rcx*8+0x17]\n   0x0000000000090de5 <+501>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000090de9 <+505>:\ttest   al,0x1\n   0x0000000000090deb <+507>:\tje     0x90e04 <main+532>\n   0x0000000000090ded <+509>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000090df1 <+513>:\tshr    r11d,0x2\n   0x0000000000090df5 <+517>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000090df9 <+521>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000090dfd <+525>:\tje     0x90e04 <main+532>\n   0x0000000000090dff <+527>:\tcall   0x89cfc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x0000000000090e04 <+532>:\tcmp    rcx,rdi\n   0x0000000000090e07 <+535>:\tjne    0x90ebb <main+715>\n   0x0000000000090e0d <+541>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090e11 <+545>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x0000000000090e18 <+552>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090e1c <+556>:\tjne    0x90e2e <main+574>\n   0x0000000000090e22 <+562>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000090e29 <+569>:\tcall   0x89c40 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090e2e <+574>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090e32 <+578>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000090e39 <+585>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090e3d <+589>:\tjne    0x90e4f <main+607>\n   0x0000000000090e43 <+595>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000090e4a <+602>:\tcall   0x89bf8 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090e4f <+607>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090e53 <+611>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x0000000000090e5a <+618>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090e5e <+622>:\tjne    0x90e70 <main+640>\n   0x0000000000090e64 <+628>:\tmov    rdx,QWORD PTR [r15+0x184f]\n   0x0000000000090e6b <+635>:\tcall   0x89bf8 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090e70 <+640>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000090e74 <+644>:\tmov    r10d,0x4\n   0x0000000000090e7a <+650>:\tmov    QWORD PTR [rbp-0x38],rax\n   0x0000000000090e7e <+654>:\tcall   0x8b6e4 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000090e83 <+659>:\tmov    rcx,rax\n   0x0000000000090e86 <+662>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x0000000000090e8a <+666>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x0000000000090e8e <+670>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x0000000000090e95 <+677>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x0000000000090e99 <+681>:\tmov    QWORD PTR [rsp],rcx\n   0x0000000000090e9d <+685>:\tcall   0x5ef94 <_StringBase._interpolate>\n   0x0000000000090ea2 <+690>:\tmov    rdi,QWORD PTR [rbp-0x38]\n   0x0000000000090ea6 <+694>:\tmov    rsi,rax\n   0x0000000000090ea9 <+697>:\tcall   0x90fa0 <_StdSink._write>\n   0x0000000000090eae <+702>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x0000000000090eb2 <+706>:\tadd    rcx,0x1\n   0x0000000000090eb6 <+710>:\tjmp    0x90ebf <main+719>\n   0x0000000000090ebb <+715>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x0000000000090ebf <+719>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x0000000000090ec3 <+723>:\tadd    rax,0x1\n   0x0000000000090ec7 <+727>:\tjmp    0x90c4b <main+91>\n   0x0000000000090ecc <+732>:\tcall   0x90f10 <print>\n   0x0000000000090ed1 <+737>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000090ed5 <+741>:\tmov    rsp,rbp\n   0x0000000000090ed8 <+744>:\tpop    rbp\n   0x0000000000090ed9 <+745>:\tret\n   0x0000000000090eda <+746>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090ee1 <+753>:\tjmp    0x90c02 <main+18>\n   0x0000000000090ee6 <+758>:\tcall   0x8bc28 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x0000000000090eeb <+763>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090ef2 <+770>:\tjmp    0x90c5d <main+109>\n   0x0000000000090ef7 <+775>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090efe <+782>:\tjmp    0x90c8b <main+155>\n   0x0000000000090f03 <+787>:\tcall   0x8bc28 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x0000000000090f08 <+792>:\tcall   0x8bc28 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "permutations-by-swapping.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  List<int> array = List.generate(4, (i) => i);\n  HeapsAlgorithm algorithm = HeapsAlgorithm();\n  algorithm.recursive(array);\n  print('');\n  algorithm.loop(array);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1e3 <main+143>\n   0x000000000008a166 <+18>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008a16d <+25>:\tmov    esi,0x4\n   0x000000000008a172 <+30>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a177 <+35>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a17b <+39>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a17f <+43>:\tsar    rcx,1\n   0x000000000008a182 <+46>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a186 <+50>:\txor    ebx,ebx\n   0x000000000008a188 <+52>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a18c <+56>:\tjbe    0x8a1ef <main+155>\n   0x000000000008a192 <+62>:\tcmp    rbx,rcx\n   0x000000000008a195 <+65>:\tjge    0x8a1ac <main+88>\n   0x000000000008a19b <+71>:\tmov    rsi,rbx\n   0x000000000008a19e <+74>:\tadd    rsi,rsi\n   0x000000000008a1a1 <+77>:\tmov    QWORD PTR [rdx+rbx*8+0x17],rsi\n   0x000000000008a1a6 <+82>:\tadd    rbx,0x1\n   0x000000000008a1aa <+86>:\tjmp    0x8a188 <main+52>\n   0x000000000008a1ac <+88>:\tcall   0x8a7e0 <new HeapsAlgorithm>\n   0x000000000008a1b1 <+93>:\tmov    rdi,rax\n   0x000000000008a1b4 <+96>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a1b8 <+100>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a1bc <+104>:\tcall   0x8a634 <HeapsAlgorithm.recursive>\n   0x000000000008a1c1 <+109>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a1c8 <+116>:\tcall   0x8a5d0 <printToConsole>\n   0x000000000008a1cd <+121>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a1d1 <+125>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a1d5 <+129>:\tcall   0x8a230 <HeapsAlgorithm.loop>\n   0x000000000008a1da <+134>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1de <+138>:\tmov    rsp,rbp\n   0x000000000008a1e1 <+141>:\tpop    rbp\n   0x000000000008a1e2 <+142>:\tret\n   0x000000000008a1e3 <+143>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1ea <+150>:\tjmp    0x8a166 <main+18>\n   0x000000000008a1ef <+155>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1f6 <+162>:\tjmp    0x8a192 <main+62>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "pick-random-element.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  final array = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n  int i;\n\n  for (i = 1; i < 30; i++) {\n    var intValue = Random().nextInt(i) % 10;\n    print(array[intValue]);\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x28\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a31d <main+457>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r15+0xaf]\n   0x000000000008a16d <+25>:\tmov    r10d,0x14\n   0x000000000008a173 <+31>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a178 <+36>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a17c <+40>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a183 <+47>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a187 <+51>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a18e <+58>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a192 <+62>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a199 <+69>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a19d <+73>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a1a4 <+80>:\tmov    QWORD PTR [rax+0x2f],r11\n   0x000000000008a1a8 <+84>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a1af <+91>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000008a1b3 <+95>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a1ba <+102>:\tmov    QWORD PTR [rax+0x3f],r11\n   0x000000000008a1be <+106>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a1c5 <+113>:\tmov    QWORD PTR [rax+0x47],r11\n   0x000000000008a1c9 <+117>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008a1d0 <+124>:\tmov    QWORD PTR [rax+0x4f],r11\n   0x000000000008a1d4 <+128>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a1db <+135>:\tmov    QWORD PTR [rax+0x57],r11\n   0x000000000008a1df <+139>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a1e6 <+146>:\tmov    QWORD PTR [rax+0x5f],r11\n   0x000000000008a1ea <+150>:\tmov    esi,0x1\n   0x000000000008a1ef <+155>:\tmov    QWORD PTR [rbp-0x8],rsi\n   0x000000000008a1f3 <+159>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1f7 <+163>:\tjbe    0x8a329 <main+469>\n   0x000000000008a1fd <+169>:\tcmp    rsi,0x1e\n   0x000000000008a201 <+173>:\tjge    0x8a314 <main+448>\n   0x000000000008a207 <+179>:\tcall   0x8a5a0 <_Random._nextSeed>\n   0x000000000008a20c <+184>:\tmov    rcx,rax\n   0x000000000008a20f <+187>:\tnot    rcx\n   0x000000000008a212 <+190>:\tshl    rax,0x15\n   0x000000000008a216 <+194>:\tadd    rcx,rax\n   0x000000000008a219 <+197>:\tmov    rax,rcx\n   0x000000000008a21c <+200>:\tshr    rax,0x18\n   0x000000000008a220 <+204>:\txor    rcx,rax\n   0x000000000008a223 <+207>:\timul   rcx,rcx,0x109\n   0x000000000008a22a <+214>:\tmov    rax,rcx\n   0x000000000008a22d <+217>:\tshr    rax,0xe\n   0x000000000008a231 <+221>:\txor    rcx,rax\n   0x000000000008a234 <+224>:\timul   rcx,rcx,0x15\n   0x000000000008a23b <+231>:\tmov    rax,rcx\n   0x000000000008a23e <+234>:\tshr    rax,0x1c\n   0x000000000008a242 <+238>:\txor    rcx,rax\n   0x000000000008a245 <+241>:\tmov    rax,rcx\n   0x000000000008a248 <+244>:\tshl    rax,0x1f\n   0x000000000008a24c <+248>:\tadd    rcx,rax\n   0x000000000008a24f <+251>:\tcmp    rcx,0x0\n   0x000000000008a253 <+255>:\tjne    0x8a25e <main+266>\n   0x000000000008a259 <+261>:\tmov    ecx,0x5a17\n   0x000000000008a25e <+266>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a262 <+270>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a266 <+274>:\tcall   0x8a594 <new _Random>\n   0x000000000008a26b <+279>:\tmov    rcx,rax\n   0x000000000008a26e <+282>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a272 <+286>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008a276 <+290>:\tmov    QWORD PTR [rcx+0x7],rax\n   0x000000000008a27a <+294>:\tmov    rdi,rcx\n   0x000000000008a27d <+297>:\tcall   0x8a564 <_Random._nextState>\n   0x000000000008a282 <+302>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a286 <+306>:\tcall   0x8a564 <_Random._nextState>\n   0x000000000008a28b <+311>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a28f <+315>:\tcall   0x8a564 <_Random._nextState>\n   0x000000000008a294 <+320>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a298 <+324>:\tcall   0x8a564 <_Random._nextState>\n   0x000000000008a29d <+329>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a2a1 <+333>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a2a5 <+337>:\tcall   0x8a39c <_Random.nextInt>\n   0x000000000008a2aa <+342>:\tmov    ecx,0xa\n   0x000000000008a2af <+347>:\tmov    r11,rax\n   0x000000000008a2b2 <+350>:\tmov    rax,QWORD PTR [r15+0x1847]\n   0x000000000008a2b9 <+357>:\timul   r11\n   0x000000000008a2bc <+360>:\tsar    rdx,0x2\n   0x000000000008a2c0 <+364>:\tmov    rax,rdx\n   0x000000000008a2c3 <+367>:\tshr    rdx,0x3f\n   0x000000000008a2c7 <+371>:\tadd    rdx,rax\n   0x000000000008a2ca <+374>:\tmov    rax,r11\n   0x000000000008a2cd <+377>:\tmov    r11d,0xa\n   0x000000000008a2d3 <+383>:\timul   rdx,r11\n   0x000000000008a2d7 <+387>:\tsub    rax,rdx\n   0x000000000008a2da <+390>:\tjge    0x8a2e3 <main+399>\n   0x000000000008a2e0 <+396>:\tadd    rax,r11\n   0x000000000008a2e3 <+399>:\tmov    rdx,rax\n   0x000000000008a2e6 <+402>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a2ea <+406>:\tmov    rbx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a2ef <+411>:\tmov    QWORD PTR [rsp],rbx\n   0x000000000008a2f3 <+415>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a2f8 <+420>:\tmov    rdi,rax\n   0x000000000008a2fb <+423>:\tcall   0x8a338 <printToConsole>\n   0x000000000008a300 <+428>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a304 <+432>:\tadd    rcx,0x1\n   0x000000000008a308 <+436>:\tmov    rsi,rcx\n   0x000000000008a30b <+439>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a30f <+443>:\tjmp    0x8a1ef <main+155>\n   0x000000000008a314 <+448>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a318 <+452>:\tmov    rsp,rbp\n   0x000000000008a31b <+455>:\tpop    rbp\n   0x000000000008a31c <+456>:\tret\n   0x000000000008a31d <+457>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a324 <+464>:\tjmp    0x8a166 <main+18>\n   0x000000000008a329 <+469>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a330 <+476>:\tjmp    0x8a1fd <main+169>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "price-fraction.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  for (double val = 0.0; val <= 1.0; val += 0.01) {\n    String strFmt(double n) => n.toStringAsFixed(2);\n\n    double adjusted = adjustDouble(val, ranges);\n    print(\"${strFmt(val)} -> ${strFmt(adjusted)}\");\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a208 <+0>:\tpush   rbp\n   0x000000000008a209 <+1>:\tmov    rbp,rsp\n   0x000000000008a20c <+4>:\tsub    rsp,0x40\n   0x000000000008a210 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a214 <+12>:\tjbe    0x8a433 <main+555>\n   0x000000000008a21a <+18>:\txorps  xmm1,xmm1\n   0x000000000008a21d <+21>:\tmovsd  xmm0,QWORD PTR [r15+0x17f7]\n   0x000000000008a226 <+30>:\tmovsd  QWORD PTR [rbp-0x30],xmm1\n   0x000000000008a22b <+35>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a22f <+39>:\tjbe    0x8a43f <main+567>\n   0x000000000008a235 <+45>:\tcomisd xmm1,xmm0\n   0x000000000008a239 <+49>:\tjp     0x8a42a <main+546>\n   0x000000000008a23f <+55>:\tja     0x8a42a <main+546>\n   0x000000000008a245 <+61>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008a249 <+65>:\tmov    rax,QWORD PTR [rax+0x7d8]\n   0x000000000008a250 <+72>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008a254 <+76>:\tjne    0x8a266 <main+94>\n   0x000000000008a25a <+82>:\tmov    rdx,QWORD PTR [r15+0x17ff]\n   0x000000000008a261 <+89>:\tcall   0x8327c <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008a266 <+94>:\tmov    rbx,QWORD PTR [rax+0x7]\n   0x000000000008a26a <+98>:\tmov    QWORD PTR [rbp-0x28],rbx\n   0x000000000008a26e <+102>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a272 <+106>:\tmov    rsi,rcx\n   0x000000000008a275 <+109>:\tsar    rsi,1\n   0x000000000008a278 <+112>:\tmov    QWORD PTR [rbp-0x20],rsi\n   0x000000000008a27c <+116>:\tmov    rdi,QWORD PTR [rax+0x17]\n   0x000000000008a280 <+120>:\tmov    QWORD PTR [rbp-0x18],rdi\n   0x000000000008a284 <+124>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x000000000008a289 <+129>:\txor    eax,eax\n   0x000000000008a28b <+131>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a28f <+135>:\tjbe    0x8a44b <main+579>\n   0x000000000008a295 <+141>:\tcmp    rax,rsi\n   0x000000000008a298 <+144>:\tjge    0x8a33b <main+307>\n   0x000000000008a29e <+150>:\tmov    r8,QWORD PTR [rdi+rax*8+0x17]\n   0x000000000008a2a3 <+155>:\tmov    QWORD PTR [rbp-0x10],r8\n   0x000000000008a2a7 <+159>:\tmov    r9,rax\n   0x000000000008a2aa <+162>:\tadd    r9,0x1\n   0x000000000008a2ae <+166>:\tmov    QWORD PTR [rbp-0x8],r9\n   0x000000000008a2b2 <+170>:\tcmp    r8,QWORD PTR [r14+0x70]\n   0x000000000008a2b6 <+174>:\tjne    0x8a2e5 <main+221>\n   0x000000000008a2bc <+180>:\tmov    rax,r8\n   0x000000000008a2bf <+183>:\tmov    rdx,rbx\n   0x000000000008a2c2 <+186>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a2c6 <+190>:\tcmp    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a2ca <+194>:\tje     0x8a2e5 <main+221>\n   0x000000000008a2d0 <+200>:\tmov    rsi,QWORD PTR [rdx+0x27]\n   0x000000000008a2d4 <+204>:\tmov    rbx,QWORD PTR [r15+0x16f]\n   0x000000000008a2db <+211>:\tmov    r9,QWORD PTR [r15+0x1807]\n   0x000000000008a2e2 <+218>:\tcall   QWORD PTR [rsi+0x7]\n   0x000000000008a2e5 <+221>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x000000000008a2ea <+226>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a2ee <+230>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a2f2 <+234>:\tmovsd  xmm1,QWORD PTR [rcx+0x7]\n   0x000000000008a2f7 <+239>:\tcomisd xmm0,xmm1\n   0x000000000008a2fb <+243>:\tjp     0x8a326 <main+286>\n   0x000000000008a301 <+249>:\tjb     0x8a326 <main+286>\n   0x000000000008a307 <+255>:\tmovsd  xmm1,QWORD PTR [rcx+0xf]\n   0x000000000008a30c <+260>:\tcomisd xmm0,xmm1\n   0x000000000008a310 <+264>:\tjp     0x8a326 <main+286>\n   0x000000000008a316 <+270>:\tjae    0x8a326 <main+286>\n   0x000000000008a31c <+276>:\tmovsd  xmm1,QWORD PTR [rax+0x17]\n   0x000000000008a321 <+281>:\tjmp    0x8a33e <main+310>\n   0x000000000008a326 <+286>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a32a <+290>:\tmov    rbx,QWORD PTR [rbp-0x28]\n   0x000000000008a32e <+294>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a332 <+298>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a336 <+302>:\tjmp    0x8a28b <main+131>\n   0x000000000008a33b <+307>:\tmovaps xmm1,xmm0\n   0x000000000008a33e <+310>:\tmovsd  QWORD PTR [rbp-0x38],xmm1\n   0x000000000008a343 <+315>:\tmov    rdi,QWORD PTR [r14+0x48]\n   0x000000000008a347 <+319>:\tadd    rdi,0x10\n   0x000000000008a34b <+323>:\tcmp    rdi,QWORD PTR [r14+0x50]\n   0x000000000008a34f <+327>:\tjae    0x8a457 <main+591>\n   0x000000000008a355 <+333>:\tmov    QWORD PTR [r14+0x48],rdi\n   0x000000000008a359 <+337>:\tsub    rdi,0xf\n   0x000000000008a35d <+341>:\tmov    QWORD PTR [rdi-0x1],0x3e15c\n   0x000000000008a365 <+349>:\tmovsd  QWORD PTR [rdi+0x7],xmm0\n   0x000000000008a36a <+354>:\tmov    esi,0x2\n   0x000000000008a36f <+359>:\tcall   0x8a504 <double.toStringAsFixed>\n   0x000000000008a374 <+364>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a378 <+368>:\tmov    r10d,0x6\n   0x000000000008a37e <+374>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a382 <+378>:\tcall   0x84d20 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a387 <+383>:\tmov    rcx,rax\n   0x000000000008a38a <+386>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a38e <+390>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a392 <+394>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a396 <+398>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a39d <+405>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a3a1 <+409>:\tmovsd  xmm0,QWORD PTR [rbp-0x38]\n   0x000000000008a3a6 <+414>:\tmov    rdi,QWORD PTR [r14+0x48]\n   0x000000000008a3aa <+418>:\tadd    rdi,0x10\n   0x000000000008a3ae <+422>:\tcmp    rdi,QWORD PTR [r14+0x50]\n   0x000000000008a3b2 <+426>:\tjae    0x8a47e <main+630>\n   0x000000000008a3b8 <+432>:\tmov    QWORD PTR [r14+0x48],rdi\n   0x000000000008a3bc <+436>:\tsub    rdi,0xf\n   0x000000000008a3c0 <+440>:\tmov    QWORD PTR [rdi-0x1],0x3e15c\n   0x000000000008a3c8 <+448>:\tmovsd  QWORD PTR [rdi+0x7],xmm0\n   0x000000000008a3cd <+453>:\tmov    esi,0x2\n   0x000000000008a3d2 <+458>:\tcall   0x8a504 <double.toStringAsFixed>\n   0x000000000008a3d7 <+463>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008a3db <+467>:\tlea    r13,[rdx+0x27]\n   0x000000000008a3df <+471>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a3e3 <+475>:\ttest   al,0x1\n   0x000000000008a3e5 <+477>:\tje     0x8a3fe <main+502>\n   0x000000000008a3e7 <+479>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a3eb <+483>:\tshr    r11d,0x2\n   0x000000000008a3ef <+487>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a3f3 <+491>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a3f7 <+495>:\tje     0x8a3fe <main+502>\n   0x000000000008a3f9 <+497>:\tcall   0x83338 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a3fe <+502>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008a402 <+506>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a406 <+510>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a40b <+515>:\tmov    rdi,rax\n   0x000000000008a40e <+518>:\tcall   0x8a4a0 <printToConsole>\n   0x000000000008a413 <+523>:\tmovsd  xmm0,QWORD PTR [r15+0x181f]\n   0x000000000008a41c <+532>:\tmovsd  xmm1,QWORD PTR [rbp-0x30]\n   0x000000000008a421 <+537>:\taddsd  xmm1,xmm0\n   0x000000000008a425 <+541>:\tjmp    0x8a21d <main+21>\n   0x000000000008a42a <+546>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a42e <+550>:\tmov    rsp,rbp\n   0x000000000008a431 <+553>:\tpop    rbp\n   0x000000000008a432 <+554>:\tret\n   0x000000000008a433 <+555>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a43a <+562>:\tjmp    0x8a21a <main+18>\n   0x000000000008a43f <+567>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a446 <+574>:\tjmp    0x8a235 <main+45>\n   0x000000000008a44b <+579>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a452 <+586>:\tjmp    0x8a295 <main+141>\n   0x000000000008a457 <+591>:\tsub    rsp,0x20\n   0x000000000008a45b <+595>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a45f <+599>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x000000000008a464 <+604>:\tcall   0x84ca0 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a469 <+609>:\tmov    rdi,rax\n   0x000000000008a46c <+612>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a470 <+616>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x000000000008a475 <+621>:\tadd    rsp,0x20\n   0x000000000008a479 <+625>:\tjmp    0x8a365 <main+349>\n   0x000000000008a47e <+630>:\tsub    rsp,0x10\n   0x000000000008a482 <+634>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a486 <+638>:\tpush   rcx\n   0x000000000008a487 <+639>:\tcall   0x84ca0 <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a48c <+644>:\tmov    rdi,rax\n   0x000000000008a48f <+647>:\tpop    rcx\n   0x000000000008a490 <+648>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a494 <+652>:\tadd    rsp,0x10\n   0x000000000008a498 <+656>:\tjmp    0x8a3c8 <main+448>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "primality-by-wilsons-theorem.dart",
  "functions": [
    {
      "name": "factorial",
      "source": "BigInt factorial(BigInt n) {\n  if (n == BigInt.zero) {\n    return BigInt.one;\n  }\n\n  BigInt result = BigInt.one;\n  for (BigInt i = n; i > BigInt.zero; i = i - BigInt.one) {\n    result *= i;\n  }\n\n  return result;\n}",
      "assembly": "Dump of assembler code for function factorial:\n   0x0000000000091ab4 <+0>:\tpush   rbp\n   0x0000000000091ab5 <+1>:\tmov    rbp,rsp\n   0x0000000000091ab8 <+4>:\tsub    rsp,0x30\n   0x0000000000091abc <+8>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x0000000000091ac0 <+12>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091ac4 <+16>:\tjbe    0x91bb7 <factorial+259>\n   0x0000000000091aca <+22>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000091ace <+26>:\tmov    rax,QWORD PTR [rax+0x620]\n   0x0000000000091ad5 <+33>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000091ad9 <+37>:\tjne    0x91aeb <factorial+55>\n   0x0000000000091adf <+43>:\tmov    rdx,QWORD PTR [r15+0x182f]\n   0x0000000000091ae6 <+50>:\tcall   0x8a6d0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000091aeb <+55>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000091aef <+59>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x0000000000091af3 <+63>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x0000000000091af8 <+68>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000091afc <+72>:\tcall   0x858a8 <_BigIntImpl.==>\n   0x0000000000091b01 <+77>:\ttest   al,0x10\n   0x0000000000091b03 <+79>:\tjne    0x91b2f <factorial+123>\n   0x0000000000091b09 <+85>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000091b0d <+89>:\tmov    rax,QWORD PTR [rax+0x628]\n   0x0000000000091b14 <+96>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000091b18 <+100>:\tjne    0x91b2a <factorial+118>\n   0x0000000000091b1e <+106>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x0000000000091b25 <+113>:\tcall   0x8a6d0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000091b2a <+118>:\tmov    rsp,rbp\n   0x0000000000091b2d <+121>:\tpop    rbp\n   0x0000000000091b2e <+122>:\tret\n   0x0000000000091b2f <+123>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000091b33 <+127>:\tmov    rax,QWORD PTR [rax+0x628]\n   0x0000000000091b3a <+134>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000091b3e <+138>:\tjne    0x91b50 <factorial+156>\n   0x0000000000091b44 <+144>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x0000000000091b4b <+151>:\tcall   0x8a6d0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000091b50 <+156>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x0000000000091b54 <+160>:\tmov    rdx,rax\n   0x0000000000091b57 <+163>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000091b5b <+167>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x0000000000091b5f <+171>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x0000000000091b63 <+175>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091b67 <+179>:\tjbe    0x91bc3 <factorial+271>\n   0x0000000000091b6d <+185>:\tmov    rdi,rcx\n   0x0000000000091b70 <+188>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x0000000000091b74 <+192>:\tcall   0x85928 <_BigIntImpl.compareTo>\n   0x0000000000091b79 <+197>:\tcmp    rax,0x0\n   0x0000000000091b7d <+201>:\tjle    0x91bae <factorial+250>\n   0x0000000000091b83 <+207>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000091b87 <+211>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x0000000000091b8b <+215>:\tcall   0x91bcc <_BigIntImpl.*>\n   0x0000000000091b90 <+220>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x0000000000091b94 <+224>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x0000000000091b98 <+228>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x0000000000091b9c <+232>:\tcall   0x80510 <_BigIntImpl.->\n   0x0000000000091ba1 <+237>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x0000000000091ba5 <+241>:\tmov    rcx,rax\n   0x0000000000091ba8 <+244>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x0000000000091bac <+248>:\tjmp    0x91b5b <factorial+167>\n   0x0000000000091bae <+250>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000091bb2 <+254>:\tmov    rsp,rbp\n   0x0000000000091bb5 <+257>:\tpop    rbp\n   0x0000000000091bb6 <+258>:\tret\n   0x0000000000091bb7 <+259>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091bbe <+266>:\tjmp    0x91aca <factorial+22>\n   0x0000000000091bc3 <+271>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091bca <+278>:\tjmp    0x91b6d <factorial+185>\nEnd of assembler dump.\n"
    },
    {
      "name": "isWilsonPrime",
      "source": "bool isWilsonPrime(BigInt n) {\n  if (n < BigInt.from(2)) {\n    return false;\n  }\n\n  return (factorial(n - BigInt.one) + BigInt.one) % n == BigInt.zero;\n}",
      "assembly": "Dump of assembler code for function isWilsonPrime:\n   0x0000000000091944 <+0>:\tpush   rbp\n   0x0000000000091945 <+1>:\tmov    rbp,rsp\n   0x0000000000091948 <+4>:\tsub    rsp,0x20\n   0x000000000009194c <+8>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x0000000000091950 <+12>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091954 <+16>:\tjbe    0x91a28 <isWilsonPrime+228>\n   0x000000000009195a <+22>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000009195e <+26>:\tmov    rax,QWORD PTR [rax+0x630]\n   0x0000000000091965 <+33>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000091969 <+37>:\tjne    0x9197b <isWilsonPrime+55>\n   0x000000000009196f <+43>:\tmov    rdx,QWORD PTR [r15+0x1837]\n   0x0000000000091976 <+50>:\tcall   0x8a6d0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000009197b <+55>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000009197f <+59>:\tmov    rsi,rax\n   0x0000000000091982 <+62>:\tcall   0x91d80 <_BigIntImpl.<>\n   0x0000000000091987 <+67>:\ttest   al,0x10\n   0x0000000000091989 <+69>:\tjne    0x9199b <isWilsonPrime+87>\n   0x000000000009198f <+75>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x0000000000091996 <+82>:\tmov    rsp,rbp\n   0x0000000000091999 <+85>:\tpop    rbp\n   0x000000000009199a <+86>:\tret\n   0x000000000009199b <+87>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000009199f <+91>:\tmov    rax,QWORD PTR [rax+0x628]\n   0x00000000000919a6 <+98>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x00000000000919aa <+102>:\tjne    0x919bc <isWilsonPrime+120>\n   0x00000000000919b0 <+108>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x00000000000919b7 <+115>:\tcall   0x8a6d0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x00000000000919bc <+120>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x00000000000919c0 <+124>:\tmov    rsi,rax\n   0x00000000000919c3 <+127>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x00000000000919c7 <+131>:\tcall   0x80510 <_BigIntImpl.->\n   0x00000000000919cc <+136>:\tmov    rdi,rax\n   0x00000000000919cf <+139>:\tcall   0x91ab4 <factorial>\n   0x00000000000919d4 <+144>:\tmov    rdi,rax\n   0x00000000000919d7 <+147>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x00000000000919db <+151>:\tcall   0x91880 <_BigIntImpl.+>\n   0x00000000000919e0 <+156>:\tmov    rdi,rax\n   0x00000000000919e3 <+159>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x00000000000919e7 <+163>:\tcall   0x91a34 <_BigIntImpl.%>\n   0x00000000000919ec <+168>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x00000000000919f0 <+172>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x00000000000919f4 <+176>:\tmov    rax,QWORD PTR [rax+0x620]\n   0x00000000000919fb <+183>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x00000000000919ff <+187>:\tjne    0x91a11 <isWilsonPrime+205>\n   0x0000000000091a05 <+193>:\tmov    rdx,QWORD PTR [r15+0x182f]\n   0x0000000000091a0c <+200>:\tcall   0x8a6d0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000091a11 <+205>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x0000000000091a15 <+209>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x0000000000091a1a <+214>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000091a1e <+218>:\tcall   0x858a8 <_BigIntImpl.==>\n   0x0000000000091a23 <+223>:\tmov    rsp,rbp\n   0x0000000000091a26 <+226>:\tpop    rbp\n   0x0000000000091a27 <+227>:\tret\n   0x0000000000091a28 <+228>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091a2f <+235>:\tjmp    0x9195a <isWilsonPrime+22>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  var wilsonPrimes = [];\n  for (var i = BigInt.one; i <= BigInt.from(100); i += BigInt.one) {\n    if (isWilsonPrime(i)) {\n      wilsonPrimes.add(i);\n    }\n  }\n\n  print(wilsonPrimes);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x00000000000916a0 <+0>:\tpush   rbp\n   0x00000000000916a1 <+1>:\tmov    rbp,rsp\n   0x00000000000916a4 <+4>:\tsub    rsp,0x20\n   0x00000000000916a8 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000916ac <+12>:\tjbe    0x917d4 <main+308>\n   0x00000000000916b2 <+18>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x00000000000916b6 <+22>:\txor    esi,esi\n   0x00000000000916b8 <+24>:\tcall   0x586e8 <new _GrowableList>\n   0x00000000000916bd <+29>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x00000000000916c1 <+33>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x00000000000916c5 <+37>:\tmov    rax,QWORD PTR [rax+0x628]\n   0x00000000000916cc <+44>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x00000000000916d0 <+48>:\tjne    0x916e2 <main+66>\n   0x00000000000916d6 <+54>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x00000000000916dd <+61>:\tcall   0x8a6d0 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x00000000000916e2 <+66>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x00000000000916e6 <+70>:\tmov    rdx,rax\n   0x00000000000916e9 <+73>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x00000000000916ed <+77>:\tmov    QWORD PTR [rbp-0x10],rdx\n   0x00000000000916f1 <+81>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000916f5 <+85>:\tjbe    0x917e0 <main+320>\n   0x00000000000916fb <+91>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x00000000000916ff <+95>:\tmov    esi,0x64\n   0x0000000000091704 <+100>:\tcall   0x91de4 <new _BigIntImpl.from>\n   0x0000000000091709 <+105>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000009170d <+109>:\tmov    rsi,rax\n   0x0000000000091710 <+112>:\tcall   0x85928 <_BigIntImpl.compareTo>\n   0x0000000000091715 <+117>:\tcmp    rax,0x0\n   0x0000000000091719 <+121>:\tjg     0x917c2 <main+290>\n   0x000000000009171f <+127>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x0000000000091723 <+131>:\tcall   0x91944 <isWilsonPrime>\n   0x0000000000091728 <+136>:\ttest   al,0x10\n   0x000000000009172a <+138>:\tjne    0x917a5 <main+261>\n   0x0000000000091730 <+144>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000091734 <+148>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x0000000000091738 <+152>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000009173c <+156>:\tmov    rbx,QWORD PTR [rdx+0xf]\n   0x0000000000091740 <+160>:\tsar    rcx,1\n   0x0000000000091743 <+163>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x0000000000091747 <+167>:\tsar    rbx,1\n   0x000000000009174a <+170>:\tcmp    rcx,rbx\n   0x000000000009174d <+173>:\tjne    0x9175b <main+187>\n   0x0000000000091753 <+179>:\tmov    rdi,rax\n   0x0000000000091756 <+182>:\tcall   0x53eb8 <List._growToNextCapacity>\n   0x000000000009175b <+187>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000009175f <+191>:\tmov    rbx,QWORD PTR [rbp-0x20]\n   0x0000000000091763 <+195>:\tmov    rax,rbx\n   0x0000000000091766 <+198>:\tadd    rax,0x1\n   0x000000000009176a <+202>:\tmov    rdx,rax\n   0x000000000009176d <+205>:\tadd    rdx,rdx\n   0x0000000000091770 <+208>:\tmov    QWORD PTR [rcx+0xf],rdx\n   0x0000000000091774 <+212>:\tmov    rdx,QWORD PTR [rcx+0x17]\n   0x0000000000091778 <+216>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000009177c <+220>:\tlea    r13,[rdx+rbx*8+0x17]\n   0x0000000000091781 <+225>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000091785 <+229>:\ttest   al,0x1\n   0x0000000000091787 <+231>:\tje     0x917a0 <main+256>\n   0x0000000000091789 <+233>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000009178d <+237>:\tshr    r11d,0x2\n   0x0000000000091791 <+241>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091795 <+245>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091799 <+249>:\tje     0x917a0 <main+256>\n   0x000000000009179b <+251>:\tcall   0x8a7d4 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x00000000000917a0 <+256>:\tjmp    0x917a9 <main+265>\n   0x00000000000917a5 <+261>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x00000000000917a9 <+265>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x00000000000917ad <+269>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x00000000000917b1 <+273>:\tcall   0x91880 <_BigIntImpl.+>\n   0x00000000000917b6 <+278>:\tmov    rdx,rax\n   0x00000000000917b9 <+281>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x00000000000917bd <+285>:\tjmp    0x916e9 <main+73>\n   0x00000000000917c2 <+290>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x00000000000917c6 <+294>:\tcall   0x917ec <print>\n   0x00000000000917cb <+299>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x00000000000917cf <+303>:\tmov    rsp,rbp\n   0x00000000000917d2 <+306>:\tpop    rbp\n   0x00000000000917d3 <+307>:\tret\n   0x00000000000917d4 <+308>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000917db <+315>:\tjmp    0x916b2 <main+18>\n   0x00000000000917e0 <+320>:\tcall   QWORD PTR [r14+0x230]\n   0x00000000000917e7 <+327>:\tjmp    0x916fb <main+91>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "primality-by-trial-division.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  for (int i = 1; i <= 99; ++i) if (isPrime(i)) print('$i ');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a294 <+0>:\tpush   rbp\n   0x000000000008a295 <+1>:\tmov    rbp,rsp\n   0x000000000008a298 <+4>:\tsub    rsp,0x28\n   0x000000000008a29c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2a0 <+12>:\tjbe    0x8a3fe <main+362>\n   0x000000000008a2a6 <+18>:\tmov    ecx,0x1\n   0x000000000008a2ab <+23>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a2af <+27>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2b3 <+31>:\tjbe    0x8a40a <main+374>\n   0x000000000008a2b9 <+37>:\tcmp    rcx,0x63\n   0x000000000008a2bd <+41>:\tjg     0x8a3f5 <main+353>\n   0x000000000008a2c3 <+47>:\tcmp    rcx,0x1\n   0x000000000008a2c7 <+51>:\tjle    0x8a3e8 <main+340>\n   0x000000000008a2cd <+57>:\tcmp    rcx,0x2\n   0x000000000008a2d1 <+61>:\tje     0x8a399 <main+261>\n   0x000000000008a2d7 <+67>:\tmov    rax,rcx\n   0x000000000008a2da <+70>:\tadd    rax,rax\n   0x000000000008a2dd <+73>:\tjno    0x8a2ec <main+88>\n   0x000000000008a2e3 <+79>:\tcall   0x85030 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a2e8 <+84>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a2ec <+88>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a2f0 <+92>:\tmov    edx,0x2\n   0x000000000008a2f5 <+97>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a2f9 <+101>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2fd <+105>:\tjbe    0x8a416 <main+386>\n   0x000000000008a303 <+111>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008a307 <+115>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a30c <+120>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a310 <+124>:\tcall   0x82a20 <new _Double.fromInteger>\n   0x000000000008a315 <+129>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008a31a <+134>:\tsqrtsd xmm1,xmm0\n   0x000000000008a31e <+138>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a322 <+142>:\txorps  xmm0,xmm0\n   0x000000000008a325 <+145>:\tcvtsi2sd xmm0,rcx\n   0x000000000008a32a <+150>:\tcomisd xmm0,xmm1\n   0x000000000008a32e <+154>:\tjp     0x8a395 <main+257>\n   0x000000000008a334 <+160>:\tja     0x8a395 <main+257>\n   0x000000000008a33a <+166>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a33e <+170>:\ttest   rcx,rcx\n   0x000000000008a341 <+173>:\tje     0x8a422 <main+398>\n   0x000000000008a347 <+179>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a34b <+183>:\tje     0x8a436 <main+418>\n   0x000000000008a351 <+189>:\tmovsxd rdx,eax\n   0x000000000008a354 <+192>:\tcmp    rdx,rax\n   0x000000000008a357 <+195>:\tjne    0x8a369 <main+213>\n   0x000000000008a359 <+197>:\tmovsxd rdx,ecx\n   0x000000000008a35c <+200>:\tcmp    rdx,rcx\n   0x000000000008a35f <+203>:\tjne    0x8a369 <main+213>\n   0x000000000008a361 <+205>:\tcdq\n   0x000000000008a362 <+206>:\tidiv   ecx\n   0x000000000008a364 <+208>:\tmovsxd rdx,edx\n   0x000000000008a367 <+211>:\tjmp    0x8a36e <main+218>\n   0x000000000008a369 <+213>:\tcqo\n   0x000000000008a36b <+215>:\tidiv   rcx\n   0x000000000008a36e <+218>:\ttest   rdx,rdx\n   0x000000000008a371 <+221>:\tjl     0x8a43d <main+425>\n   0x000000000008a377 <+227>:\tcmp    rdx,0x0\n   0x000000000008a37b <+231>:\tje     0x8a3e8 <main+340>\n   0x000000000008a381 <+237>:\tadd    rcx,0x1\n   0x000000000008a385 <+241>:\tmov    rdx,rcx\n   0x000000000008a388 <+244>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a38c <+248>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a390 <+252>:\tjmp    0x8a2f5 <main+97>\n   0x000000000008a395 <+257>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a399 <+261>:\tmov    rax,rcx\n   0x000000000008a39c <+264>:\tadd    rax,rax\n   0x000000000008a39f <+267>:\tjno    0x8a3ae <main+282>\n   0x000000000008a3a5 <+273>:\tcall   0x85030 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a3aa <+278>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a3ae <+282>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a3b2 <+286>:\tmov    r10d,0x4\n   0x000000000008a3b8 <+292>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a3bc <+296>:\tcall   0x84dac <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a3c1 <+301>:\tmov    rcx,rax\n   0x000000000008a3c4 <+304>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a3c8 <+308>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a3cc <+312>:\tmov    r11,QWORD PTR [r15+0x5df]\n   0x000000000008a3d3 <+319>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a3d7 <+323>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a3db <+327>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a3e0 <+332>:\tmov    rdi,rax\n   0x000000000008a3e3 <+335>:\tcall   0x8a454 <printToConsole>\n   0x000000000008a3e8 <+340>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a3ec <+344>:\tadd    rcx,0x1\n   0x000000000008a3f0 <+348>:\tjmp    0x8a2ab <main+23>\n   0x000000000008a3f5 <+353>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a3f9 <+357>:\tmov    rsp,rbp\n   0x000000000008a3fc <+360>:\tpop    rbp\n   0x000000000008a3fd <+361>:\tret\n   0x000000000008a3fe <+362>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a405 <+369>:\tjmp    0x8a2a6 <main+18>\n   0x000000000008a40a <+374>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a411 <+381>:\tjmp    0x8a2b9 <main+37>\n   0x000000000008a416 <+386>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a41d <+393>:\tjmp    0x8a303 <main+111>\n   0x000000000008a422 <+398>:\tpush   rcx\n   0x000000000008a423 <+399>:\tpush   rax\n   0x000000000008a424 <+400>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a42b <+407>:\txor    r10d,r10d\n   0x000000000008a42e <+410>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a435 <+417>:\tint3\n   0x000000000008a436 <+418>:\txor    edx,edx\n   0x000000000008a438 <+420>:\tjmp    0x8a377 <main+227>\n   0x000000000008a43d <+425>:\ttest   rcx,rcx\n   0x000000000008a440 <+428>:\tjl     0x8a44a <main+438>\n   0x000000000008a442 <+430>:\tadd    rdx,rcx\n   0x000000000008a445 <+433>:\tjmp    0x8a377 <main+227>\n   0x000000000008a44a <+438>:\tsub    rdx,rcx\n   0x000000000008a44d <+441>:\tjmp    0x8a377 <main+227>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "pseudo-random-numbers-pcg32.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var pcg32 = PCG32(BigInt.from(42), BigInt.from(54));\n\n  for (int i = 0; i < 5; i++) {\n    print(pcg32.nextInt().toString());\n  }\n\n  pcg32.seed(BigInt.from(987654321), BigInt.one);\n\n  var count = <int, int>{};\n\n  for (int i = 0; i < 100000; i++) {\n    int key = (pcg32.nextFloat() * 5).truncate();\n    count[key] = (count[key] ?? 0) + 1;\n  }\n\n  print('\\nThe counts for 100,000 repetitions are:');\n  count.forEach((key, value) {\n    print('$key : $value');\n  });\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000091818 <+0>:\tpush   rbp\n   0x0000000000091819 <+1>:\tmov    rbp,rsp\n   0x000000000009181c <+4>:\tsub    rsp,0x48\n   0x0000000000091820 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091824 <+12>:\tjbe    0x91a4d <main+565>\n   0x000000000009182a <+18>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000009182e <+22>:\tmov    esi,0x2a\n   0x0000000000091833 <+27>:\tcall   0x94484 <new _BigIntImpl.from>\n   0x0000000000091838 <+32>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000009183c <+36>:\tmov    esi,0x36\n   0x0000000000091841 <+41>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000091845 <+45>:\tcall   0x94484 <new _BigIntImpl.from>\n   0x000000000009184a <+50>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000009184e <+54>:\tcall   0x94478 <new PCG32>\n   0x0000000000091853 <+59>:\tmov    rdi,rax\n   0x0000000000091856 <+62>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000009185a <+66>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000009185e <+70>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000091862 <+74>:\tcall   0x93ab0 <new PCG32>\n   0x0000000000091867 <+79>:\txor    eax,eax\n   0x0000000000091869 <+81>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000009186d <+85>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091871 <+89>:\tjbe    0x91a59 <main+577>\n   0x0000000000091877 <+95>:\tcmp    rax,0x5\n   0x000000000009187b <+99>:\tjge    0x918a5 <main+141>\n   0x0000000000091881 <+105>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000091885 <+109>:\tcall   0x931ec <PCG32.nextInt>\n   0x000000000009188a <+114>:\tmov    QWORD PTR [rsp],rax\n   0x000000000009188e <+118>:\tcall   0x7e898 <_BigIntImpl.toString>\n   0x0000000000091893 <+123>:\tmov    rdi,rax\n   0x0000000000091896 <+126>:\tcall   0x93188 <printToConsole>\n   0x000000000009189b <+131>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000009189f <+135>:\tadd    rax,0x1\n   0x00000000000918a3 <+139>:\tjmp    0x91869 <main+81>\n   0x00000000000918a5 <+141>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x00000000000918a9 <+145>:\tmov    esi,0x3ade68b1\n   0x00000000000918ae <+150>:\tcall   0x94484 <new _BigIntImpl.from>\n   0x00000000000918b3 <+155>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x00000000000918b7 <+159>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x00000000000918bb <+163>:\tmov    rax,QWORD PTR [rax+0x640]\n   0x00000000000918c2 <+170>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x00000000000918c6 <+174>:\tjne    0x918d8 <main+192>\n   0x00000000000918cc <+180>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x00000000000918d3 <+187>:\tcall   0x8a848 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x00000000000918d8 <+192>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x00000000000918dc <+196>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x00000000000918e0 <+200>:\tmov    rdx,rax\n   0x00000000000918e3 <+203>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x00000000000918e7 <+207>:\tcall   0x9273c <PCG32.seed>\n   0x00000000000918ec <+212>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x00000000000918f3 <+219>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x00000000000918f8 <+224>:\tmov    r11,QWORD PTR [r14+0x88]\n   0x00000000000918ff <+231>:\tmov    QWORD PTR [rsp],r11\n   0x0000000000091903 <+235>:\tcall   0x6c63c <new Map._fromLiteral>\n   0x0000000000091908 <+240>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000009190c <+244>:\txor    ecx,ecx\n   0x000000000009190e <+246>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x0000000000091912 <+250>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091916 <+254>:\tjbe    0x91a65 <main+589>\n   0x000000000009191c <+260>:\tcmp    rcx,0x186a0\n   0x0000000000091923 <+267>:\tjge    0x91a1c <main+516>\n   0x0000000000091929 <+273>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000009192d <+277>:\tcall   0x931ec <PCG32.nextInt>\n   0x0000000000091932 <+282>:\tmov    rdi,rax\n   0x0000000000091935 <+285>:\tcall   0x91e08 <_BigIntImpl.toDouble>\n   0x000000000009193a <+290>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000009193e <+294>:\tmov    esi,0x20\n   0x0000000000091943 <+299>:\tmovsd  QWORD PTR [rbp-0x38],xmm0\n   0x0000000000091948 <+304>:\tcall   0x91adc <_BigIntImpl.<<>\n   0x000000000009194d <+309>:\tmov    rdi,rax\n   0x0000000000091950 <+312>:\tcall   0x91e08 <_BigIntImpl.toDouble>\n   0x0000000000091955 <+317>:\tmovsd  xmm1,QWORD PTR [rbp-0x38]\n   0x000000000009195a <+322>:\tdivsd  xmm1,xmm0\n   0x000000000009195e <+326>:\tmovsd  xmm0,QWORD PTR [r15+0x1817]\n   0x0000000000091967 <+335>:\tmulsd  xmm1,xmm0\n   0x000000000009196b <+339>:\tcvttsd2si rax,xmm1\n   0x0000000000091970 <+344>:\tmov    rcx,rax\n   0x0000000000091973 <+347>:\tshl    rcx,1\n   0x0000000000091976 <+350>:\tjo     0x91a71 <main+601>\n   0x000000000009197c <+356>:\tadd    rax,rax\n   0x000000000009197f <+359>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x0000000000091983 <+363>:\tmov    rsi,rax\n   0x0000000000091986 <+366>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000009198a <+370>:\tcall   0x73af8 <_LinkedHashMapMixin._getValueOrData>\n   0x000000000009198f <+375>:\tmov    rdx,rax\n   0x0000000000091992 <+378>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x0000000000091996 <+382>:\tmov    rcx,QWORD PTR [rax+0x17]\n   0x000000000009199a <+386>:\tcmp    rcx,rdx\n   0x000000000009199d <+389>:\tjne    0x919a7 <main+399>\n   0x00000000000919a3 <+395>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x00000000000919a7 <+399>:\tcmp    rdx,QWORD PTR [r14+0x70]\n   0x00000000000919ab <+403>:\tjne    0x919b8 <main+416>\n   0x00000000000919b1 <+409>:\txor    ecx,ecx\n   0x00000000000919b3 <+411>:\tjmp    0x919c5 <main+429>\n   0x00000000000919b8 <+416>:\tsar    rdx,1\n   0x00000000000919bb <+419>:\tjae    0x919c2 <main+426>\n   0x00000000000919bd <+421>:\tmov    rdx,QWORD PTR [rdx+rdx*1+0x8]\n   0x00000000000919c2 <+426>:\tmov    rcx,rdx\n   0x00000000000919c5 <+429>:\tadd    rcx,0x1\n   0x00000000000919c9 <+433>:\tmov    rdi,rax\n   0x00000000000919cc <+436>:\tmov    rsi,QWORD PTR [rbp-0x28]\n   0x00000000000919d0 <+440>:\tmov    QWORD PTR [rbp-0x30],rcx\n   0x00000000000919d4 <+444>:\tcall   0x5dbdc <_OperatorEqualsAndHashCode._hashCode>\n   0x00000000000919d9 <+449>:\tmov    rdx,rax\n   0x00000000000919dc <+452>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x00000000000919e0 <+456>:\tmov    rax,rcx\n   0x00000000000919e3 <+459>:\tadd    rax,rax\n   0x00000000000919e6 <+462>:\tjno    0x919f5 <main+477>\n   0x00000000000919ec <+468>:\tcall   0x8c5b8 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x00000000000919f1 <+473>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x00000000000919f5 <+477>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x00000000000919f9 <+481>:\tmov    rsi,QWORD PTR [rbp-0x28]\n   0x00000000000919fd <+485>:\tmov    rbx,rdx\n   0x0000000000091a00 <+488>:\tmov    rdx,rax\n   0x0000000000091a03 <+491>:\tcall   0x5dd1c <_LinkedHashMapMixin._set>\n   0x0000000000091a08 <+496>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x0000000000091a0c <+500>:\tadd    rax,0x1\n   0x0000000000091a10 <+504>:\tmov    rcx,rax\n   0x0000000000091a13 <+507>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x0000000000091a17 <+511>:\tjmp    0x9190e <main+246>\n   0x0000000000091a1c <+516>:\tmov    rdi,QWORD PTR [r15+0x181f]\n   0x0000000000091a23 <+523>:\tcall   0x93188 <printToConsole>\n   0x0000000000091a28 <+528>:\tmov    rbx,QWORD PTR [r15+0x1827]\n   0x0000000000091a2f <+535>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x0000000000091a33 <+539>:\tcall   0x8b750 <stub _iso_stub_AllocateClosureStub>\n   0x0000000000091a38 <+544>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x0000000000091a3c <+548>:\tmov    rsi,rax\n   0x0000000000091a3f <+551>:\tcall   0x78b3c <_LinkedHashMapMixin.forEach>\n   0x0000000000091a44 <+556>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000091a48 <+560>:\tmov    rsp,rbp\n   0x0000000000091a4b <+563>:\tpop    rbp\n   0x0000000000091a4c <+564>:\tret\n   0x0000000000091a4d <+565>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091a54 <+572>:\tjmp    0x9182a <main+18>\n   0x0000000000091a59 <+577>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091a60 <+584>:\tjmp    0x91877 <main+95>\n   0x0000000000091a65 <+589>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000091a6c <+596>:\tjmp    0x9191c <main+260>\n   0x0000000000091a71 <+601>:\tsub    rsp,0x20\n   0x0000000000091a75 <+605>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x0000000000091a79 <+609>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x0000000000091a7e <+614>:\tmovaps xmm0,xmm1\n   0x0000000000091a81 <+617>:\tmov    eax,0x4a\n   0x0000000000091a86 <+622>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x0000000000091a8d <+629>:\tcall   QWORD PTR [r11+0x7]\n   0x0000000000091a91 <+633>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x0000000000091a95 <+637>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x0000000000091a9a <+642>:\tadd    rsp,0x20\n   0x0000000000091a9e <+646>:\tjmp    0x9197f <main+359>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "pythagoras-tree-1.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var basis = [(Point(-200.0, 0.0), Point(200.0, 0.0))];\n  final groups = Iterable.generate(12, (lvl) {\n    final basis0 = basis;\n    basis = [];\n    final lvlPolygons = basis0.map((pp) {\n      final (a, b) = pp;\n      final v =  Point((b - a).y, (a - b).x);\n      final [c, d, e] = [a, b, (a + b + v) * 0.5].map((p) => p + v).toList();\n      basis.addAll([(c, e), (e, d)]);\n      return '<polygon points=\"${[a, c, e, d, c, d, b].expand((p) => [p.x, p.y]).join(' ')}\"/>';\n    }).join('\\n');\n    rg(int step) => ((80 + (lvl - 2) * step) & 255).toRadixString(16).padLeft(2, '0');\n    return '<g fill=\"#${rg(20)}${rg(30)}18\">\\n$lvlPolygons\\n</g>';\n  }).join('\\n');\n  final (x, y) = basis.fold((0.0, 0.0), (p, pp) => (min(p.$1, pp.$1.x), min(p.$2, pp.$1.y)));\n  final attrs = 'viewBox=\"$x $y ${-x - x} ${-y}\" stroke=\"white\" xmlns=\"http://www.w3.org/2000/svg\"';\n  File('Pythagor_tree.svg').writeAsString('<svg $attrs>\\n$groups\\n</svg>');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000009120c <+0>:\tpush   rbp\n   0x000000000009120d <+1>:\tmov    rbp,rsp\n   0x0000000000091210 <+4>:\tsub    rsp,0x38\n   0x0000000000091214 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000091218 <+12>:\tjbe    0x91598 <main+908>\n   0x000000000009121e <+18>:\tmov    rdx,QWORD PTR [r15+0x17f7]\n   0x0000000000091225 <+25>:\tcall   0x93be8 <new Point>\n   0x000000000009122a <+30>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x0000000000091233 <+39>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000091237 <+43>:\tmovsd  QWORD PTR [rax+0xf],xmm0\n   0x000000000009123c <+48>:\txorps  xmm0,xmm0\n   0x000000000009123f <+51>:\tmovsd  QWORD PTR [rax+0x17],xmm0\n   0x0000000000091244 <+56>:\tmov    rdx,QWORD PTR [r15+0x17f7]\n   0x000000000009124b <+63>:\tcall   0x93be8 <new Point>\n   0x0000000000091250 <+68>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x0000000000091259 <+77>:\tmovsd  QWORD PTR [rax+0xf],xmm0\n   0x000000000009125e <+82>:\txorps  xmm0,xmm0\n   0x0000000000091261 <+85>:\tmovsd  QWORD PTR [rax+0x17],xmm0\n   0x0000000000091266 <+90>:\tmov    rbx,QWORD PTR [rbp-0x8]\n   0x000000000009126a <+94>:\tmov    rdx,rax\n   0x000000000009126d <+97>:\tcall   0x8ab5c <stub _iso_stub_AllocateRecord2Stub>\n   0x0000000000091272 <+102>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000091276 <+106>:\tmov    r10d,0x2\n   0x000000000009127c <+112>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000091280 <+116>:\tcall   0x8bd08 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000091285 <+121>:\tmov    rcx,rax\n   0x0000000000091288 <+124>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000009128c <+128>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x0000000000091290 <+132>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x0000000000091294 <+136>:\tmov    rdx,QWORD PTR [r15+0x180f]\n   0x000000000009129b <+143>:\tcall   0x8adc8 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x00000000000912a0 <+148>:\tmov    rcx,rax\n   0x00000000000912a3 <+151>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x00000000000912a7 <+155>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x00000000000912ab <+159>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x00000000000912af <+163>:\tmov    QWORD PTR [rcx+0xf],0x2\n   0x00000000000912b7 <+171>:\tmov    r10d,0x1\n   0x00000000000912bd <+177>:\tcall   0x8adf8 <stub _iso_stub_AllocateContextStub>\n   0x00000000000912c2 <+182>:\tmov    rcx,rax\n   0x00000000000912c5 <+185>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x00000000000912c9 <+189>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x00000000000912cd <+193>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x00000000000912d1 <+197>:\tmov    rdx,rcx\n   0x00000000000912d4 <+200>:\tmov    rbx,QWORD PTR [r15+0x1817]\n   0x00000000000912db <+207>:\tcall   0x8b124 <stub _iso_stub_AllocateClosureStub>\n   0x00000000000912e0 <+212>:\tmov    rsi,rax\n   0x00000000000912e3 <+215>:\tmov    rdi,QWORD PTR [r15+0xaf]\n   0x00000000000912ea <+222>:\tcall   0x93bb0 <new Iterable.generate>\n   0x00000000000912ef <+227>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x00000000000912f2 <+230>:\tshr    ecx,0xc\n   0x00000000000912f5 <+233>:\tmov    rdi,rax\n   0x00000000000912f8 <+236>:\tmov    rsi,QWORD PTR [r15+0x181f]\n   0x00000000000912ff <+243>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000091303 <+247>:\tcall   QWORD PTR [rax+rcx*8+0xda8]\n   0x000000000009130a <+254>:\tmov    rcx,rax\n   0x000000000009130d <+257>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000091311 <+261>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x0000000000091315 <+265>:\tmov    rsi,QWORD PTR [rax+0x17]\n   0x0000000000091319 <+269>:\tmov    QWORD PTR [rbp-0x8],rsi\n   0x000000000009131d <+273>:\tmov    rbx,QWORD PTR [r15+0x1827]\n   0x0000000000091324 <+280>:\tmov    rdx,QWORD PTR [r15+0x1827]\n   0x000000000009132b <+287>:\tcall   0x8ab5c <stub _iso_stub_AllocateRecord2Stub>\n   0x0000000000091330 <+292>:\tmov    rbx,QWORD PTR [r15+0x182f]\n   0x0000000000091337 <+299>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000009133b <+303>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000009133f <+307>:\tcall   0x8b124 <stub _iso_stub_AllocateClosureStub>\n   0x0000000000091344 <+312>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000009134b <+319>:\tmov    QWORD PTR [rsp+0x18],r11\n   0x0000000000091350 <+324>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x0000000000091354 <+328>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x0000000000091359 <+333>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000009135d <+337>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x0000000000091362 <+342>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000091366 <+346>:\tmov    r10,QWORD PTR [r15+0x13df]\n   0x000000000009136d <+353>:\tcall   0x93ab4 <ListBase.fold>\n   0x0000000000091372 <+358>:\tmov    rcx,rax\n   0x0000000000091375 <+361>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x0000000000091379 <+365>:\tmov    rsi,rdx\n   0x000000000009137c <+368>:\tmov    QWORD PTR [rbp-0x8],rsi\n   0x0000000000091380 <+372>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x0000000000091384 <+376>:\tmov    r10d,0x12\n   0x000000000009138a <+382>:\tcall   0x8bd08 <stub _iso_stub_AllocateArrayStub>\n   0x000000000009138f <+387>:\tmov    rcx,rax\n   0x0000000000091392 <+390>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x0000000000091399 <+397>:\tmov    QWORD PTR [rcx+0x17],r11\n   0x000000000009139d <+401>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x00000000000913a1 <+405>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x00000000000913a5 <+409>:\tmov    r11,QWORD PTR [r15+0x5ef]\n   0x00000000000913ac <+416>:\tmov    QWORD PTR [rcx+0x27],r11\n   0x00000000000913b0 <+420>:\tmov    rbx,QWORD PTR [rbp-0x8]\n   0x00000000000913b4 <+424>:\tmov    QWORD PTR [rcx+0x2f],rbx\n   0x00000000000913b8 <+428>:\tmov    r11,QWORD PTR [r15+0x5ef]\n   0x00000000000913bf <+435>:\tmov    QWORD PTR [rcx+0x37],r11\n   0x00000000000913c3 <+439>:\tcmp    rax,QWORD PTR [r14+0x70]\n   0x00000000000913c7 <+443>:\tje     0x915a4 <main+920>\n   0x00000000000913cd <+449>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x00000000000913d2 <+454>:\tmov    r11,QWORD PTR [r14+0x2b0]\n   0x00000000000913d9 <+461>:\tmovups xmm1,XMMWORD PTR [r11]\n   0x00000000000913dd <+465>:\txorpd  xmm1,xmm0\n   0x00000000000913e1 <+469>:\tsubsd  xmm1,xmm0\n   0x00000000000913e5 <+473>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x00000000000913e9 <+477>:\tadd    rax,0x10\n   0x00000000000913ed <+481>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x00000000000913f1 <+485>:\tjae    0x915a9 <main+925>\n   0x00000000000913f7 <+491>:\tmov    QWORD PTR [r14+0x48],rax\n   0x00000000000913fb <+495>:\tsub    rax,0xf\n   0x00000000000913ff <+499>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x0000000000091407 <+507>:\tmovsd  QWORD PTR [rax+0x7],xmm1\n   0x000000000009140c <+512>:\tmov    rdx,rcx\n   0x000000000009140f <+515>:\tlea    r13,[rdx+0x3f]\n   0x0000000000091413 <+519>:\tmov    QWORD PTR [r13+0x0],rax\n   0x0000000000091417 <+523>:\ttest   al,0x1\n   0x0000000000091419 <+525>:\tje     0x91432 <main+550>\n   0x000000000009141b <+527>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000009141f <+531>:\tshr    r11d,0x2\n   0x0000000000091423 <+535>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000091427 <+539>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000009142b <+543>:\tje     0x91432 <main+550>\n   0x000000000009142d <+545>:\tcall   0x8a320 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x0000000000091432 <+550>:\tmov    r11,QWORD PTR [r15+0x5ef]\n   0x0000000000091439 <+557>:\tmov    QWORD PTR [rcx+0x47],r11\n   0x000000000009143d <+561>:\tcmp    rbx,QWORD PTR [r14+0x70]\n   0x0000000000091441 <+565>:\tje     0x915c7 <main+955>\n   0x0000000000091447 <+571>:\tmovsd  xmm0,QWORD PTR [rbx+0x7]\n   0x000000000009144c <+576>:\tmov    r11,QWORD PTR [r14+0x2b0]\n   0x0000000000091453 <+583>:\tmovups xmm1,XMMWORD PTR [r11]\n   0x0000000000091457 <+587>:\txorpd  xmm1,xmm0\n   0x000000000009145b <+591>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000009145f <+595>:\tadd    rax,0x10\n   0x0000000000091463 <+599>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x0000000000091467 <+603>:\tjae    0x915cc <main+960>\n   0x000000000009146d <+609>:\tmov    QWORD PTR [r14+0x48],rax\n   0x0000000000091471 <+613>:\tsub    rax,0xf\n   0x0000000000091475 <+617>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000009147d <+625>:\tmovsd  QWORD PTR [rax+0x7],xmm1\n   0x0000000000091482 <+630>:\tmov    rdx,rcx\n   0x0000000000091485 <+633>:\tlea    r13,[rdx+0x4f]\n   0x0000000000091489 <+637>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000009148d <+641>:\ttest   al,0x1\n   0x000000000009148f <+643>:\tje     0x914a8 <main+668>\n   0x0000000000091491 <+645>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000091495 <+649>:\tshr    r11d,0x2\n   0x0000000000091499 <+653>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000009149d <+657>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x00000000000914a1 <+661>:\tje     0x914a8 <main+668>\n   0x00000000000914a3 <+663>:\tcall   0x8a320 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x00000000000914a8 <+668>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x00000000000914af <+675>:\tmov    QWORD PTR [rcx+0x57],r11\n   0x00000000000914b3 <+679>:\tmov    QWORD PTR [rsp],rcx\n   0x00000000000914b7 <+683>:\tcall   0x5f46c <_StringBase._interpolate>\n   0x00000000000914bc <+688>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x00000000000914c0 <+692>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x00000000000914c4 <+696>:\tmov    rax,QWORD PTR [rax+0x6c0]\n   0x00000000000914cb <+703>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x00000000000914cf <+707>:\tjne    0x914e1 <main+725>\n   0x00000000000914d5 <+713>:\tmov    rdx,QWORD PTR [r15+0x877]\n   0x00000000000914dc <+720>:\tcall   0x8a264 <stub _iso_stub_InitLateStaticFieldStub>\n   0x00000000000914e1 <+725>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x00000000000914e5 <+729>:\tmov    rax,QWORD PTR [rax+0x7f0]\n   0x00000000000914ec <+736>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x00000000000914f0 <+740>:\tjne    0x91502 <main+758>\n   0x00000000000914f6 <+746>:\tmov    rdx,QWORD PTR [r15+0x87f]\n   0x00000000000914fd <+753>:\tcall   0x8a21c <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000091502 <+758>:\tcall   0x6c864 <new _File>\n   0x0000000000091507 <+763>:\tmov    rdi,QWORD PTR [r15+0x184f]\n   0x000000000009150e <+770>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000091512 <+774>:\tmov    QWORD PTR [rax+0x7],rdi\n   0x0000000000091516 <+778>:\tcall   0x6bd90 <FileSystemEntity._toUtf8Array>\n   0x000000000009151b <+783>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000009151f <+787>:\tmov    QWORD PTR [rdi+0xf],rax\n   0x0000000000091523 <+791>:\tmov    r11b,BYTE PTR [rdi-0x1]\n   0x0000000000091527 <+795>:\tshr    r11d,0x2\n   0x000000000009152b <+799>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000009152f <+803>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000091533 <+807>:\tje     0x9153a <main+814>\n   0x0000000000091535 <+809>:\tcall   0x8a819 <stub _iso_stub_WriteBarrierWrappersStub+65>\n   0x000000000009153a <+814>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000009153e <+818>:\tmov    r10d,0xa\n   0x0000000000091544 <+824>:\tcall   0x8bd08 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000091549 <+829>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x0000000000091550 <+836>:\tmov    QWORD PTR [rax+0x17],r11\n   0x0000000000091554 <+840>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x0000000000091558 <+844>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000009155c <+848>:\tmov    r11,QWORD PTR [r15+0x185f]\n   0x0000000000091563 <+855>:\tmov    QWORD PTR [rax+0x27],r11\n   0x0000000000091567 <+859>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000009156b <+863>:\tmov    QWORD PTR [rax+0x2f],rcx\n   0x000000000009156f <+867>:\tmov    r11,QWORD PTR [r15+0x1867]\n   0x0000000000091576 <+874>:\tmov    QWORD PTR [rax+0x37],r11\n   0x000000000009157a <+878>:\tmov    QWORD PTR [rsp],rax\n   0x000000000009157e <+882>:\tcall   0x5f46c <_StringBase._interpolate>\n   0x0000000000091583 <+887>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x0000000000091587 <+891>:\tmov    rsi,rax\n   0x000000000009158a <+894>:\tcall   0x915e8 <_File.writeAsString>\n   0x000000000009158f <+899>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000091593 <+903>:\tmov    rsp,rbp\n   0x0000000000091596 <+906>:\tpop    rbp\n   0x0000000000091597 <+907>:\tret\n   0x0000000000091598 <+908>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000009159f <+915>:\tjmp    0x9121e <main+18>\n   0x00000000000915a4 <+920>:\tcall   0x8c54c <stub _iso_stub_NullErrorSharedWithoutFPURegsStub>\n   0x00000000000915a9 <+925>:\tsub    rsp,0x10\n   0x00000000000915ad <+929>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x00000000000915b1 <+933>:\tpush   rbx\n   0x00000000000915b2 <+934>:\tpush   rcx\n   0x00000000000915b3 <+935>:\tcall   0x8bc88 <stub _iso_stub_AllocateDoubleStub>\n   0x00000000000915b8 <+940>:\tpop    rcx\n   0x00000000000915b9 <+941>:\tpop    rbx\n   0x00000000000915ba <+942>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x00000000000915be <+946>:\tadd    rsp,0x10\n   0x00000000000915c2 <+950>:\tjmp    0x91407 <main+507>\n   0x00000000000915c7 <+955>:\tcall   0x8c54c <stub _iso_stub_NullErrorSharedWithoutFPURegsStub>\n   0x00000000000915cc <+960>:\tsub    rsp,0x10\n   0x00000000000915d0 <+964>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x00000000000915d4 <+968>:\tpush   rcx\n   0x00000000000915d5 <+969>:\tcall   0x8bc88 <stub _iso_stub_AllocateDoubleStub>\n   0x00000000000915da <+974>:\tpop    rcx\n   0x00000000000915db <+975>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x00000000000915df <+979>:\tadd    rsp,0x10\n   0x00000000000915e3 <+983>:\tjmp    0x9147d <main+625>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "quaternion-type.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var q  = Quaternion(1.0, 2.0, 3.0, 4.0);\n  var q1 = Quaternion(2.0, 3.0, 4.0, 5.0);\n  var q2 = Quaternion(3.0, 4.0, 5.0, 6.0);\n  var r  = 7.0;\n  print(\"q  = $q\");\n  print(\"q1 = $q1\");\n  print(\"q2 = $q2\");\n  print(\"r  = $r\\n\");\n  print(\"norm(q) = ${q.norm().toStringAsFixed(6)}\");\n  print(\"-q      = ${-q}\");\n  print(\"conj(q) = ${q.conj()}\\n\");\n  print(\"r  + q  = ${q + r}\");\n  print(\"q  + r  = ${q + r}\");\n  print(\"q1 + q2 = ${q1 + q2}\\n\");\n  print(\"r  * q  = ${q * r}\");\n  print(\"q  * r  = ${q * r}\");\n  var q3 = q1 * q2;\n  var q4 = q2 * q1;\n  print(\"q1 * q2 = $q3\");\n  print(\"q2 * q1 = $q4\\n\");\n  print(\"q1 * q2 != q2 * q1 = ${q3 != q4}\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a38c <+0>:\tpush   rbp\n   0x000000000008a38d <+1>:\tmov    rbp,rsp\n   0x000000000008a390 <+4>:\tsub    rsp,0x28\n   0x000000000008a394 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a398 <+12>:\tjbe    0x8a976 <main+1514>\n   0x000000000008a39e <+18>:\tcall   0x8b080 <new Quaternion>\n   0x000000000008a3a3 <+23>:\tmovsd  xmm0,QWORD PTR [r15+0x17f7]\n   0x000000000008a3ac <+32>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a3b0 <+36>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008a3b5 <+41>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x000000000008a3be <+50>:\tmovsd  QWORD PTR [rax+0xf],xmm0\n   0x000000000008a3c3 <+55>:\tmovsd  xmm1,QWORD PTR [r15+0x1807]\n   0x000000000008a3cc <+64>:\tmovsd  QWORD PTR [rax+0x17],xmm1\n   0x000000000008a3d1 <+69>:\tmovsd  xmm2,QWORD PTR [r15+0x180f]\n   0x000000000008a3da <+78>:\tmovsd  QWORD PTR [rax+0x1f],xmm2\n   0x000000000008a3df <+83>:\tcall   0x8b080 <new Quaternion>\n   0x000000000008a3e4 <+88>:\tmovsd  xmm0,QWORD PTR [r15+0x17ff]\n   0x000000000008a3ed <+97>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a3f1 <+101>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008a3f6 <+106>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a3ff <+115>:\tmovsd  QWORD PTR [rax+0xf],xmm0\n   0x000000000008a404 <+120>:\tmovsd  xmm1,QWORD PTR [r15+0x180f]\n   0x000000000008a40d <+129>:\tmovsd  QWORD PTR [rax+0x17],xmm1\n   0x000000000008a412 <+134>:\tmovsd  xmm2,QWORD PTR [r15+0x1817]\n   0x000000000008a41b <+143>:\tmovsd  QWORD PTR [rax+0x1f],xmm2\n   0x000000000008a420 <+148>:\tcall   0x8b080 <new Quaternion>\n   0x000000000008a425 <+153>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a42e <+162>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a432 <+166>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008a437 <+171>:\tmovsd  xmm0,QWORD PTR [r15+0x180f]\n   0x000000000008a440 <+180>:\tmovsd  QWORD PTR [rax+0xf],xmm0\n   0x000000000008a445 <+185>:\tmovsd  xmm0,QWORD PTR [r15+0x1817]\n   0x000000000008a44e <+194>:\tmovsd  QWORD PTR [rax+0x17],xmm0\n   0x000000000008a453 <+199>:\tmovsd  xmm0,QWORD PTR [r15+0x181f]\n   0x000000000008a45c <+208>:\tmovsd  QWORD PTR [rax+0x1f],xmm0\n   0x000000000008a461 <+213>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a465 <+217>:\tmov    r10d,0x4\n   0x000000000008a46b <+223>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a470 <+228>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a477 <+235>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a47b <+239>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a47f <+243>:\tmov    QWORD PTR [rax+0x1f],rdi\n   0x000000000008a483 <+247>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a487 <+251>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a48c <+256>:\tmov    rdi,rax\n   0x000000000008a48f <+259>:\tcall   0x8afe4 <print>\n   0x000000000008a494 <+264>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a498 <+268>:\tmov    r10d,0x4\n   0x000000000008a49e <+274>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a4a3 <+279>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008a4aa <+286>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a4ae <+290>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a4b2 <+294>:\tmov    QWORD PTR [rax+0x1f],rdi\n   0x000000000008a4b6 <+298>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a4ba <+302>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a4bf <+307>:\tmov    rdi,rax\n   0x000000000008a4c2 <+310>:\tcall   0x8afe4 <print>\n   0x000000000008a4c7 <+315>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a4cb <+319>:\tmov    r10d,0x4\n   0x000000000008a4d1 <+325>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a4d6 <+330>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a4dd <+337>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a4e1 <+341>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a4e5 <+345>:\tmov    QWORD PTR [rax+0x1f],rsi\n   0x000000000008a4e9 <+349>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a4ed <+353>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a4f2 <+358>:\tmov    rdi,rax\n   0x000000000008a4f5 <+361>:\tcall   0x8afe4 <print>\n   0x000000000008a4fa <+366>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a4fe <+370>:\tmov    r10d,0x6\n   0x000000000008a504 <+376>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a509 <+381>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a510 <+388>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a514 <+392>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x000000000008a51b <+399>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a51f <+403>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008a526 <+410>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a52a <+414>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a52e <+418>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a533 <+423>:\tmov    rdi,rax\n   0x000000000008a536 <+426>:\tcall   0x8afe4 <print>\n   0x000000000008a53b <+431>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a53f <+435>:\tmov    r10d,0x4\n   0x000000000008a545 <+441>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a54a <+446>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a54e <+450>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x000000000008a555 <+457>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a559 <+461>:\tmov    rdi,QWORD PTR [r15+0x185f]\n   0x000000000008a560 <+468>:\tmov    esi,0x6\n   0x000000000008a565 <+473>:\tcall   0x8aec8 <double.toStringAsFixed>\n   0x000000000008a56a <+478>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a56e <+482>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a572 <+486>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a576 <+490>:\ttest   al,0x1\n   0x000000000008a578 <+492>:\tje     0x8a591 <main+517>\n   0x000000000008a57a <+494>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a57e <+498>:\tshr    r11d,0x2\n   0x000000000008a582 <+502>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a586 <+506>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a58a <+510>:\tje     0x8a591 <main+517>\n   0x000000000008a58c <+512>:\tcall   0x834bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a591 <+517>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008a595 <+521>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a599 <+525>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a59e <+530>:\tmov    rdi,rax\n   0x000000000008a5a1 <+533>:\tcall   0x8afe4 <print>\n   0x000000000008a5a6 <+538>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a5aa <+542>:\tmov    r10d,0x4\n   0x000000000008a5b0 <+548>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a5b5 <+553>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a5b9 <+557>:\tmov    r11,QWORD PTR [r15+0x1867]\n   0x000000000008a5c0 <+564>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a5c4 <+568>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a5c8 <+572>:\tcall   0x8ae28 <Quaternion.unary->\n   0x000000000008a5cd <+577>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a5d1 <+581>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a5d5 <+585>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a5d9 <+589>:\ttest   al,0x1\n   0x000000000008a5db <+591>:\tje     0x8a5f4 <main+616>\n   0x000000000008a5dd <+593>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a5e1 <+597>:\tshr    r11d,0x2\n   0x000000000008a5e5 <+601>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a5e9 <+605>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a5ed <+609>:\tje     0x8a5f4 <main+616>\n   0x000000000008a5ef <+611>:\tcall   0x834bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a5f4 <+616>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008a5f8 <+620>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a5fc <+624>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a601 <+629>:\tmov    rdi,rax\n   0x000000000008a604 <+632>:\tcall   0x8afe4 <print>\n   0x000000000008a609 <+637>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a60d <+641>:\tmov    r10d,0x6\n   0x000000000008a613 <+647>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a618 <+652>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a61c <+656>:\tmov    r11,QWORD PTR [r15+0x186f]\n   0x000000000008a623 <+663>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a627 <+667>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a62b <+671>:\tcall   0x8ad98 <Quaternion.conj>\n   0x000000000008a630 <+676>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a634 <+680>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a638 <+684>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a63c <+688>:\ttest   al,0x1\n   0x000000000008a63e <+690>:\tje     0x8a657 <main+715>\n   0x000000000008a640 <+692>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a644 <+696>:\tshr    r11d,0x2\n   0x000000000008a648 <+700>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a64c <+704>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a650 <+708>:\tje     0x8a657 <main+715>\n   0x000000000008a652 <+710>:\tcall   0x834bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a657 <+715>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a65b <+719>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008a662 <+726>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a666 <+730>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a66a <+734>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a66f <+739>:\tmov    rdi,rax\n   0x000000000008a672 <+742>:\tcall   0x8afe4 <print>\n   0x000000000008a677 <+747>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a67b <+751>:\tmov    r10d,0x4\n   0x000000000008a681 <+757>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a686 <+762>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a68a <+766>:\tmov    r11,QWORD PTR [r15+0x1877]\n   0x000000000008a691 <+773>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a695 <+777>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a699 <+781>:\tmov    rsi,QWORD PTR [r15+0x1847]\n   0x000000000008a6a0 <+788>:\tcall   0x8abe4 <Quaternion.+>\n   0x000000000008a6a5 <+793>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a6a9 <+797>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a6ad <+801>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a6b1 <+805>:\ttest   al,0x1\n   0x000000000008a6b3 <+807>:\tje     0x8a6cc <main+832>\n   0x000000000008a6b5 <+809>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a6b9 <+813>:\tshr    r11d,0x2\n   0x000000000008a6bd <+817>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a6c1 <+821>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a6c5 <+825>:\tje     0x8a6cc <main+832>\n   0x000000000008a6c7 <+827>:\tcall   0x834bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a6cc <+832>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008a6d0 <+836>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a6d4 <+840>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a6d9 <+845>:\tmov    rdi,rax\n   0x000000000008a6dc <+848>:\tcall   0x8afe4 <print>\n   0x000000000008a6e1 <+853>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a6e5 <+857>:\tmov    r10d,0x4\n   0x000000000008a6eb <+863>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a6f0 <+868>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a6f4 <+872>:\tmov    r11,QWORD PTR [r15+0x187f]\n   0x000000000008a6fb <+879>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a6ff <+883>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a703 <+887>:\tmov    rsi,QWORD PTR [r15+0x1847]\n   0x000000000008a70a <+894>:\tcall   0x8abe4 <Quaternion.+>\n   0x000000000008a70f <+899>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a713 <+903>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a717 <+907>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a71b <+911>:\ttest   al,0x1\n   0x000000000008a71d <+913>:\tje     0x8a736 <main+938>\n   0x000000000008a71f <+915>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a723 <+919>:\tshr    r11d,0x2\n   0x000000000008a727 <+923>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a72b <+927>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a72f <+931>:\tje     0x8a736 <main+938>\n   0x000000000008a731 <+933>:\tcall   0x834bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a736 <+938>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008a73a <+942>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a73e <+946>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a743 <+951>:\tmov    rdi,rax\n   0x000000000008a746 <+954>:\tcall   0x8afe4 <print>\n   0x000000000008a74b <+959>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a74f <+963>:\tmov    r10d,0x6\n   0x000000000008a755 <+969>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a75a <+974>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a75e <+978>:\tmov    r11,QWORD PTR [r15+0x1887]\n   0x000000000008a765 <+985>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a769 <+989>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a76d <+993>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a771 <+997>:\tcall   0x8abe4 <Quaternion.+>\n   0x000000000008a776 <+1002>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a77a <+1006>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a77e <+1010>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a782 <+1014>:\ttest   al,0x1\n   0x000000000008a784 <+1016>:\tje     0x8a79d <main+1041>\n   0x000000000008a786 <+1018>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a78a <+1022>:\tshr    r11d,0x2\n   0x000000000008a78e <+1026>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a792 <+1030>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a796 <+1034>:\tje     0x8a79d <main+1041>\n   0x000000000008a798 <+1036>:\tcall   0x834bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a79d <+1041>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a7a1 <+1045>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008a7a8 <+1052>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a7ac <+1056>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a7b0 <+1060>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a7b5 <+1065>:\tmov    rdi,rax\n   0x000000000008a7b8 <+1068>:\tcall   0x8afe4 <print>\n   0x000000000008a7bd <+1073>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a7c1 <+1077>:\tmov    r10d,0x4\n   0x000000000008a7c7 <+1083>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a7cc <+1088>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a7d0 <+1092>:\tmov    r11,QWORD PTR [r15+0x188f]\n   0x000000000008a7d7 <+1099>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a7db <+1103>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a7df <+1107>:\tmov    rsi,QWORD PTR [r15+0x1847]\n   0x000000000008a7e6 <+1114>:\tcall   0x8a984 <Quaternion.*>\n   0x000000000008a7eb <+1119>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a7ef <+1123>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a7f3 <+1127>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a7f7 <+1131>:\ttest   al,0x1\n   0x000000000008a7f9 <+1133>:\tje     0x8a812 <main+1158>\n   0x000000000008a7fb <+1135>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a7ff <+1139>:\tshr    r11d,0x2\n   0x000000000008a803 <+1143>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a807 <+1147>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a80b <+1151>:\tje     0x8a812 <main+1158>\n   0x000000000008a80d <+1153>:\tcall   0x834bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a812 <+1158>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008a816 <+1162>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a81a <+1166>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a81f <+1171>:\tmov    rdi,rax\n   0x000000000008a822 <+1174>:\tcall   0x8afe4 <print>\n   0x000000000008a827 <+1179>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a82b <+1183>:\tmov    r10d,0x4\n   0x000000000008a831 <+1189>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a836 <+1194>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a83a <+1198>:\tmov    r11,QWORD PTR [r15+0x1897]\n   0x000000000008a841 <+1205>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a845 <+1209>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a849 <+1213>:\tmov    rsi,QWORD PTR [r15+0x1847]\n   0x000000000008a850 <+1220>:\tcall   0x8a984 <Quaternion.*>\n   0x000000000008a855 <+1225>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008a859 <+1229>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a85d <+1233>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a861 <+1237>:\ttest   al,0x1\n   0x000000000008a863 <+1239>:\tje     0x8a87c <main+1264>\n   0x000000000008a865 <+1241>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a869 <+1245>:\tshr    r11d,0x2\n   0x000000000008a86d <+1249>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a871 <+1253>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a875 <+1257>:\tje     0x8a87c <main+1264>\n   0x000000000008a877 <+1259>:\tcall   0x834bc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a87c <+1264>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008a880 <+1268>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a884 <+1272>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a889 <+1277>:\tmov    rdi,rax\n   0x000000000008a88c <+1280>:\tcall   0x8afe4 <print>\n   0x000000000008a891 <+1285>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a895 <+1289>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a899 <+1293>:\tcall   0x8a984 <Quaternion.*>\n   0x000000000008a89e <+1298>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a8a2 <+1302>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a8a6 <+1306>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a8aa <+1310>:\tcall   0x8a984 <Quaternion.*>\n   0x000000000008a8af <+1315>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a8b3 <+1319>:\tmov    r10d,0x4\n   0x000000000008a8b9 <+1325>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a8bd <+1329>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a8c2 <+1334>:\tmov    r11,QWORD PTR [r15+0x189f]\n   0x000000000008a8c9 <+1341>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a8cd <+1345>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a8d1 <+1349>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a8d5 <+1353>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a8d9 <+1357>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a8de <+1362>:\tmov    rdi,rax\n   0x000000000008a8e1 <+1365>:\tcall   0x8afe4 <print>\n   0x000000000008a8e6 <+1370>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a8ea <+1374>:\tmov    r10d,0x6\n   0x000000000008a8f0 <+1380>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a8f5 <+1385>:\tmov    r11,QWORD PTR [r15+0x18a7]\n   0x000000000008a8fc <+1392>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a900 <+1396>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a904 <+1400>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a908 <+1404>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008a90f <+1411>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a913 <+1415>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a917 <+1419>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a91c <+1424>:\tmov    rdi,rax\n   0x000000000008a91f <+1427>:\tcall   0x8afe4 <print>\n   0x000000000008a924 <+1432>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a928 <+1436>:\tmov    r10d,0x4\n   0x000000000008a92e <+1442>:\tcall   0x84ea4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a933 <+1447>:\tmov    r11,QWORD PTR [r15+0x18af]\n   0x000000000008a93a <+1454>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a93e <+1458>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a942 <+1462>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a946 <+1466>:\tcmp    rdx,rcx\n   0x000000000008a949 <+1469>:\tjne    0x8a954 <main+1480>\n   0x000000000008a94b <+1471>:\tmov    rbx,QWORD PTR [r14+0x80]\n   0x000000000008a952 <+1478>:\tjmp    0x8a958 <main+1484>\n   0x000000000008a954 <+1480>:\tmov    rbx,QWORD PTR [r14+0x78]\n   0x000000000008a958 <+1484>:\tmov    QWORD PTR [rax+0x1f],rbx\n   0x000000000008a95c <+1488>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a960 <+1492>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a965 <+1497>:\tmov    rdi,rax\n   0x000000000008a968 <+1500>:\tcall   0x8afe4 <print>\n   0x000000000008a96d <+1505>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a971 <+1509>:\tmov    rsp,rbp\n   0x000000000008a974 <+1512>:\tpop    rbp\n   0x000000000008a975 <+1513>:\tret\n   0x000000000008a976 <+1514>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a97d <+1521>:\tjmp    0x8a39e <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "quine.dart",
  "functions": [
    {
      "name": "main",
      "source": "main()=>(s){print('$s(r\\x22$s\\x22);",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a177 <main+35>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tcall   0x8a180 <printToConsole>\n   0x000000000008a16e <+26>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a172 <+30>:\tmov    rsp,rbp\n   0x000000000008a175 <+33>:\tpop    rbp\n   0x000000000008a176 <+34>:\tret\n   0x000000000008a177 <+35>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a17e <+42>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "roots-of-a-function.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  // Vector(-9.381755897326649E-14, 0.9999999999998124, 1.9999999999997022)\n  print(findRoots(fn, -1.0, 3.0, 0.0001, 0.000000001));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a181 <main+45>\n   0x000000000008a162 <+14>:\tmovsd  xmm1,QWORD PTR [r15+0x17f7]\n   0x000000000008a16b <+23>:\tcall   0x8a220 <findRoots>\n   0x000000000008a170 <+28>:\tmov    rdi,rax\n   0x000000000008a173 <+31>:\tcall   0x8a18c <print>\n   0x000000000008a178 <+36>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a17c <+40>:\tmov    rsp,rbp\n   0x000000000008a17f <+43>:\tpop    rbp\n   0x000000000008a180 <+44>:\tret\n   0x000000000008a181 <+45>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a188 <+52>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "rot-13.dart",
  "functions": [
    {
      "name": "rot13char",
      "source": "String rot13char(int charCode) {\n  if ((charCode >= 'A'.codeUnitAt(0) && charCode <= 'M'.codeUnitAt(0)) ||\n      (charCode >= 'a'.codeUnitAt(0) && charCode <= 'm'.codeUnitAt(0))) {\n    return String.fromCharCode(charCode + 13);\n  } else if ((charCode >= 'N'.codeUnitAt(0) && charCode <= 'Z'.codeUnitAt(0)) ||\n             (charCode >= 'n'.codeUnitAt(0) && charCode <= 'z'.codeUnitAt(0))) {\n    return String.fromCharCode(charCode - 13);\n  } else {\n    return String.fromCharCode(charCode);\n  }\n}",
      "assembly": "Dump of assembler code for function rot13char:\n   0x000000000008ae44 <+0>:\tpush   rbp\n   0x000000000008ae45 <+1>:\tmov    rbp,rsp\n   0x000000000008ae48 <+4>:\tmov    rsi,rdi\n   0x000000000008ae4b <+7>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ae4f <+11>:\tjbe    0x8aed7 <rot13char+147>\n   0x000000000008ae55 <+17>:\tcmp    rsi,0x41\n   0x000000000008ae59 <+21>:\tjl     0x8ae69 <rot13char+37>\n   0x000000000008ae5f <+27>:\tcmp    rsi,0x4d\n   0x000000000008ae63 <+31>:\tjle    0x8ae7d <rot13char+57>\n   0x000000000008ae69 <+37>:\tcmp    rsi,0x61\n   0x000000000008ae6d <+41>:\tjl     0x8ae8f <rot13char+75>\n   0x000000000008ae73 <+47>:\tcmp    rsi,0x6d\n   0x000000000008ae77 <+51>:\tjg     0x8ae8f <rot13char+75>\n   0x000000000008ae7d <+57>:\tadd    rsi,0xd\n   0x000000000008ae81 <+61>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008ae85 <+65>:\tcall   0x5ded0 <new String.fromCharCode>\n   0x000000000008ae8a <+70>:\tmov    rsp,rbp\n   0x000000000008ae8d <+73>:\tpop    rbp\n   0x000000000008ae8e <+74>:\tret\n   0x000000000008ae8f <+75>:\tcmp    rsi,0x4e\n   0x000000000008ae93 <+79>:\tjl     0x8aea3 <rot13char+95>\n   0x000000000008ae99 <+85>:\tcmp    rsi,0x5a\n   0x000000000008ae9d <+89>:\tjle    0x8aeb7 <rot13char+115>\n   0x000000000008aea3 <+95>:\tcmp    rsi,0x6e\n   0x000000000008aea7 <+99>:\tjl     0x8aec9 <rot13char+133>\n   0x000000000008aead <+105>:\tcmp    rsi,0x7a\n   0x000000000008aeb1 <+109>:\tjg     0x8aec9 <rot13char+133>\n   0x000000000008aeb7 <+115>:\tsub    rsi,0xd\n   0x000000000008aebb <+119>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008aebf <+123>:\tcall   0x5ded0 <new String.fromCharCode>\n   0x000000000008aec4 <+128>:\tmov    rsp,rbp\n   0x000000000008aec7 <+131>:\tpop    rbp\n   0x000000000008aec8 <+132>:\tret\n   0x000000000008aec9 <+133>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008aecd <+137>:\tcall   0x5ded0 <new String.fromCharCode>\n   0x000000000008aed2 <+142>:\tmov    rsp,rbp\n   0x000000000008aed5 <+145>:\tpop    rbp\n   0x000000000008aed6 <+146>:\tret\n   0x000000000008aed7 <+147>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008aede <+154>:\tjmp    0x8ae55 <rot13char+17>\nEnd of assembler dump.\n"
    },
    {
      "name": "rot13",
      "source": "String rot13(String str) {\n  return String.fromCharCodes(str.runes.map((rune) {\n    return rot13char(rune).codeUnitAt(0);\n  }));\n}",
      "assembly": "Dump of assembler code for function rot13:\n   0x000000000008ac78 <+0>:\tpush   rbp\n   0x000000000008ac79 <+1>:\tmov    rbp,rsp\n   0x000000000008ac7c <+4>:\tsub    rsp,0x20\n   0x000000000008ac80 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ac84 <+12>:\tjbe    0x8acdf <rot13+103>\n   0x000000000008ac8a <+18>:\tmov    rdi,QWORD PTR [r15+0x184f]\n   0x000000000008ac91 <+25>:\tcall   0x8ad98 <_StringBase.runes>\n   0x000000000008ac96 <+30>:\tmov    rbx,QWORD PTR [r15+0x1857]\n   0x000000000008ac9d <+37>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008aca1 <+41>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008aca5 <+45>:\tcall   0x84ae0 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008acaa <+50>:\tmov    r11,QWORD PTR [r15+0x237]\n   0x000000000008acb1 <+57>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008acb6 <+62>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008acba <+66>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008acbf <+71>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008acc3 <+75>:\tmov    r10,QWORD PTR [r15+0x57]\n   0x000000000008acc7 <+79>:\tcall   0x8ace8 <Iterable.map>\n   0x000000000008accc <+84>:\tmov    rdi,rax\n   0x000000000008accf <+87>:\txor    esi,esi\n   0x000000000008acd1 <+89>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008acd5 <+93>:\tcall   0x5d024 <_StringBase.createFromCharCodes>\n   0x000000000008acda <+98>:\tmov    rsp,rbp\n   0x000000000008acdd <+101>:\tpop    rbp\n   0x000000000008acde <+102>:\tret\n   0x000000000008acdf <+103>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ace6 <+110>:\tjmp    0x8ac8a <rot13+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print(rot13(\"The quick brown fox jumps over the lazy dog\"));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008abac <+0>:\tpush   rbp\n   0x000000000008abad <+1>:\tmov    rbp,rsp\n   0x000000000008abb0 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008abb4 <+8>:\tjbe    0x8abd0 <main+36>\n   0x000000000008abba <+14>:\tcall   0x8ac78 <rot13>\n   0x000000000008abbf <+19>:\tmov    rdi,rax\n   0x000000000008abc2 <+22>:\tcall   0x8abdc <print>\n   0x000000000008abc7 <+27>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008abcb <+31>:\tmov    rsp,rbp\n   0x000000000008abce <+34>:\tpop    rbp\n   0x000000000008abcf <+35>:\tret\n   0x000000000008abd0 <+36>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008abd7 <+43>:\tjmp    0x8abba <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "runge-kutta-method.dart",
  "functions": [
    {
      "name": "RungeKutta4",
      "source": "num RungeKutta4(Function f, num t, num y, num dt){\n  num k1 = dt * f(t,y);\n  num k2 = dt * f(t+0.5*dt, y + 0.5*k1);\n  num k3 = dt * f(t+0.5*dt, y + 0.5*k2);\n  num k4 = dt * f(t + dt, y + k3);\n  return y + (1/6) * (k1 + 2*k2 + 2*k3 + k4);\n}",
      "assembly": "Dump of assembler code for function RungeKutta4:\n   0x000000000008b280 <+0>:\tpush   rbp\n   0x000000000008b281 <+1>:\tmov    rbp,rsp\n   0x000000000008b284 <+4>:\tsub    rsp,0x50\n   0x000000000008b288 <+8>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008b28c <+12>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008b290 <+16>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008b294 <+20>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008b298 <+24>:\tjbe    0x8b5ce <RungeKutta4+846>\n   0x000000000008b29e <+30>:\tmov    QWORD PTR [rsp+0x10],rdi\n   0x000000000008b2a3 <+35>:\tmov    QWORD PTR [rsp+0x8],rsi\n   0x000000000008b2a8 <+40>:\tmov    QWORD PTR [rsp],rdx\n   0x000000000008b2ac <+44>:\tmov    rdx,QWORD PTR [rsp+0x10]\n   0x000000000008b2b1 <+49>:\tmov    rcx,QWORD PTR [r15+0x1887]\n   0x000000000008b2b8 <+56>:\tmov    rbx,QWORD PTR [r15+0x188f]\n   0x000000000008b2bf <+63>:\tcall   rcx\n   0x000000000008b2c1 <+65>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008b2c6 <+70>:\tmovsd  xmm1,QWORD PTR [r15+0x1897]\n   0x000000000008b2cf <+79>:\tmulsd  xmm0,xmm1\n   0x000000000008b2d3 <+83>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008b2d7 <+87>:\tmovsd  QWORD PTR [rbp-0x28],xmm0\n   0x000000000008b2dc <+92>:\ttest   al,0x1\n   0x000000000008b2de <+94>:\tmov    ecx,0x3c\n   0x000000000008b2e3 <+99>:\tje     0x8b2eb <RungeKutta4+107>\n   0x000000000008b2e5 <+101>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008b2e8 <+104>:\tshr    ecx,0xc\n   0x000000000008b2eb <+107>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008b2f0 <+112>:\tmov    r11,QWORD PTR [r15+0x189f]\n   0x000000000008b2f7 <+119>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008b2fb <+123>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b2ff <+127>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b303 <+131>:\tmovsd  xmm0,QWORD PTR [r15+0x18a7]\n   0x000000000008b30c <+140>:\tmovsd  xmm1,QWORD PTR [rbp-0x28]\n   0x000000000008b311 <+145>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008b315 <+149>:\tmulsd  xmm1,xmm0\n   0x000000000008b319 <+153>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008b31d <+157>:\tadd    rcx,0x10\n   0x000000000008b321 <+161>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008b325 <+165>:\tjae    0x8b5da <RungeKutta4+858>\n   0x000000000008b32b <+171>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008b32f <+175>:\tsub    rcx,0xf\n   0x000000000008b333 <+179>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008b33b <+187>:\tmovsd  QWORD PTR [rcx+0x7],xmm1\n   0x000000000008b340 <+192>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008b344 <+196>:\ttest   dl,0x1\n   0x000000000008b347 <+199>:\tmov    ebx,0x3c\n   0x000000000008b34c <+204>:\tje     0x8b354 <RungeKutta4+212>\n   0x000000000008b34e <+206>:\tmov    ebx,DWORD PTR [rdx-0x1]\n   0x000000000008b351 <+209>:\tshr    ebx,0xc\n   0x000000000008b354 <+212>:\tmov    QWORD PTR [rsp+0x8],rdx\n   0x000000000008b359 <+217>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008b35d <+221>:\tmov    rcx,rbx\n   0x000000000008b360 <+224>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b364 <+228>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b368 <+232>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008b36c <+236>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008b371 <+241>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008b375 <+245>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008b37a <+250>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008b37e <+254>:\tmov    rdx,QWORD PTR [rsp+0x10]\n   0x000000000008b383 <+259>:\tmov    rcx,QWORD PTR [r15+0x18af]\n   0x000000000008b38a <+266>:\tmov    rbx,QWORD PTR [r15+0x18b7]\n   0x000000000008b391 <+273>:\tcall   rcx\n   0x000000000008b393 <+275>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008b398 <+280>:\tmovsd  xmm1,QWORD PTR [r15+0x1897]\n   0x000000000008b3a1 <+289>:\tmulsd  xmm0,xmm1\n   0x000000000008b3a5 <+293>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008b3a9 <+297>:\tmovsd  QWORD PTR [rbp-0x30],xmm0\n   0x000000000008b3ae <+302>:\ttest   al,0x1\n   0x000000000008b3b0 <+304>:\tmov    ecx,0x3c\n   0x000000000008b3b5 <+309>:\tje     0x8b3bd <RungeKutta4+317>\n   0x000000000008b3b7 <+311>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008b3ba <+314>:\tshr    ecx,0xc\n   0x000000000008b3bd <+317>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008b3c2 <+322>:\tmov    r11,QWORD PTR [r15+0x189f]\n   0x000000000008b3c9 <+329>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008b3cd <+333>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b3d1 <+337>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b3d5 <+341>:\tmovsd  xmm0,QWORD PTR [rbp-0x30]\n   0x000000000008b3da <+346>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008b3de <+350>:\tmovsd  xmm1,QWORD PTR [r15+0x18a7]\n   0x000000000008b3e7 <+359>:\tmulsd  xmm1,xmm0\n   0x000000000008b3eb <+363>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008b3ef <+367>:\tadd    rcx,0x10\n   0x000000000008b3f3 <+371>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008b3f7 <+375>:\tjae    0x8b603 <RungeKutta4+899>\n   0x000000000008b3fd <+381>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008b401 <+385>:\tsub    rcx,0xf\n   0x000000000008b405 <+389>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008b40d <+397>:\tmovsd  QWORD PTR [rcx+0x7],xmm1\n   0x000000000008b412 <+402>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008b416 <+406>:\ttest   dl,0x1\n   0x000000000008b419 <+409>:\tmov    ebx,0x3c\n   0x000000000008b41e <+414>:\tje     0x8b426 <RungeKutta4+422>\n   0x000000000008b420 <+416>:\tmov    ebx,DWORD PTR [rdx-0x1]\n   0x000000000008b423 <+419>:\tshr    ebx,0xc\n   0x000000000008b426 <+422>:\tmov    QWORD PTR [rsp+0x8],rdx\n   0x000000000008b42b <+427>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008b42f <+431>:\tmov    rcx,rbx\n   0x000000000008b432 <+434>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b436 <+438>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b43a <+442>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008b43e <+446>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008b443 <+451>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008b447 <+455>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008b44c <+460>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008b450 <+464>:\tmov    rdx,QWORD PTR [rsp+0x10]\n   0x000000000008b455 <+469>:\tmov    rcx,QWORD PTR [r15+0x18bf]\n   0x000000000008b45c <+476>:\tmov    rbx,QWORD PTR [r15+0x18c7]\n   0x000000000008b463 <+483>:\tcall   rcx\n   0x000000000008b465 <+485>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008b46a <+490>:\tmovsd  xmm1,QWORD PTR [r15+0x1897]\n   0x000000000008b473 <+499>:\tmulsd  xmm0,xmm1\n   0x000000000008b477 <+503>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008b47b <+507>:\tmovsd  QWORD PTR [rbp-0x38],xmm0\n   0x000000000008b480 <+512>:\ttest   al,0x1\n   0x000000000008b482 <+514>:\tmov    ecx,0x3c\n   0x000000000008b487 <+519>:\tje     0x8b48f <RungeKutta4+527>\n   0x000000000008b489 <+521>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008b48c <+524>:\tshr    ecx,0xc\n   0x000000000008b48f <+527>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008b494 <+532>:\tmov    r11,QWORD PTR [r15+0x186f]\n   0x000000000008b49b <+539>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008b49f <+543>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b4a3 <+547>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b4a7 <+551>:\tmovsd  xmm0,QWORD PTR [rbp-0x38]\n   0x000000000008b4ac <+556>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008b4b0 <+560>:\tmov    rcx,QWORD PTR [r14+0x48]\n   0x000000000008b4b4 <+564>:\tadd    rcx,0x10\n   0x000000000008b4b8 <+568>:\tcmp    rcx,QWORD PTR [r14+0x50]\n   0x000000000008b4bc <+572>:\tjae    0x8b62c <RungeKutta4+940>\n   0x000000000008b4c2 <+578>:\tmov    QWORD PTR [r14+0x48],rcx\n   0x000000000008b4c6 <+582>:\tsub    rcx,0xf\n   0x000000000008b4ca <+586>:\tmov    QWORD PTR [rcx-0x1],0x3e15c\n   0x000000000008b4d2 <+594>:\tmovsd  QWORD PTR [rcx+0x7],xmm0\n   0x000000000008b4d7 <+599>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008b4db <+603>:\ttest   dl,0x1\n   0x000000000008b4de <+606>:\tmov    ebx,0x3c\n   0x000000000008b4e3 <+611>:\tje     0x8b4eb <RungeKutta4+619>\n   0x000000000008b4e5 <+613>:\tmov    ebx,DWORD PTR [rdx-0x1]\n   0x000000000008b4e8 <+616>:\tshr    ebx,0xc\n   0x000000000008b4eb <+619>:\tmov    QWORD PTR [rsp+0x8],rdx\n   0x000000000008b4f0 <+624>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008b4f4 <+628>:\tmov    rcx,rbx\n   0x000000000008b4f7 <+631>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b4fb <+635>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b4ff <+639>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008b503 <+643>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008b508 <+648>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008b50c <+652>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008b511 <+657>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008b515 <+661>:\tmov    rdx,QWORD PTR [rsp+0x10]\n   0x000000000008b51a <+666>:\tmov    rcx,QWORD PTR [r15+0x18cf]\n   0x000000000008b521 <+673>:\tmov    rbx,QWORD PTR [r15+0x18d7]\n   0x000000000008b528 <+680>:\tcall   rcx\n   0x000000000008b52a <+682>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008b52f <+687>:\tmovsd  xmm1,QWORD PTR [r15+0x1897]\n   0x000000000008b538 <+696>:\tmulsd  xmm0,xmm1\n   0x000000000008b53c <+700>:\tmovsd  xmm1,QWORD PTR [r15+0x18df]\n   0x000000000008b545 <+709>:\tmovsd  xmm2,QWORD PTR [rbp-0x30]\n   0x000000000008b54a <+714>:\tmulsd  xmm2,xmm1\n   0x000000000008b54e <+718>:\tmovsd  xmm3,QWORD PTR [rbp-0x28]\n   0x000000000008b553 <+723>:\taddsd  xmm3,xmm2\n   0x000000000008b557 <+727>:\tmovsd  xmm2,QWORD PTR [rbp-0x38]\n   0x000000000008b55c <+732>:\tmulsd  xmm2,xmm1\n   0x000000000008b560 <+736>:\taddsd  xmm3,xmm2\n   0x000000000008b564 <+740>:\taddsd  xmm3,xmm0\n   0x000000000008b568 <+744>:\tmovsd  xmm0,QWORD PTR [r15+0x18e7]\n   0x000000000008b571 <+753>:\tmulsd  xmm3,xmm0\n   0x000000000008b575 <+757>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008b579 <+761>:\tadd    rax,0x10\n   0x000000000008b57d <+765>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008b581 <+769>:\tjae    0x8b64b <RungeKutta4+971>\n   0x000000000008b587 <+775>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008b58b <+779>:\tsub    rax,0xf\n   0x000000000008b58f <+783>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008b597 <+791>:\tmovsd  QWORD PTR [rax+0x7],xmm3\n   0x000000000008b59c <+796>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008b5a0 <+800>:\ttest   cl,0x1\n   0x000000000008b5a3 <+803>:\tmov    edx,0x3c\n   0x000000000008b5a8 <+808>:\tje     0x8b5b0 <RungeKutta4+816>\n   0x000000000008b5aa <+810>:\tmov    edx,DWORD PTR [rcx-0x1]\n   0x000000000008b5ad <+813>:\tshr    edx,0xc\n   0x000000000008b5b0 <+816>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008b5b5 <+821>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008b5b9 <+825>:\tmov    rcx,rdx\n   0x000000000008b5bc <+828>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b5c0 <+832>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b5c4 <+836>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008b5c9 <+841>:\tmov    rsp,rbp\n   0x000000000008b5cc <+844>:\tpop    rbp\n   0x000000000008b5cd <+845>:\tret\n   0x000000000008b5ce <+846>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008b5d5 <+853>:\tjmp    0x8b29e <RungeKutta4+30>\n   0x000000000008b5da <+858>:\tsub    rsp,0x20\n   0x000000000008b5de <+862>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b5e2 <+866>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x000000000008b5e7 <+871>:\tpush   rax\n   0x000000000008b5e8 <+872>:\tcall   0x857fc <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b5ed <+877>:\tmov    rcx,rax\n   0x000000000008b5f0 <+880>:\tpop    rax\n   0x000000000008b5f1 <+881>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b5f5 <+885>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x000000000008b5fa <+890>:\tadd    rsp,0x20\n   0x000000000008b5fe <+894>:\tjmp    0x8b33b <RungeKutta4+187>\n   0x000000000008b603 <+899>:\tsub    rsp,0x20\n   0x000000000008b607 <+903>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b60b <+907>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x000000000008b610 <+912>:\tpush   rax\n   0x000000000008b611 <+913>:\tcall   0x857fc <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b616 <+918>:\tmov    rcx,rax\n   0x000000000008b619 <+921>:\tpop    rax\n   0x000000000008b61a <+922>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b61e <+926>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x000000000008b623 <+931>:\tadd    rsp,0x20\n   0x000000000008b627 <+935>:\tjmp    0x8b40d <RungeKutta4+397>\n   0x000000000008b62c <+940>:\tsub    rsp,0x10\n   0x000000000008b630 <+944>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b634 <+948>:\tpush   rax\n   0x000000000008b635 <+949>:\tcall   0x857fc <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b63a <+954>:\tmov    rcx,rax\n   0x000000000008b63d <+957>:\tpop    rax\n   0x000000000008b63e <+958>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b642 <+962>:\tadd    rsp,0x10\n   0x000000000008b646 <+966>:\tjmp    0x8b4d2 <RungeKutta4+594>\n   0x000000000008b64b <+971>:\tsub    rsp,0x10\n   0x000000000008b64f <+975>:\tmovups XMMWORD PTR [rsp],xmm3\n   0x000000000008b653 <+979>:\tcall   0x857fc <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b658 <+984>:\tmovups xmm3,XMMWORD PTR [rsp]\n   0x000000000008b65c <+988>:\tadd    rsp,0x10\n   0x000000000008b660 <+992>:\tjmp    0x8b597 <RungeKutta4+791>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main(){\n  num t  = 0;\n  num dt = 0.1;\n  num tf = 10;\n  num totalPoints = ((tf-t)/dt).floor()+1;\n  num y  = 1;\n  Function f  = (num t, num y) => t * Math.sqrt(y);\n  Function actual = (num t) => (1/16) * (t*t+4)*(t*t+4);\n  for (num i = 0; i <= totalPoints; i++){\n    num relativeError = (actual(t) - y)/actual(t);\n    if (i%10 == 0){\n      print('y(${t.round().toStringAsPrecision(3)}) = ${y.toStringAsPrecision(11)}  Error = ${relativeError.toStringAsPrecision(11)}');\n    }\n    y  = RungeKutta4(f, t, y, dt);\n    t += dt;\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008ad80 <+0>:\tpush   rbp\n   0x000000000008ad81 <+1>:\tmov    rbp,rsp\n   0x000000000008ad84 <+4>:\tsub    rsp,0x58\n   0x000000000008ad88 <+8>:\tmovsd  xmm0,QWORD PTR [r15+0x17f7]\n   0x000000000008ad91 <+17>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ad95 <+21>:\tjbe    0x8b1f3 <main+1139>\n   0x000000000008ad9b <+27>:\tcmp    BYTE PTR [r14+0x7a8],0x0\n   0x000000000008ada3 <+35>:\tje     0x8b1ff <main+1151>\n   0x000000000008ada9 <+41>:\txorps  xmm15,xmm15\n   0x000000000008adad <+45>:\troundsd xmm15,xmm0,0x9\n   0x000000000008adb4 <+52>:\tcvttsd2si rax,xmm15\n   0x000000000008adb9 <+57>:\tmov    rcx,rax\n   0x000000000008adbc <+60>:\tshl    rcx,1\n   0x000000000008adbf <+63>:\tjo     0x8b1ff <main+1151>\n   0x000000000008adc5 <+69>:\tadd    rax,rax\n   0x000000000008adc8 <+72>:\tsar    rax,1\n   0x000000000008adcb <+75>:\tjae    0x8add2 <main+82>\n   0x000000000008adcd <+77>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008add2 <+82>:\tadd    rax,0x1\n   0x000000000008add6 <+86>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008adda <+90>:\tmov    rbx,QWORD PTR [r15+0x17ff]\n   0x000000000008ade1 <+97>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008ade5 <+101>:\tcall   0x84c98 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008adea <+106>:\tmov    rbx,QWORD PTR [r15+0x1807]\n   0x000000000008adf1 <+113>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008adf5 <+117>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008adf9 <+121>:\tcall   0x84c98 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008adfe <+126>:\tmov    rdx,rax\n   0x000000000008ae01 <+129>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008ae05 <+133>:\tmov    QWORD PTR [rbp-0x38],rdx\n   0x000000000008ae09 <+137>:\tmov    rax,rcx\n   0x000000000008ae0c <+140>:\tadd    rax,rax\n   0x000000000008ae0f <+143>:\tjno    0x8ae1e <main+158>\n   0x000000000008ae15 <+149>:\tcall   0x85b00 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008ae1a <+154>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008ae1e <+158>:\tmov    QWORD PTR [rbp-0x30],rax\n   0x000000000008ae22 <+162>:\txor    esi,esi\n   0x000000000008ae24 <+164>:\tmov    edi,0x2\n   0x000000000008ae29 <+169>:\txor    ebx,ebx\n   0x000000000008ae2b <+171>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008ae2f <+175>:\tmov    QWORD PTR [rbp-0x20],rdi\n   0x000000000008ae33 <+179>:\tmov    QWORD PTR [rbp-0x28],rbx\n   0x000000000008ae37 <+183>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008ae3b <+187>:\tjbe    0x8b224 <main+1188>\n   0x000000000008ae41 <+193>:\ttest   bl,0x1\n   0x000000000008ae44 <+196>:\tmov    ecx,0x3c\n   0x000000000008ae49 <+201>:\tje     0x8ae51 <main+209>\n   0x000000000008ae4b <+203>:\tmov    ecx,DWORD PTR [rbx-0x1]\n   0x000000000008ae4e <+206>:\tshr    ecx,0xc\n   0x000000000008ae51 <+209>:\tmov    QWORD PTR [rsp+0x8],rbx\n   0x000000000008ae56 <+214>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008ae5a <+218>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008ae5e <+222>:\tcall   QWORD PTR [rax+rcx*8+0xad0]\n   0x000000000008ae65 <+229>:\ttest   al,0x10\n   0x000000000008ae67 <+231>:\tjne    0x8b1ea <main+1130>\n   0x000000000008ae6d <+237>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008ae71 <+241>:\tmov    r11,QWORD PTR [rbp-0x38]\n   0x000000000008ae75 <+245>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008ae7a <+250>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008ae7e <+254>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008ae82 <+258>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008ae87 <+263>:\tmov    rcx,QWORD PTR [r15+0x180f]\n   0x000000000008ae8e <+270>:\tmov    rbx,QWORD PTR [r15+0x1817]\n   0x000000000008ae95 <+277>:\tcall   rcx\n   0x000000000008ae97 <+279>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008ae9c <+284>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008aea0 <+288>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008aea4 <+292>:\tcall   0x8b6e2 <double.-+22>\n   0x000000000008aea9 <+297>:\tmov    QWORD PTR [rbp-0x40],rax\n   0x000000000008aead <+301>:\tmov    r11,QWORD PTR [rbp-0x38]\n   0x000000000008aeb1 <+305>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008aeb6 <+310>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008aeba <+314>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008aebe <+318>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008aec3 <+323>:\tmov    rcx,QWORD PTR [r15+0x181f]\n   0x000000000008aeca <+330>:\tmov    rbx,QWORD PTR [r15+0x1827]\n   0x000000000008aed1 <+337>:\tcall   rcx\n   0x000000000008aed3 <+339>:\tmov    rcx,rax\n   0x000000000008aed6 <+342>:\tmov    rax,QWORD PTR [rbp-0x40]\n   0x000000000008aeda <+346>:\tmovsd  xmm0,QWORD PTR [rax+0x7]\n   0x000000000008aedf <+351>:\tmovsd  xmm1,QWORD PTR [rcx+0x7]\n   0x000000000008aee4 <+356>:\tdivsd  xmm0,xmm1\n   0x000000000008aee8 <+360>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008aeec <+364>:\tmovsd  QWORD PTR [rbp-0x48],xmm0\n   0x000000000008aef1 <+369>:\ttest   al,0x1\n   0x000000000008aef3 <+371>:\tmov    ecx,0x3c\n   0x000000000008aef8 <+376>:\tje     0x8af00 <main+384>\n   0x000000000008aefa <+378>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008aefd <+381>:\tshr    ecx,0xc\n   0x000000000008af00 <+384>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008af05 <+389>:\tmov    QWORD PTR [rsp],0x14\n   0x000000000008af0d <+397>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008af11 <+401>:\tcall   QWORD PTR [rax+rcx*8+0xa88]\n   0x000000000008af18 <+408>:\ttest   al,0x1\n   0x000000000008af1a <+410>:\tmov    ecx,0x3c\n   0x000000000008af1f <+415>:\tje     0x8af27 <main+423>\n   0x000000000008af21 <+417>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008af24 <+420>:\tshr    ecx,0xc\n   0x000000000008af27 <+423>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008af2c <+428>:\tmov    QWORD PTR [rsp],0x0\n   0x000000000008af34 <+436>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008af38 <+440>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008af3b <+443>:\ttest   al,0x10\n   0x000000000008af3d <+445>:\tjne    0x8b133 <main+947>\n   0x000000000008af43 <+451>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008af47 <+455>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008af4b <+459>:\tmovsd  xmm0,QWORD PTR [rbp-0x48]\n   0x000000000008af50 <+464>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008af54 <+468>:\tmov    r10d,0xc\n   0x000000000008af5a <+474>:\tcall   0x8587c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008af5f <+479>:\tmov    QWORD PTR [rbp-0x40],rax\n   0x000000000008af63 <+483>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008af6a <+490>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008af6e <+494>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008af72 <+498>:\ttest   dl,0x1\n   0x000000000008af75 <+501>:\tmov    ecx,0x3c\n   0x000000000008af7a <+506>:\tje     0x8af82 <main+514>\n   0x000000000008af7c <+508>:\tmov    ecx,DWORD PTR [rdx-0x1]\n   0x000000000008af7f <+511>:\tshr    ecx,0xc\n   0x000000000008af82 <+514>:\tmov    rdi,rdx\n   0x000000000008af85 <+517>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008af89 <+521>:\tcall   QWORD PTR [rax+rcx*8+0xc68]\n   0x000000000008af90 <+528>:\tmov    rcx,rax\n   0x000000000008af93 <+531>:\tmov    rax,rcx\n   0x000000000008af96 <+534>:\tadd    rax,rax\n   0x000000000008af99 <+537>:\tjno    0x8afa8 <main+552>\n   0x000000000008af9f <+543>:\tcall   0x85b00 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008afa4 <+548>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008afa8 <+552>:\tmov    r11,QWORD PTR [r14+0x70]\n   0x000000000008afac <+556>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008afb1 <+561>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008afb5 <+565>:\tcall   0x7d29c <new _Double.fromInteger>\n   0x000000000008afba <+570>:\tmov    rdi,rax\n   0x000000000008afbd <+573>:\tmov    esi,0x3\n   0x000000000008afc2 <+578>:\tcall   0x7d0c8 <double.toStringAsPrecision>\n   0x000000000008afc7 <+583>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x000000000008afcb <+587>:\tlea    r13,[rdx+0x1f]\n   0x000000000008afcf <+591>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008afd3 <+595>:\ttest   al,0x1\n   0x000000000008afd5 <+597>:\tje     0x8afee <main+622>\n   0x000000000008afd7 <+599>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008afdb <+603>:\tshr    r11d,0x2\n   0x000000000008afdf <+607>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008afe3 <+611>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008afe7 <+615>:\tje     0x8afee <main+622>\n   0x000000000008afe9 <+617>:\tcall   0x83e94 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008afee <+622>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x000000000008aff2 <+626>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008aff9 <+633>:\tmov    QWORD PTR [rdx+0x27],r11\n   0x000000000008affd <+637>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008b001 <+641>:\ttest   al,0x1\n   0x000000000008b003 <+643>:\tmov    ecx,0x3c\n   0x000000000008b008 <+648>:\tje     0x8b010 <main+656>\n   0x000000000008b00a <+650>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008b00d <+653>:\tshr    ecx,0xc\n   0x000000000008b010 <+656>:\tmov    rdi,rax\n   0x000000000008b013 <+659>:\tmov    esi,0xb\n   0x000000000008b018 <+664>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b01c <+668>:\tcall   QWORD PTR [rax+rcx*8+0x1510]\n   0x000000000008b023 <+675>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x000000000008b027 <+679>:\tlea    r13,[rdx+0x2f]\n   0x000000000008b02b <+683>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008b02f <+687>:\ttest   al,0x1\n   0x000000000008b031 <+689>:\tje     0x8b04a <main+714>\n   0x000000000008b033 <+691>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008b037 <+695>:\tshr    r11d,0x2\n   0x000000000008b03b <+699>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008b03f <+703>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008b043 <+707>:\tje     0x8b04a <main+714>\n   0x000000000008b045 <+709>:\tcall   0x83e94 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008b04a <+714>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x000000000008b04e <+718>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008b055 <+725>:\tmov    QWORD PTR [rdx+0x37],r11\n   0x000000000008b059 <+729>:\tmovsd  xmm0,QWORD PTR [rbp-0x48]\n   0x000000000008b05e <+734>:\tcomisd xmm0,xmm0\n   0x000000000008b062 <+738>:\tjnp    0x8b074 <main+756>\n   0x000000000008b068 <+744>:\tmov    rax,QWORD PTR [r15+0x1847]\n   0x000000000008b06f <+751>:\tjmp    0x8b0f7 <main+887>\n   0x000000000008b074 <+756>:\tmovsd  xmm1,QWORD PTR [r15+0x184f]\n   0x000000000008b07d <+765>:\tcomisd xmm0,xmm1\n   0x000000000008b081 <+769>:\tjp     0x8b099 <main+793>\n   0x000000000008b087 <+775>:\tjne    0x8b099 <main+793>\n   0x000000000008b08d <+781>:\tmov    rax,QWORD PTR [r15+0x1857]\n   0x000000000008b094 <+788>:\tjmp    0x8b0f7 <main+887>\n   0x000000000008b099 <+793>:\tmovsd  xmm2,QWORD PTR [r15+0x185f]\n   0x000000000008b0a2 <+802>:\tcomisd xmm0,xmm2\n   0x000000000008b0a6 <+806>:\tjp     0x8b0be <main+830>\n   0x000000000008b0ac <+812>:\tjne    0x8b0be <main+830>\n   0x000000000008b0b2 <+818>:\tmov    rax,QWORD PTR [r15+0x1867]\n   0x000000000008b0b9 <+825>:\tjmp    0x8b0f7 <main+887>\n   0x000000000008b0be <+830>:\tmov    rax,QWORD PTR [r14+0x48]\n   0x000000000008b0c2 <+834>:\tadd    rax,0x10\n   0x000000000008b0c6 <+838>:\tcmp    rax,QWORD PTR [r14+0x50]\n   0x000000000008b0ca <+842>:\tjae    0x8b230 <main+1200>\n   0x000000000008b0d0 <+848>:\tmov    QWORD PTR [r14+0x48],rax\n   0x000000000008b0d4 <+852>:\tsub    rax,0xf\n   0x000000000008b0d8 <+856>:\tmov    QWORD PTR [rax-0x1],0x3e15c\n   0x000000000008b0e0 <+864>:\tmovsd  QWORD PTR [rax+0x7],xmm0\n   0x000000000008b0e5 <+869>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008b0ea <+874>:\tmov    QWORD PTR [rsp],0x16\n   0x000000000008b0f2 <+882>:\tcall   0x7d1cc <double._toStringAsPrecision>\n   0x000000000008b0f7 <+887>:\tmov    rdx,QWORD PTR [rbp-0x40]\n   0x000000000008b0fb <+891>:\tlea    r13,[rdx+0x3f]\n   0x000000000008b0ff <+895>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008b103 <+899>:\ttest   al,0x1\n   0x000000000008b105 <+901>:\tje     0x8b11e <main+926>\n   0x000000000008b107 <+903>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008b10b <+907>:\tshr    r11d,0x2\n   0x000000000008b10f <+911>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008b113 <+915>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008b117 <+919>:\tje     0x8b11e <main+926>\n   0x000000000008b119 <+921>:\tcall   0x83e94 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008b11e <+926>:\tmov    r11,QWORD PTR [rbp-0x40]\n   0x000000000008b122 <+930>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008b126 <+934>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008b12b <+939>:\tmov    rdi,rax\n   0x000000000008b12e <+942>:\tcall   0x8b668 <printToConsole>\n   0x000000000008b133 <+947>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008b137 <+951>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008b13b <+955>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008b13f <+959>:\tmov    rsi,rax\n   0x000000000008b142 <+962>:\tmov    rdx,QWORD PTR [rbp-0x20]\n   0x000000000008b146 <+966>:\tcall   0x8b280 <RungeKutta4>\n   0x000000000008b14b <+971>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008b14f <+975>:\tmovsd  QWORD PTR [rbp-0x48],xmm0\n   0x000000000008b154 <+980>:\ttest   al,0x1\n   0x000000000008b156 <+982>:\tmov    ecx,0x3c\n   0x000000000008b15b <+987>:\tje     0x8b163 <main+995>\n   0x000000000008b15d <+989>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008b160 <+992>:\tshr    ecx,0xc\n   0x000000000008b163 <+995>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008b168 <+1000>:\tmov    r11,QWORD PTR [r15+0x186f]\n   0x000000000008b16f <+1007>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008b173 <+1011>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b177 <+1015>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b17b <+1019>:\tmov    rdx,rax\n   0x000000000008b17e <+1022>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008b182 <+1026>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008b186 <+1030>:\ttest   al,0x1\n   0x000000000008b188 <+1032>:\tmov    ecx,0x3c\n   0x000000000008b18d <+1037>:\tje     0x8b195 <main+1045>\n   0x000000000008b18f <+1039>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008b192 <+1042>:\tshr    ecx,0xc\n   0x000000000008b195 <+1045>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008b19a <+1050>:\tmov    QWORD PTR [rsp],0x2\n   0x000000000008b1a2 <+1058>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008b1a6 <+1062>:\tcall   QWORD PTR [rax+rcx*8+0x40]\n   0x000000000008b1aa <+1066>:\tmovsd  xmm0,QWORD PTR [rbp-0x48]\n   0x000000000008b1af <+1071>:\tmov    rdi,QWORD PTR [r14+0x48]\n   0x000000000008b1b3 <+1075>:\tadd    rdi,0x10\n   0x000000000008b1b7 <+1079>:\tcmp    rdi,QWORD PTR [r14+0x50]\n   0x000000000008b1bb <+1083>:\tjae    0x8b260 <main+1248>\n   0x000000000008b1c1 <+1089>:\tmov    QWORD PTR [r14+0x48],rdi\n   0x000000000008b1c5 <+1093>:\tsub    rdi,0xf\n   0x000000000008b1c9 <+1097>:\tmov    QWORD PTR [rdi-0x1],0x3e15c\n   0x000000000008b1d1 <+1105>:\tmovsd  QWORD PTR [rdi+0x7],xmm0\n   0x000000000008b1d6 <+1110>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008b1da <+1114>:\tmov    rbx,rax\n   0x000000000008b1dd <+1117>:\tmov    rdx,QWORD PTR [rbp-0x38]\n   0x000000000008b1e1 <+1121>:\tmov    rax,QWORD PTR [rbp-0x30]\n   0x000000000008b1e5 <+1125>:\tjmp    0x8ae2b <main+171>\n   0x000000000008b1ea <+1130>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008b1ee <+1134>:\tmov    rsp,rbp\n   0x000000000008b1f1 <+1137>:\tpop    rbp\n   0x000000000008b1f2 <+1138>:\tret\n   0x000000000008b1f3 <+1139>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008b1fa <+1146>:\tjmp    0x8ad9b <main+27>\n   0x000000000008b1ff <+1151>:\tsub    rsp,0x10\n   0x000000000008b203 <+1155>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b207 <+1159>:\tmov    eax,0x44\n   0x000000000008b20c <+1164>:\tmov    r11,QWORD PTR [r15+0x1877]\n   0x000000000008b213 <+1171>:\tcall   QWORD PTR [r11+0x7]\n   0x000000000008b217 <+1175>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b21b <+1179>:\tadd    rsp,0x10\n   0x000000000008b21f <+1183>:\tjmp    0x8adc8 <main+72>\n   0x000000000008b224 <+1188>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008b22b <+1195>:\tjmp    0x8ae41 <main+193>\n   0x000000000008b230 <+1200>:\tsub    rsp,0x30\n   0x000000000008b234 <+1204>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b238 <+1208>:\tmovups XMMWORD PTR [rsp+0x10],xmm1\n   0x000000000008b23d <+1213>:\tmovups XMMWORD PTR [rsp+0x20],xmm2\n   0x000000000008b242 <+1218>:\tpush   rdx\n   0x000000000008b243 <+1219>:\tcall   0x857fc <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b248 <+1224>:\tpop    rdx\n   0x000000000008b249 <+1225>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b24d <+1229>:\tmovups xmm1,XMMWORD PTR [rsp+0x10]\n   0x000000000008b252 <+1234>:\tmovups xmm2,XMMWORD PTR [rsp+0x20]\n   0x000000000008b257 <+1239>:\tadd    rsp,0x30\n   0x000000000008b25b <+1243>:\tjmp    0x8b0e0 <main+864>\n   0x000000000008b260 <+1248>:\tsub    rsp,0x10\n   0x000000000008b264 <+1252>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008b268 <+1256>:\tpush   rax\n   0x000000000008b269 <+1257>:\tcall   0x857fc <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008b26e <+1262>:\tmov    rdi,rax\n   0x000000000008b271 <+1265>:\tpop    rax\n   0x000000000008b272 <+1266>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008b276 <+1270>:\tadd    rsp,0x10\n   0x000000000008b27a <+1274>:\tjmp    0x8b1d1 <main+1105>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "set.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main(){\n  //Set Creation\n  Set A = new Set.from([1,2,3]);\n  Set B = new Set.from([1,2,3,4,5]);\n  Set C = new Set.from([1,2,4,5]);\n\t\n  print('Set A = $A');\n  print('Set B = $B');\n  print('Set C = $C');\n  print('');\n  //Test if element is in set\n  int m = 3;\n  print('m = 5');\n  print('m in A = ${A.contains(m)}');\n  print('m in B = ${B.contains(m)}');\n  print('m in C = ${C.contains(m)}');\n  print('');\n  //Union of two sets\n  Set AC = A.union(C);\n  print('Set AC = Union of A and C = $AC');\n  print('');\n  //Intersection of two sets\n  Set A_C = A.intersection(C);\n  print('Set A_C = Intersection of A and C = $A_C');\n  print('');\n  //Difference of two sets\n  Set A_diff_C = A.difference(C);\n  print('Set A_diff_C = Difference between A and C = $A_diff_C');\n  print('');\n  //Test if set is subset of another set\n  print('A is a subset of B = ${B.containsAll(A)}');\n  print('C is a subset of B = ${B.containsAll(C)}');\n  print('A is a subset of C = ${C.containsAll(A)}');\n  print('');\n  //Test if two sets are equal\n  print('A is equal to B  = ${B.containsAll(A) && A.containsAll(B)}');\n  print('B is equal to AC = ${B.containsAll(AC) && AC.containsAll(B)}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a1f8 <+0>:\tpush   rbp\n   0x000000000008a1f9 <+1>:\tmov    rbp,rsp\n   0x000000000008a1fc <+4>:\tsub    rsp,0x30\n   0x000000000008a200 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a204 <+12>:\tjbe    0x8a766 <main+1390>\n   0x000000000008a20a <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a20e <+22>:\tmov    r10d,0x6\n   0x000000000008a214 <+28>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a219 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a21d <+37>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a225 <+45>:\tmov    QWORD PTR [rax+0x1f],0x4\n   0x000000000008a22d <+53>:\tmov    QWORD PTR [rax+0x27],0x6\n   0x000000000008a235 <+61>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a239 <+65>:\tcall   0x83dd0 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a23e <+70>:\tmov    rcx,rax\n   0x000000000008a241 <+73>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a245 <+77>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a249 <+81>:\tmov    QWORD PTR [rcx+0xf],0x6\n   0x000000000008a251 <+89>:\tmov    rsi,rcx\n   0x000000000008a254 <+92>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a258 <+96>:\tcall   0x8b1c8 <new LinkedHashSet.from>\n   0x000000000008a25d <+101>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a261 <+105>:\tmov    r10d,0xa\n   0x000000000008a267 <+111>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a26b <+115>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a270 <+120>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a274 <+124>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a27c <+132>:\tmov    QWORD PTR [rax+0x1f],0x4\n   0x000000000008a284 <+140>:\tmov    QWORD PTR [rax+0x27],0x6\n   0x000000000008a28c <+148>:\tmov    QWORD PTR [rax+0x2f],0x8\n   0x000000000008a294 <+156>:\tmov    QWORD PTR [rax+0x37],0xa\n   0x000000000008a29c <+164>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a2a0 <+168>:\tcall   0x83dd0 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a2a5 <+173>:\tmov    rcx,rax\n   0x000000000008a2a8 <+176>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a2ac <+180>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a2b0 <+184>:\tmov    QWORD PTR [rcx+0xf],0xa\n   0x000000000008a2b8 <+192>:\tmov    rsi,rcx\n   0x000000000008a2bb <+195>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a2bf <+199>:\tcall   0x8b1c8 <new LinkedHashSet.from>\n   0x000000000008a2c4 <+204>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a2c8 <+208>:\tmov    r10d,0x8\n   0x000000000008a2ce <+214>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a2d2 <+218>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2d7 <+223>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a2db <+227>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a2e3 <+235>:\tmov    QWORD PTR [rax+0x1f],0x4\n   0x000000000008a2eb <+243>:\tmov    QWORD PTR [rax+0x27],0x8\n   0x000000000008a2f3 <+251>:\tmov    QWORD PTR [rax+0x2f],0xa\n   0x000000000008a2fb <+259>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a2ff <+263>:\tcall   0x83dd0 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a304 <+268>:\tmov    rcx,rax\n   0x000000000008a307 <+271>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a30b <+275>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a30f <+279>:\tmov    QWORD PTR [rcx+0xf],0x8\n   0x000000000008a317 <+287>:\tmov    rsi,rcx\n   0x000000000008a31a <+290>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x000000000008a31e <+294>:\tcall   0x8b1c8 <new LinkedHashSet.from>\n   0x000000000008a323 <+299>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a327 <+303>:\tmov    r10d,0x4\n   0x000000000008a32d <+309>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a331 <+313>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a336 <+318>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a33d <+325>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a341 <+329>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a345 <+333>:\tmov    QWORD PTR [rax+0x1f],rdi\n   0x000000000008a349 <+337>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a34d <+341>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a352 <+346>:\tmov    rdi,rax\n   0x000000000008a355 <+349>:\tcall   0x8b190 <print>\n   0x000000000008a35a <+354>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a35e <+358>:\tmov    r10d,0x4\n   0x000000000008a364 <+364>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a369 <+369>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a370 <+376>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a374 <+380>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a378 <+384>:\tmov    QWORD PTR [rax+0x1f],rdi\n   0x000000000008a37c <+388>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a380 <+392>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a385 <+397>:\tmov    rdi,rax\n   0x000000000008a388 <+400>:\tcall   0x8b190 <print>\n   0x000000000008a38d <+405>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a391 <+409>:\tmov    r10d,0x4\n   0x000000000008a397 <+415>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a39c <+420>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a3a3 <+427>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a3a7 <+431>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a3ab <+435>:\tmov    QWORD PTR [rax+0x1f],rdi\n   0x000000000008a3af <+439>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a3b3 <+443>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a3b8 <+448>:\tmov    rdi,rax\n   0x000000000008a3bb <+451>:\tcall   0x8b190 <print>\n   0x000000000008a3c0 <+456>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a3c7 <+463>:\tcall   0x8b12c <printToConsole>\n   0x000000000008a3cc <+468>:\tmov    rdi,QWORD PTR [r15+0x180f]\n   0x000000000008a3d3 <+475>:\tcall   0x8b12c <printToConsole>\n   0x000000000008a3d8 <+480>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a3dc <+484>:\tmov    r10d,0x4\n   0x000000000008a3e2 <+490>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a3e7 <+495>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a3eb <+499>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a3f2 <+506>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a3f6 <+510>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a3fa <+514>:\tmov    esi,0x6\n   0x000000000008a3ff <+519>:\tcall   0x8b0e4 <_LinkedHashSetMixin.contains>\n   0x000000000008a404 <+524>:\tmov    rcx,rax\n   0x000000000008a407 <+527>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a40b <+531>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a40f <+535>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a413 <+539>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a418 <+544>:\tmov    rdi,rax\n   0x000000000008a41b <+547>:\tcall   0x8b190 <print>\n   0x000000000008a420 <+552>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a424 <+556>:\tmov    r10d,0x4\n   0x000000000008a42a <+562>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a42f <+567>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a433 <+571>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a43a <+578>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a43e <+582>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a442 <+586>:\tmov    esi,0x6\n   0x000000000008a447 <+591>:\tcall   0x8b0e4 <_LinkedHashSetMixin.contains>\n   0x000000000008a44c <+596>:\tmov    rcx,rax\n   0x000000000008a44f <+599>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a453 <+603>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a457 <+607>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a45b <+611>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a460 <+616>:\tmov    rdi,rax\n   0x000000000008a463 <+619>:\tcall   0x8b190 <print>\n   0x000000000008a468 <+624>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a46c <+628>:\tmov    r10d,0x4\n   0x000000000008a472 <+634>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a477 <+639>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a47b <+643>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a482 <+650>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a486 <+654>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a48a <+658>:\tmov    esi,0x6\n   0x000000000008a48f <+663>:\tcall   0x8b0e4 <_LinkedHashSetMixin.contains>\n   0x000000000008a494 <+668>:\tmov    rcx,rax\n   0x000000000008a497 <+671>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a49b <+675>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a49f <+679>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a4a3 <+683>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a4a8 <+688>:\tmov    rdi,rax\n   0x000000000008a4ab <+691>:\tcall   0x8b190 <print>\n   0x000000000008a4b0 <+696>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a4b7 <+703>:\tcall   0x8b12c <printToConsole>\n   0x000000000008a4bc <+708>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4c0 <+712>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a4c4 <+716>:\tcall   0x8b0a4 <SetBase.union>\n   0x000000000008a4c9 <+721>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a4cd <+725>:\tmov    r10d,0x4\n   0x000000000008a4d3 <+731>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a4d7 <+735>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a4dc <+740>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008a4e3 <+747>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a4e7 <+751>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a4eb <+755>:\tmov    QWORD PTR [rax+0x1f],rsi\n   0x000000000008a4ef <+759>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a4f3 <+763>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a4f8 <+768>:\tmov    rdi,rax\n   0x000000000008a4fb <+771>:\tcall   0x8b190 <print>\n   0x000000000008a500 <+776>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a507 <+783>:\tcall   0x8b12c <printToConsole>\n   0x000000000008a50c <+788>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a510 <+792>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a514 <+796>:\tcall   0x8afa0 <SetBase.intersection>\n   0x000000000008a519 <+801>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a51d <+805>:\tmov    r10d,0x4\n   0x000000000008a523 <+811>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a527 <+815>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a52c <+820>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a533 <+827>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a537 <+831>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008a53b <+835>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a53f <+839>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a543 <+843>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a548 <+848>:\tmov    rdi,rax\n   0x000000000008a54b <+851>:\tcall   0x8b190 <print>\n   0x000000000008a550 <+856>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a557 <+863>:\tcall   0x8b12c <printToConsole>\n   0x000000000008a55c <+868>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a560 <+872>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a564 <+876>:\tcall   0x8aa50 <SetBase.difference>\n   0x000000000008a569 <+881>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a56d <+885>:\tmov    r10d,0x4\n   0x000000000008a573 <+891>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a577 <+895>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a57c <+900>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a583 <+907>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a587 <+911>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008a58b <+915>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a58f <+919>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a593 <+923>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a598 <+928>:\tmov    rdi,rax\n   0x000000000008a59b <+931>:\tcall   0x8b190 <print>\n   0x000000000008a5a0 <+936>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a5a7 <+943>:\tcall   0x8b12c <printToConsole>\n   0x000000000008a5ac <+948>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a5b0 <+952>:\tmov    r10d,0x4\n   0x000000000008a5b6 <+958>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a5bb <+963>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a5bf <+967>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x000000000008a5c6 <+974>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a5ca <+978>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a5ce <+982>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a5d2 <+986>:\tcall   0x8a774 <SetBase.containsAll>\n   0x000000000008a5d7 <+991>:\tmov    rcx,rax\n   0x000000000008a5da <+994>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a5de <+998>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a5e2 <+1002>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a5e6 <+1006>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a5eb <+1011>:\tmov    rdi,rax\n   0x000000000008a5ee <+1014>:\tcall   0x8b190 <print>\n   0x000000000008a5f3 <+1019>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a5f7 <+1023>:\tmov    r10d,0x4\n   0x000000000008a5fd <+1029>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a602 <+1034>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a606 <+1038>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008a60d <+1045>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a611 <+1049>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a615 <+1053>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a619 <+1057>:\tcall   0x8a774 <SetBase.containsAll>\n   0x000000000008a61e <+1062>:\tmov    rcx,rax\n   0x000000000008a621 <+1065>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a625 <+1069>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a629 <+1073>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a62d <+1077>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a632 <+1082>:\tmov    rdi,rax\n   0x000000000008a635 <+1085>:\tcall   0x8b190 <print>\n   0x000000000008a63a <+1090>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a63e <+1094>:\tmov    r10d,0x4\n   0x000000000008a644 <+1100>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a649 <+1105>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a64d <+1109>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x000000000008a654 <+1116>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a658 <+1120>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a65c <+1124>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a660 <+1128>:\tcall   0x8a774 <SetBase.containsAll>\n   0x000000000008a665 <+1133>:\tmov    rcx,rax\n   0x000000000008a668 <+1136>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a66c <+1140>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a670 <+1144>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a674 <+1148>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a679 <+1153>:\tmov    rdi,rax\n   0x000000000008a67c <+1156>:\tcall   0x8b190 <print>\n   0x000000000008a681 <+1161>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a688 <+1168>:\tcall   0x8b12c <printToConsole>\n   0x000000000008a68d <+1173>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a691 <+1177>:\tmov    r10d,0x4\n   0x000000000008a697 <+1183>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a69c <+1188>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a6a0 <+1192>:\tmov    r11,QWORD PTR [r15+0x185f]\n   0x000000000008a6a7 <+1199>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a6ab <+1203>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a6af <+1207>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a6b3 <+1211>:\tcall   0x8a774 <SetBase.containsAll>\n   0x000000000008a6b8 <+1216>:\ttest   al,0x10\n   0x000000000008a6ba <+1218>:\tjne    0x8a6d5 <main+1245>\n   0x000000000008a6c0 <+1224>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a6c4 <+1228>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a6c8 <+1232>:\tcall   0x8a774 <SetBase.containsAll>\n   0x000000000008a6cd <+1237>:\tmov    rcx,rax\n   0x000000000008a6d0 <+1240>:\tjmp    0x8a6dc <main+1252>\n   0x000000000008a6d5 <+1245>:\tmov    rcx,QWORD PTR [r14+0x80]\n   0x000000000008a6dc <+1252>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008a6e0 <+1256>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a6e4 <+1260>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a6e8 <+1264>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a6ed <+1269>:\tmov    rdi,rax\n   0x000000000008a6f0 <+1272>:\tcall   0x8b190 <print>\n   0x000000000008a6f5 <+1277>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a6f9 <+1281>:\tmov    r10d,0x4\n   0x000000000008a6ff <+1287>:\tcall   0x84d10 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a704 <+1292>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a708 <+1296>:\tmov    r11,QWORD PTR [r15+0x1867]\n   0x000000000008a70f <+1303>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a713 <+1307>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a717 <+1311>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a71b <+1315>:\tcall   0x8a774 <SetBase.containsAll>\n   0x000000000008a720 <+1320>:\ttest   al,0x10\n   0x000000000008a722 <+1322>:\tjne    0x8a73d <main+1349>\n   0x000000000008a728 <+1328>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008a72c <+1332>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a730 <+1336>:\tcall   0x8a774 <SetBase.containsAll>\n   0x000000000008a735 <+1341>:\tmov    rcx,rax\n   0x000000000008a738 <+1344>:\tjmp    0x8a744 <main+1356>\n   0x000000000008a73d <+1349>:\tmov    rcx,QWORD PTR [r14+0x80]\n   0x000000000008a744 <+1356>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a748 <+1360>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a74c <+1364>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a750 <+1368>:\tcall   0x587dc <_StringBase._interpolate>\n   0x000000000008a755 <+1373>:\tmov    rdi,rax\n   0x000000000008a758 <+1376>:\tcall   0x8b190 <print>\n   0x000000000008a75d <+1381>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a761 <+1385>:\tmov    rsp,rbp\n   0x000000000008a764 <+1388>:\tpop    rbp\n   0x000000000008a765 <+1389>:\tret\n   0x000000000008a766 <+1390>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a76d <+1397>:\tjmp    0x8a20a <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sieve-of-eratosthenes-1.dart",
  "functions": [
    {
      "name": "iterableToString",
      "source": "String iterableToString(Iterable seq) {\n  String str = \"[\";\n\n  Iterator i = seq.iterator;\n\n  if (i.moveNext()) str += i.current.toString();\n\n  while(i.moveNext()) {\n    str += \", \" + i.current.toString();\n  }\n\n  return str + \"]\";\n}",
      "assembly": "Dump of assembler code for function iterableToString:\n   0x000000000008f8fc <+0>:\tpush   rbp\n   0x000000000008f8fd <+1>:\tmov    rbp,rsp\n   0x000000000008f900 <+4>:\tsub    rsp,0x40\n   0x000000000008f904 <+8>:\tmov    QWORD PTR [rbp-0x20],rdi\n   0x000000000008f908 <+12>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f90c <+16>:\tjbe    0x8fadc <iterableToString+480>\n   0x000000000008f912 <+22>:\tmov    rsi,QWORD PTR [rdi+0x7]\n   0x000000000008f916 <+26>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008f91a <+30>:\tmov    rax,QWORD PTR [rdi+0xf]\n   0x000000000008f91e <+34>:\tmov    r8,rax\n   0x000000000008f921 <+37>:\tsar    r8,1\n   0x000000000008f924 <+40>:\tmov    QWORD PTR [rbp-0x10],r8\n   0x000000000008f928 <+44>:\tcmp    r8,0x0\n   0x000000000008f92c <+48>:\tjg     0x8f940 <iterableToString+68>\n   0x000000000008f932 <+54>:\tmov    rcx,QWORD PTR [r15+0x417]\n   0x000000000008f939 <+61>:\txor    eax,eax\n   0x000000000008f93b <+63>:\tjmp    0x8f9cc <iterableToString+208>\n   0x000000000008f940 <+68>:\tmov    rax,r8\n   0x000000000008f943 <+71>:\txor    ebx,ebx\n   0x000000000008f945 <+73>:\tcmp    rbx,rax\n   0x000000000008f948 <+76>:\tjae    0x8fae8 <iterableToString+492>\n   0x000000000008f94e <+82>:\tmov    rax,QWORD PTR [rdi+0x17]\n   0x000000000008f952 <+86>:\tmov    rbx,QWORD PTR [rax+0x17]\n   0x000000000008f956 <+90>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x000000000008f95a <+94>:\tcmp    rbx,QWORD PTR [r14+0x70]\n   0x000000000008f95e <+98>:\tjne    0x8f98d <iterableToString+145>\n   0x000000000008f964 <+104>:\tmov    rax,rbx\n   0x000000000008f967 <+107>:\tmov    rdx,rsi\n   0x000000000008f96a <+110>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008f96e <+114>:\tcmp    rdx,QWORD PTR [r14+0x70]\n   0x000000000008f972 <+118>:\tje     0x8f98d <iterableToString+145>\n   0x000000000008f978 <+124>:\tmov    rsi,QWORD PTR [rdx+0x27]\n   0x000000000008f97c <+128>:\tmov    rbx,QWORD PTR [r15+0x16f]\n   0x000000000008f983 <+135>:\tmov    r9,QWORD PTR [r15+0x1817]\n   0x000000000008f98a <+142>:\tcall   QWORD PTR [rsi+0x7]\n   0x000000000008f98d <+145>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008f991 <+149>:\ttest   al,0x1\n   0x000000000008f993 <+151>:\tmov    ecx,0x3c\n   0x000000000008f998 <+156>:\tje     0x8f9a0 <iterableToString+164>\n   0x000000000008f99a <+158>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008f99d <+161>:\tshr    ecx,0xc\n   0x000000000008f9a0 <+164>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008f9a4 <+168>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008f9a8 <+172>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008f9af <+179>:\tmov    r11,QWORD PTR [r15+0x417]\n   0x000000000008f9b6 <+186>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008f9bb <+191>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008f9bf <+195>:\tcall   0x6041c <_StringBase.+>\n   0x000000000008f9c4 <+200>:\tmov    rcx,rax\n   0x000000000008f9c7 <+203>:\tmov    eax,0x1\n   0x000000000008f9cc <+208>:\tmov    rdi,rcx\n   0x000000000008f9cf <+211>:\tmov    rbx,QWORD PTR [rbp-0x20]\n   0x000000000008f9d3 <+215>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008f9d7 <+219>:\tmov    QWORD PTR [rbp-0x30],rdi\n   0x000000000008f9db <+223>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f9df <+227>:\tjbe    0x8faed <iterableToString+497>\n   0x000000000008f9e5 <+233>:\tmov    rcx,QWORD PTR [rbx+0xf]\n   0x000000000008f9e9 <+237>:\tsar    rcx,1\n   0x000000000008f9ec <+240>:\tcmp    rsi,rcx\n   0x000000000008f9ef <+243>:\tjne    0x8fac0 <iterableToString+452>\n   0x000000000008f9f5 <+249>:\tcmp    rax,rcx\n   0x000000000008f9f8 <+252>:\tjge    0x8faa2 <iterableToString+422>\n   0x000000000008f9fe <+258>:\tmov    rcx,QWORD PTR [rbx+0x17]\n   0x000000000008fa02 <+262>:\tmov    r8,QWORD PTR [rcx+rax*8+0x17]\n   0x000000000008fa07 <+267>:\tmov    QWORD PTR [rbp-0x8],r8\n   0x000000000008fa0b <+271>:\tmov    r9,rax\n   0x000000000008fa0e <+274>:\tadd    r9,0x1\n   0x000000000008fa12 <+278>:\tmov    QWORD PTR [rbp-0x28],r9\n   0x000000000008fa16 <+282>:\tcmp    r8,QWORD PTR [r14+0x70]\n   0x000000000008fa1a <+286>:\tjne    0x8fa4a <iterableToString+334>\n   0x000000000008fa20 <+292>:\tmov    rax,r8\n   0x000000000008fa23 <+295>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008fa27 <+299>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008fa2b <+303>:\tcmp    rdx,QWORD PTR [r14+0x70]\n   0x000000000008fa2f <+307>:\tje     0x8fa4a <iterableToString+334>\n   0x000000000008fa35 <+313>:\tmov    rsi,QWORD PTR [rdx+0x27]\n   0x000000000008fa39 <+317>:\tmov    rbx,QWORD PTR [r15+0x16f]\n   0x000000000008fa40 <+324>:\tmov    r9,QWORD PTR [r15+0x1827]\n   0x000000000008fa47 <+331>:\tcall   QWORD PTR [rsi+0x7]\n   0x000000000008fa4a <+334>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008fa4e <+338>:\ttest   al,0x1\n   0x000000000008fa50 <+340>:\tmov    ecx,0x3c\n   0x000000000008fa55 <+345>:\tje     0x8fa5d <iterableToString+353>\n   0x000000000008fa57 <+347>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008fa5a <+350>:\tshr    ecx,0xc\n   0x000000000008fa5d <+353>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008fa61 <+357>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008fa65 <+361>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008fa6c <+368>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008fa73 <+375>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008fa78 <+380>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008fa7c <+384>:\tcall   0x6041c <_StringBase.+>\n   0x000000000008fa81 <+389>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x000000000008fa85 <+393>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008fa8a <+398>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008fa8e <+402>:\tcall   0x6041c <_StringBase.+>\n   0x000000000008fa93 <+407>:\tmov    rcx,rax\n   0x000000000008fa96 <+410>:\tmov    rdi,rcx\n   0x000000000008fa99 <+413>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008fa9d <+417>:\tjmp    0x8f9cf <iterableToString+211>\n   0x000000000008faa2 <+422>:\tmov    r11,QWORD PTR [rbp-0x30]\n   0x000000000008faa6 <+426>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008faab <+431>:\tmov    r11,QWORD PTR [r15+0x40f]\n   0x000000000008fab2 <+438>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008fab6 <+442>:\tcall   0x6041c <_StringBase.+>\n   0x000000000008fabb <+447>:\tmov    rsp,rbp\n   0x000000000008fabe <+450>:\tpop    rbp\n   0x000000000008fabf <+451>:\tret\n   0x000000000008fac0 <+452>:\tmov    rax,rbx\n   0x000000000008fac3 <+455>:\tcall   0x57570 <new ConcurrentModificationError>\n   0x000000000008fac8 <+460>:\tmov    rcx,rax\n   0x000000000008facb <+463>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008facf <+467>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008fad3 <+471>:\tmov    rax,rcx\n   0x000000000008fad6 <+474>:\tcall   0x886e0 <stub _iso_stub_ThrowStub>\n   0x000000000008fadb <+479>:\tint3\n   0x000000000008fadc <+480>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008fae3 <+487>:\tjmp    0x8f912 <iterableToString+22>\n   0x000000000008fae8 <+492>:\tcall   0x8a62c <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008faed <+497>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008faf4 <+504>:\tjmp    0x8f9e5 <iterableToString+233>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "main() {\n  int limit = 1000;\n\n  int start = new DateTime.now().millisecondsSinceEpoch;\n\n  Set<int> sieve = new Set<int>();\n\n  for(int i = 2; i <= limit; i++) {\n    sieve.add(i);\n  }\n\n  for(int i = 2; i * i <= limit; i++) {\n   if(sieve.contains(i)) {\n     for(int j = i * i; j <= limit; j += i) {\n       sieve.remove(j);\n     }\n   }\n  }\n\n  var sortedValues = new List<int>.from(sieve);\n\n  int elapsed = new DateTime.now().millisecondsSinceEpoch - start;\n\n  print(\"Found ${sieve.length} primes up to ${limit} in ${elapsed} milliseconds.\");\n  print(iterableToString(sortedValues)); // expect sieve.length to be 168 up to 1000...\n  //  Expect.equals(168, sieve.length);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008f5d0 <+0>:\tpush   rbp\n   0x000000000008f5d1 <+1>:\tmov    rbp,rsp\n   0x000000000008f5d4 <+4>:\tsub    rsp,0x38\n   0x000000000008f5d8 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f5dc <+12>:\tjbe    0x8f8c9 <main+761>\n   0x000000000008f5e2 <+18>:\tcall   0x906ac <new DateTime>\n   0x000000000008f5e7 <+23>:\tmov    rcx,rax\n   0x000000000008f5ea <+26>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008f5f1 <+33>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008f5f5 <+37>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008f5f9 <+41>:\tcall   0x90638 <DateTime._getCurrentMicros>\n   0x000000000008f5fe <+46>:\tsar    rax,1\n   0x000000000008f601 <+49>:\tjae    0x8f608 <main+56>\n   0x000000000008f603 <+51>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008f608 <+56>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008f60c <+60>:\tmov    QWORD PTR [rdi+0x7],rax\n   0x000000000008f610 <+64>:\tcall   0x905ec <DateTime.millisecondsSinceEpoch>\n   0x000000000008f615 <+69>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008f61c <+76>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008f620 <+80>:\tcall   0x905e0 <new _Set>\n   0x000000000008f625 <+85>:\tmov    rcx,rax\n   0x000000000008f628 <+88>:\tmov    rax,QWORD PTR [r15+0x1637]\n   0x000000000008f62f <+95>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008f633 <+99>:\tmov    QWORD PTR [rcx+0x2f],rax\n   0x000000000008f637 <+103>:\tmov    QWORD PTR [rcx+0xf],0x0\n   0x000000000008f63f <+111>:\tmov    rax,QWORD PTR [r15+0x163f]\n   0x000000000008f646 <+118>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008f64a <+122>:\tmov    QWORD PTR [rcx+0x1f],0x0\n   0x000000000008f652 <+130>:\tmov    QWORD PTR [rcx+0x27],0x0\n   0x000000000008f65a <+138>:\tmov    edx,0x2\n   0x000000000008f65f <+143>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008f663 <+147>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f667 <+151>:\tjbe    0x8f8d5 <main+773>\n   0x000000000008f66d <+157>:\tcmp    rdx,0x3e8\n   0x000000000008f674 <+164>:\tjg     0x8f6bf <main+239>\n   0x000000000008f67a <+170>:\tmov    rax,rdx\n   0x000000000008f67d <+173>:\tadd    rax,rax\n   0x000000000008f680 <+176>:\tjno    0x8f68f <main+191>\n   0x000000000008f686 <+182>:\tcall   0x8a36c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008f68b <+187>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008f68f <+191>:\tmov    rdi,rcx\n   0x000000000008f692 <+194>:\tmov    rsi,rax\n   0x000000000008f695 <+197>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008f699 <+201>:\tcall   0x5b5c8 <_OperatorEqualsAndHashCode._hashCode>\n   0x000000000008f69e <+206>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008f6a2 <+210>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008f6a6 <+214>:\tmov    rdx,rax\n   0x000000000008f6a9 <+217>:\tcall   0x8450c <_LinkedHashSetMixin._add>\n   0x000000000008f6ae <+222>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x000000000008f6b2 <+226>:\tadd    rax,0x1\n   0x000000000008f6b6 <+230>:\tmov    rdx,rax\n   0x000000000008f6b9 <+233>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008f6bd <+237>:\tjmp    0x8f65f <main+143>\n   0x000000000008f6bf <+239>:\tmov    ecx,0x2\n   0x000000000008f6c4 <+244>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008f6c8 <+248>:\tmov    QWORD PTR [rbp-0x28],rcx\n   0x000000000008f6cc <+252>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f6d0 <+256>:\tjbe    0x8f8e1 <main+785>\n   0x000000000008f6d6 <+262>:\tmov    rdx,rcx\n   0x000000000008f6d9 <+265>:\timul   rdx,rcx\n   0x000000000008f6dd <+269>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008f6e1 <+273>:\tcmp    rdx,0x3e8\n   0x000000000008f6e8 <+280>:\tjg     0x8f780 <main+432>\n   0x000000000008f6ee <+286>:\tmov    rbx,QWORD PTR [rax+0x17]\n   0x000000000008f6f2 <+290>:\tmov    rdi,rax\n   0x000000000008f6f5 <+293>:\tmov    rsi,rcx\n   0x000000000008f6f8 <+296>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x000000000008f6fc <+300>:\tcall   0x903e0 <_LinkedHashSetMixin._getKeyOrData>\n   0x000000000008f701 <+305>:\tmov    rcx,rax\n   0x000000000008f704 <+308>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008f708 <+312>:\tcmp    rax,rcx\n   0x000000000008f70b <+315>:\tje     0x8f770 <main+416>\n   0x000000000008f711 <+321>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008f715 <+325>:\tmov    rcx,QWORD PTR [rbp-0x28]\n   0x000000000008f719 <+329>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008f71d <+333>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008f721 <+337>:\tjbe    0x8f8ed <main+797>\n   0x000000000008f727 <+343>:\tcmp    rdx,0x3e8\n   0x000000000008f72e <+350>:\tjg     0x8f768 <main+408>\n   0x000000000008f734 <+356>:\tmov    rax,rdx\n   0x000000000008f737 <+359>:\tadd    rax,rax\n   0x000000000008f73a <+362>:\tjno    0x8f749 <main+377>\n   0x000000000008f740 <+368>:\tcall   0x8a36c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008f745 <+373>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008f749 <+377>:\tmov    rdi,QWORD PTR [rbp-0x20]\n   0x000000000008f74d <+381>:\tmov    rsi,rax\n   0x000000000008f750 <+384>:\tcall   0x86ca0 <_LinkedHashSetMixin.remove>\n   0x000000000008f755 <+389>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008f759 <+393>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008f75d <+397>:\tadd    rcx,rax\n   0x000000000008f760 <+400>:\tmov    rdx,rcx\n   0x000000000008f763 <+403>:\tmov    rcx,rax\n   0x000000000008f766 <+406>:\tjmp    0x8f719 <main+329>\n   0x000000000008f768 <+408>:\tmov    rax,rcx\n   0x000000000008f76b <+411>:\tjmp    0x8f774 <main+420>\n   0x000000000008f770 <+416>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008f774 <+420>:\tadd    rax,0x1\n   0x000000000008f778 <+424>:\tmov    rcx,rax\n   0x000000000008f77b <+427>:\tjmp    0x8f6c4 <main+244>\n   0x000000000008f780 <+432>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008f784 <+436>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008f788 <+440>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008f78f <+447>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008f796 <+454>:\tcall   0x8fb98 <new List.from>\n   0x000000000008f79b <+459>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008f79f <+463>:\tcall   0x906ac <new DateTime>\n   0x000000000008f7a4 <+468>:\tmov    rcx,rax\n   0x000000000008f7a7 <+471>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008f7ae <+478>:\tmov    QWORD PTR [rbp-0x30],rcx\n   0x000000000008f7b2 <+482>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008f7b6 <+486>:\tcall   0x90638 <DateTime._getCurrentMicros>\n   0x000000000008f7bb <+491>:\tsar    rax,1\n   0x000000000008f7be <+494>:\tjae    0x8f7c5 <main+501>\n   0x000000000008f7c0 <+496>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008f7c5 <+501>:\tmov    rdi,QWORD PTR [rbp-0x30]\n   0x000000000008f7c9 <+505>:\tmov    QWORD PTR [rdi+0x7],rax\n   0x000000000008f7cd <+509>:\tcall   0x905ec <DateTime.millisecondsSinceEpoch>\n   0x000000000008f7d2 <+514>:\tmov    rcx,rax\n   0x000000000008f7d5 <+517>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008f7d9 <+521>:\tsub    rcx,rax\n   0x000000000008f7dc <+524>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008f7e0 <+528>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008f7e4 <+532>:\tmov    r10d,0xe\n   0x000000000008f7ea <+538>:\tcall   0x8a0e8 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008f7ef <+543>:\tmov    QWORD PTR [rbp-0x30],rax\n   0x000000000008f7f3 <+547>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008f7fa <+554>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008f7fe <+558>:\tmov    r11,QWORD PTR [rbp-0x20]\n   0x000000000008f802 <+562>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008f806 <+566>:\tcall   0x5ac7c <_LinkedHashSetMixin.length>\n   0x000000000008f80b <+571>:\tmov    rdx,QWORD PTR [rbp-0x30]\n   0x000000000008f80f <+575>:\tlea    r13,[rdx+0x1f]\n   0x000000000008f813 <+579>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008f817 <+583>:\ttest   al,0x1\n   0x000000000008f819 <+585>:\tje     0x8f832 <main+610>\n   0x000000000008f81b <+587>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008f81f <+591>:\tshr    r11d,0x2\n   0x000000000008f823 <+595>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008f827 <+599>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008f82b <+603>:\tje     0x8f832 <main+610>\n   0x000000000008f82d <+605>:\tcall   0x88700 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008f832 <+610>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x000000000008f836 <+614>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008f83d <+621>:\tmov    QWORD PTR [rcx+0x27],r11\n   0x000000000008f841 <+625>:\tmov    QWORD PTR [rcx+0x2f],0x7d0\n   0x000000000008f849 <+633>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008f850 <+640>:\tmov    QWORD PTR [rcx+0x37],r11\n   0x000000000008f854 <+644>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008f858 <+648>:\tmov    rax,rdx\n   0x000000000008f85b <+651>:\tadd    rax,rax\n   0x000000000008f85e <+654>:\tjno    0x8f86d <main+669>\n   0x000000000008f864 <+660>:\tcall   0x8a36c <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008f869 <+665>:\tmov    QWORD PTR [rax+0x7],rdx\n   0x000000000008f86d <+669>:\tmov    rdx,rcx\n   0x000000000008f870 <+672>:\tlea    r13,[rdx+0x3f]\n   0x000000000008f874 <+676>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008f878 <+680>:\ttest   al,0x1\n   0x000000000008f87a <+682>:\tje     0x8f893 <main+707>\n   0x000000000008f87c <+684>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008f880 <+688>:\tshr    r11d,0x2\n   0x000000000008f884 <+692>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008f888 <+696>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008f88c <+700>:\tje     0x8f893 <main+707>\n   0x000000000008f88e <+702>:\tcall   0x88700 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008f893 <+707>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008f89a <+714>:\tmov    QWORD PTR [rcx+0x47],r11\n   0x000000000008f89e <+718>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008f8a2 <+722>:\tcall   0x5c7dc <_StringBase._interpolate>\n   0x000000000008f8a7 <+727>:\tmov    rdi,rax\n   0x000000000008f8aa <+730>:\tcall   0x8fafc <print>\n   0x000000000008f8af <+735>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008f8b3 <+739>:\tcall   0x8f8fc <iterableToString>\n   0x000000000008f8b8 <+744>:\tmov    rdi,rax\n   0x000000000008f8bb <+747>:\tcall   0x8fafc <print>\n   0x000000000008f8c0 <+752>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008f8c4 <+756>:\tmov    rsp,rbp\n   0x000000000008f8c7 <+759>:\tpop    rbp\n   0x000000000008f8c8 <+760>:\tret\n   0x000000000008f8c9 <+761>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f8d0 <+768>:\tjmp    0x8f5e2 <main+18>\n   0x000000000008f8d5 <+773>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f8dc <+780>:\tjmp    0x8f66d <main+157>\n   0x000000000008f8e1 <+785>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f8e8 <+792>:\tjmp    0x8f6d6 <main+262>\n   0x000000000008f8ed <+797>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008f8f4 <+804>:\tjmp    0x8f727 <main+343>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sorting-algorithms-gnome-sort.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  List<int> array = [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7];\n  array.shuffle(); // Unsort the array\n\n  print(\"unsort: $array\");\n  gnomeSort(array); // Sort the array\n  print(\"  sort: $array\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x18\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a3ac <main+600>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x000000000008a16d <+25>:\tmov    r10d,0x1e\n   0x000000000008a173 <+31>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a178 <+36>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rax+0x17],0xfffffffffffffff2\n   0x000000000008a184 <+48>:\tmov    QWORD PTR [rax+0x1f],0xfffffffffffffff4\n   0x000000000008a18c <+56>:\tmov    QWORD PTR [rax+0x27],0xfffffffffffffff6\n   0x000000000008a194 <+64>:\tmov    QWORD PTR [rax+0x2f],0xfffffffffffffff8\n   0x000000000008a19c <+72>:\tmov    QWORD PTR [rax+0x37],0xfffffffffffffffa\n   0x000000000008a1a4 <+80>:\tmov    QWORD PTR [rax+0x3f],0xfffffffffffffffc\n   0x000000000008a1ac <+88>:\tmov    QWORD PTR [rax+0x47],0xfffffffffffffffe\n   0x000000000008a1b4 <+96>:\tmov    QWORD PTR [rax+0x4f],0x0\n   0x000000000008a1bc <+104>:\tmov    QWORD PTR [rax+0x57],0x2\n   0x000000000008a1c4 <+112>:\tmov    QWORD PTR [rax+0x5f],0x4\n   0x000000000008a1cc <+120>:\tmov    QWORD PTR [rax+0x67],0x6\n   0x000000000008a1d4 <+128>:\tmov    QWORD PTR [rax+0x6f],0x8\n   0x000000000008a1dc <+136>:\tmov    QWORD PTR [rax+0x77],0xa\n   0x000000000008a1e4 <+144>:\tmov    QWORD PTR [rax+0x7f],0xc\n   0x000000000008a1ec <+152>:\tmov    QWORD PTR [rax+0x87],0xe\n   0x000000000008a1f7 <+163>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a1fe <+170>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a203 <+175>:\tmov    rcx,rax\n   0x000000000008a206 <+178>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a20a <+182>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a20e <+186>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a212 <+190>:\tmov    QWORD PTR [rcx+0xf],0x1e\n   0x000000000008a21a <+198>:\tmov    rdi,rcx\n   0x000000000008a21d <+201>:\tmov    r10,QWORD PTR [r15+0x7f]\n   0x000000000008a221 <+205>:\tcall   0x8a46c <ListBase.shuffle>\n   0x000000000008a226 <+210>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a22a <+214>:\tmov    r10d,0x4\n   0x000000000008a230 <+220>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a235 <+225>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a23c <+232>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a240 <+236>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a244 <+240>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a248 <+244>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a24c <+248>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a251 <+253>:\tmov    rdi,rax\n   0x000000000008a254 <+256>:\tcall   0x8a3d0 <print>\n   0x000000000008a259 <+261>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a25d <+265>:\tmov    rax,QWORD PTR [rcx+0xf]\n   0x000000000008a261 <+269>:\tmov    rsi,rax\n   0x000000000008a264 <+272>:\tsar    rsi,1\n   0x000000000008a267 <+275>:\tmov    rdi,rsi\n   0x000000000008a26a <+278>:\tsub    rdi,0x1\n   0x000000000008a26e <+282>:\tmov    r8,QWORD PTR [rcx+0x17]\n   0x000000000008a272 <+286>:\tmov    r10d,0x1\n   0x000000000008a278 <+292>:\tmov    r9d,0x2\n   0x000000000008a27e <+298>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a282 <+302>:\tjbe    0x8a3b8 <main+612>\n   0x000000000008a288 <+308>:\tcmp    r10,rdi\n   0x000000000008a28b <+311>:\tjg     0x8a370 <main+540>\n   0x000000000008a291 <+317>:\tmov    r12,r10\n   0x000000000008a294 <+320>:\tsub    r12,0x1\n   0x000000000008a298 <+324>:\tmov    rax,rsi\n   0x000000000008a29b <+327>:\tmov    rbx,r12\n   0x000000000008a29e <+330>:\tcmp    rbx,rax\n   0x000000000008a2a1 <+333>:\tjae    0x8a3c4 <main+624>\n   0x000000000008a2a7 <+339>:\tmov    r13,QWORD PTR [r8+r12*8+0x17]\n   0x000000000008a2ac <+344>:\tmov    rax,rsi\n   0x000000000008a2af <+347>:\tmov    rbx,r10\n   0x000000000008a2b2 <+350>:\tcmp    rbx,rax\n   0x000000000008a2b5 <+353>:\tjae    0x8a3c9 <main+629>\n   0x000000000008a2bb <+359>:\tmov    rax,QWORD PTR [r8+r10*8+0x17]\n   0x000000000008a2c0 <+364>:\tmov    rdx,r13\n   0x000000000008a2c3 <+367>:\tsar    rdx,1\n   0x000000000008a2c6 <+370>:\tjae    0x8a2cd <main+377>\n   0x000000000008a2c8 <+372>:\tmov    rdx,QWORD PTR [rdx+rdx*1+0x8]\n   0x000000000008a2cd <+377>:\tmov    rbx,rax\n   0x000000000008a2d0 <+380>:\tsar    rbx,1\n   0x000000000008a2d3 <+383>:\tjae    0x8a2da <main+390>\n   0x000000000008a2d5 <+385>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a2da <+390>:\tcmp    rdx,rbx\n   0x000000000008a2dd <+393>:\tjg     0x8a2f2 <main+414>\n   0x000000000008a2e3 <+399>:\tmov    rax,r9\n   0x000000000008a2e6 <+402>:\tadd    rax,0x1\n   0x000000000008a2ea <+406>:\tmov    r10,r9\n   0x000000000008a2ed <+409>:\tmov    r9,rax\n   0x000000000008a2f0 <+412>:\tjmp    0x8a27e <main+298>\n   0x000000000008a2f2 <+414>:\tmov    rdx,r8\n   0x000000000008a2f5 <+417>:\tmov    rbx,r13\n   0x000000000008a2f8 <+420>:\tlea    r13,[rdx+r12*8+0x17]\n   0x000000000008a2fd <+425>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a301 <+429>:\ttest   al,0x1\n   0x000000000008a303 <+431>:\tje     0x8a31c <main+456>\n   0x000000000008a305 <+433>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a309 <+437>:\tshr    r11d,0x2\n   0x000000000008a30d <+441>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a311 <+445>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a315 <+449>:\tje     0x8a31c <main+456>\n   0x000000000008a317 <+451>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a31c <+456>:\tmov    rdx,r8\n   0x000000000008a31f <+459>:\tmov    rax,rbx\n   0x000000000008a322 <+462>:\tlea    r13,[rdx+r10*8+0x17]\n   0x000000000008a327 <+467>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a32b <+471>:\ttest   al,0x1\n   0x000000000008a32d <+473>:\tje     0x8a346 <main+498>\n   0x000000000008a32f <+475>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a333 <+479>:\tshr    r11d,0x2\n   0x000000000008a337 <+483>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a33b <+487>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a33f <+491>:\tje     0x8a346 <main+498>\n   0x000000000008a341 <+493>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a346 <+498>:\tcmp    r12,0x0\n   0x000000000008a34a <+502>:\tjne    0x8a35f <main+523>\n   0x000000000008a350 <+508>:\tmov    rax,r9\n   0x000000000008a353 <+511>:\tadd    rax,0x1\n   0x000000000008a357 <+515>:\tmov    rdx,r9\n   0x000000000008a35a <+518>:\tjmp    0x8a365 <main+529>\n   0x000000000008a35f <+523>:\tmov    rdx,r12\n   0x000000000008a362 <+526>:\tmov    rax,r9\n   0x000000000008a365 <+529>:\tmov    r10,rdx\n   0x000000000008a368 <+532>:\tmov    r9,rax\n   0x000000000008a36b <+535>:\tjmp    0x8a27e <main+298>\n   0x000000000008a370 <+540>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a374 <+544>:\tmov    r10d,0x4\n   0x000000000008a37a <+550>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a37f <+555>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a386 <+562>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a38a <+566>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a38e <+570>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a392 <+574>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a396 <+578>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a39b <+583>:\tmov    rdi,rax\n   0x000000000008a39e <+586>:\tcall   0x8a3d0 <print>\n   0x000000000008a3a3 <+591>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a3a7 <+595>:\tmov    rsp,rbp\n   0x000000000008a3aa <+598>:\tpop    rbp\n   0x000000000008a3ab <+599>:\tret\n   0x000000000008a3ac <+600>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a3b3 <+607>:\tjmp    0x8a166 <main+18>\n   0x000000000008a3b8 <+612>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a3bf <+619>:\tjmp    0x8a288 <main+308>\n   0x000000000008a3c4 <+624>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a3c9 <+629>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sorting-algorithms-heapsort.dart",
  "functions": [
    {
      "name": "heapSort",
      "source": "void heapSort(List a) {\n  int count = a.length;\n\n  // first place 'a' in max-heap order\n  heapify(a, count);\n\n  int end = count - 1;\n  while (end > 0) {\n    // swap the root (maximum value) of the heap with the\n    // last element of the heap\n    int tmp = a[end];\n    a[end] = a[0];\n    a[0] = tmp;\n\n    // put the heap back in max-heap order\n    siftDown(a, 0, end - 1);\n\n    // decrement the size of the heap so that the previous\n    // max value will stay in its proper place\n    end--;\n  }\n}",
      "assembly": "Dump of assembler code for function heapSort:\n   0x000000000008a36c <+0>:\tpush   rbp\n   0x000000000008a36d <+1>:\tmov    rbp,rsp\n   0x000000000008a370 <+4>:\tsub    rsp,0x10\n   0x000000000008a374 <+8>:\tmov    rax,rdi\n   0x000000000008a377 <+11>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x000000000008a37b <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a37f <+19>:\tjbe    0x8a555 <heapSort+489>\n   0x000000000008a385 <+25>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a389 <+29>:\tsar    rcx,1\n   0x000000000008a38c <+32>:\tmov    rdi,rax\n   0x000000000008a38f <+35>:\tmov    rsi,rcx\n   0x000000000008a392 <+38>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a396 <+42>:\tcall   0x8a594 <heapify>\n   0x000000000008a39b <+47>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a39f <+51>:\tsub    rcx,0x1\n   0x000000000008a3a3 <+55>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a3a7 <+59>:\tmov    rdi,QWORD PTR [rsi+0xf]\n   0x000000000008a3ab <+63>:\tsar    rdi,1\n   0x000000000008a3ae <+66>:\tmov    r8,QWORD PTR [rsi+0x17]\n   0x000000000008a3b2 <+70>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3b6 <+74>:\tjbe    0x8a561 <heapSort+501>\n   0x000000000008a3bc <+80>:\tcmp    rcx,0x0\n   0x000000000008a3c0 <+84>:\tjle    0x8a54c <heapSort+480>\n   0x000000000008a3c6 <+90>:\tmov    rax,rdi\n   0x000000000008a3c9 <+93>:\tmov    rbx,rcx\n   0x000000000008a3cc <+96>:\tcmp    rbx,rax\n   0x000000000008a3cf <+99>:\tjae    0x8a56d <heapSort+513>\n   0x000000000008a3d5 <+105>:\tmov    rsi,QWORD PTR [r8+rcx*8+0x17]\n   0x000000000008a3da <+110>:\tmov    rax,rdi\n   0x000000000008a3dd <+113>:\txor    ebx,ebx\n   0x000000000008a3df <+115>:\tcmp    rbx,rax\n   0x000000000008a3e2 <+118>:\tjae    0x8a572 <heapSort+518>\n   0x000000000008a3e8 <+124>:\tmov    rax,QWORD PTR [r8+0x17]\n   0x000000000008a3ec <+128>:\tmov    rdx,r8\n   0x000000000008a3ef <+131>:\tlea    r13,[rdx+rcx*8+0x17]\n   0x000000000008a3f4 <+136>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a3f8 <+140>:\ttest   al,0x1\n   0x000000000008a3fa <+142>:\tje     0x8a413 <heapSort+167>\n   0x000000000008a3fc <+144>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a400 <+148>:\tshr    r11d,0x2\n   0x000000000008a404 <+152>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a408 <+156>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a40c <+160>:\tje     0x8a413 <heapSort+167>\n   0x000000000008a40e <+162>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a413 <+167>:\tmov    rdx,r8\n   0x000000000008a416 <+170>:\tmov    rax,rsi\n   0x000000000008a419 <+173>:\tlea    r13,[rdx+0x17]\n   0x000000000008a41d <+177>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a421 <+181>:\ttest   al,0x1\n   0x000000000008a423 <+183>:\tje     0x8a43c <heapSort+208>\n   0x000000000008a425 <+185>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a429 <+189>:\tshr    r11d,0x2\n   0x000000000008a42d <+193>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a431 <+197>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a435 <+201>:\tje     0x8a43c <heapSort+208>\n   0x000000000008a437 <+203>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a43c <+208>:\tsub    rcx,0x1\n   0x000000000008a440 <+212>:\txor    esi,esi\n   0x000000000008a442 <+214>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a446 <+218>:\tjbe    0x8a577 <heapSort+523>\n   0x000000000008a44c <+224>:\tmov    r9,rsi\n   0x000000000008a44f <+227>:\tshl    r9,1\n   0x000000000008a452 <+230>:\tadd    r9,0x1\n   0x000000000008a456 <+234>:\tcmp    r9,rcx\n   0x000000000008a459 <+237>:\tjg     0x8a3b2 <heapSort+70>\n   0x000000000008a45f <+243>:\tmov    rdx,r9\n   0x000000000008a462 <+246>:\tadd    rdx,0x1\n   0x000000000008a466 <+250>:\tcmp    rdx,rcx\n   0x000000000008a469 <+253>:\tjg     0x8a4b7 <heapSort+331>\n   0x000000000008a46f <+259>:\tmov    rax,rdi\n   0x000000000008a472 <+262>:\tmov    rbx,r9\n   0x000000000008a475 <+265>:\tcmp    rbx,rax\n   0x000000000008a478 <+268>:\tjae    0x8a583 <heapSort+535>\n   0x000000000008a47e <+274>:\tmov    r10,QWORD PTR [r8+r9*8+0x17]\n   0x000000000008a483 <+279>:\tmov    rax,rdi\n   0x000000000008a486 <+282>:\tmov    rbx,rdx\n   0x000000000008a489 <+285>:\tcmp    rbx,rax\n   0x000000000008a48c <+288>:\tjae    0x8a588 <heapSort+540>\n   0x000000000008a492 <+294>:\tmov    r12,QWORD PTR [r8+rdx*8+0x17]\n   0x000000000008a497 <+299>:\tsar    r10,1\n   0x000000000008a49a <+302>:\tjae    0x8a4a1 <heapSort+309>\n   0x000000000008a49c <+304>:\tmov    r10,QWORD PTR [r10+r10*1+0x8]\n   0x000000000008a4a1 <+309>:\tsar    r12,1\n   0x000000000008a4a4 <+312>:\tjae    0x8a4ab <heapSort+319>\n   0x000000000008a4a6 <+314>:\tmov    r12,QWORD PTR [r12+r12*1+0x8]\n   0x000000000008a4ab <+319>:\tcmp    r10,r12\n   0x000000000008a4ae <+322>:\tjge    0x8a4b7 <heapSort+331>\n   0x000000000008a4b4 <+328>:\tmov    r9,rdx\n   0x000000000008a4b7 <+331>:\tmov    r10,QWORD PTR [r8+rsi*8+0x17]\n   0x000000000008a4bc <+336>:\tmov    rax,rdi\n   0x000000000008a4bf <+339>:\tmov    rbx,r9\n   0x000000000008a4c2 <+342>:\tcmp    rbx,rax\n   0x000000000008a4c5 <+345>:\tjae    0x8a58d <heapSort+545>\n   0x000000000008a4cb <+351>:\tmov    rax,QWORD PTR [r8+r9*8+0x17]\n   0x000000000008a4d0 <+356>:\tmov    rbx,r10\n   0x000000000008a4d3 <+359>:\tsar    rbx,1\n   0x000000000008a4d6 <+362>:\tjae    0x8a4dd <heapSort+369>\n   0x000000000008a4d8 <+364>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a4dd <+369>:\tmov    r12,rax\n   0x000000000008a4e0 <+372>:\tsar    r12,1\n   0x000000000008a4e3 <+375>:\tjae    0x8a4ea <heapSort+382>\n   0x000000000008a4e5 <+377>:\tmov    r12,QWORD PTR [r12+r12*1+0x8]\n   0x000000000008a4ea <+382>:\tcmp    rbx,r12\n   0x000000000008a4ed <+385>:\tjge    0x8a3b2 <heapSort+70>\n   0x000000000008a4f3 <+391>:\tmov    rdx,r8\n   0x000000000008a4f6 <+394>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008a4fb <+399>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a4ff <+403>:\ttest   al,0x1\n   0x000000000008a501 <+405>:\tje     0x8a51a <heapSort+430>\n   0x000000000008a503 <+407>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a507 <+411>:\tshr    r11d,0x2\n   0x000000000008a50b <+415>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a50f <+419>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a513 <+423>:\tje     0x8a51a <heapSort+430>\n   0x000000000008a515 <+425>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a51a <+430>:\tmov    rdx,r8\n   0x000000000008a51d <+433>:\tmov    rax,r10\n   0x000000000008a520 <+436>:\tlea    r13,[rdx+r9*8+0x17]\n   0x000000000008a525 <+441>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a529 <+445>:\ttest   al,0x1\n   0x000000000008a52b <+447>:\tje     0x8a544 <heapSort+472>\n   0x000000000008a52d <+449>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a531 <+453>:\tshr    r11d,0x2\n   0x000000000008a535 <+457>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a539 <+461>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a53d <+465>:\tje     0x8a544 <heapSort+472>\n   0x000000000008a53f <+467>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a544 <+472>:\tmov    rsi,r9\n   0x000000000008a547 <+475>:\tjmp    0x8a442 <heapSort+214>\n   0x000000000008a54c <+480>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a550 <+484>:\tmov    rsp,rbp\n   0x000000000008a553 <+487>:\tpop    rbp\n   0x000000000008a554 <+488>:\tret\n   0x000000000008a555 <+489>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a55c <+496>:\tjmp    0x8a385 <heapSort+25>\n   0x000000000008a561 <+501>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a568 <+508>:\tjmp    0x8a3bc <heapSort+80>\n   0x000000000008a56d <+513>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a572 <+518>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a577 <+523>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a57e <+530>:\tjmp    0x8a44c <heapSort+224>\n   0x000000000008a583 <+535>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a588 <+540>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a58d <+545>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "heapify",
      "source": "void heapify(List a, int count) {\n  // start is assigned the index in 'a' of the last parent node\n  int start = ((count - 2)/2).toInt(); // binary heap\n\n  while (start >= 0) {\n    // sift down the node at index 'start' to the proper place\n    // such that all nodes below the 'start' index are in heap\n    // order\n    siftDown(a, start, count - 1);\n    start--;\n  }\n}",
      "assembly": "Dump of assembler code for function heapify:\n   0x000000000008a594 <+0>:\tpush   rbp\n   0x000000000008a595 <+1>:\tmov    rbp,rsp\n   0x000000000008a598 <+4>:\tmovsd  xmm0,QWORD PTR [r15+0x1807]\n   0x000000000008a5a1 <+13>:\tmov    rcx,rsi\n   0x000000000008a5a4 <+16>:\tsub    rcx,0x2\n   0x000000000008a5a8 <+20>:\txorps  xmm1,xmm1\n   0x000000000008a5ab <+23>:\tcvtsi2sd xmm1,rcx\n   0x000000000008a5b0 <+28>:\tdivsd  xmm1,xmm0\n   0x000000000008a5b4 <+32>:\tcvttsd2si rcx,xmm1\n   0x000000000008a5b9 <+37>:\tmov    r8,rcx\n   0x000000000008a5bc <+40>:\tshl    r8,1\n   0x000000000008a5bf <+43>:\tjo     0x8a72c <heapify+408>\n   0x000000000008a5c5 <+49>:\tadd    rcx,rcx\n   0x000000000008a5c8 <+52>:\tsar    rcx,1\n   0x000000000008a5cb <+55>:\tjae    0x8a5d2 <heapify+62>\n   0x000000000008a5cd <+57>:\tmov    rcx,QWORD PTR [rcx+rcx*1+0x8]\n   0x000000000008a5d2 <+62>:\tsub    rsi,0x1\n   0x000000000008a5d6 <+66>:\tmov    r8,QWORD PTR [rdi+0xf]\n   0x000000000008a5da <+70>:\tmov    r9,r8\n   0x000000000008a5dd <+73>:\tsar    r9,1\n   0x000000000008a5e0 <+76>:\tmov    r10,QWORD PTR [rdi+0x17]\n   0x000000000008a5e4 <+80>:\tsar    r8,1\n   0x000000000008a5e7 <+83>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a5eb <+87>:\tjbe    0x8a75b <heapify+455>\n   0x000000000008a5f1 <+93>:\tcmp    rcx,0x0\n   0x000000000008a5f5 <+97>:\tjl     0x8a723 <heapify+399>\n   0x000000000008a5fb <+103>:\tmov    rdi,rcx\n   0x000000000008a5fe <+106>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a602 <+110>:\tjbe    0x8a767 <heapify+467>\n   0x000000000008a608 <+116>:\tmov    r12,rdi\n   0x000000000008a60b <+119>:\tshl    r12,1\n   0x000000000008a60e <+122>:\tadd    r12,0x1\n   0x000000000008a612 <+126>:\tcmp    r12,rsi\n   0x000000000008a615 <+129>:\tjg     0x8a71a <heapify+390>\n   0x000000000008a61b <+135>:\tmov    rdx,r12\n   0x000000000008a61e <+138>:\tadd    rdx,0x1\n   0x000000000008a622 <+142>:\tcmp    rdx,rsi\n   0x000000000008a625 <+145>:\tjg     0x8a673 <heapify+223>\n   0x000000000008a62b <+151>:\tmov    rax,r8\n   0x000000000008a62e <+154>:\tmov    rbx,r12\n   0x000000000008a631 <+157>:\tcmp    rbx,rax\n   0x000000000008a634 <+160>:\tjae    0x8a773 <heapify+479>\n   0x000000000008a63a <+166>:\tmov    r13,QWORD PTR [r10+r12*8+0x17]\n   0x000000000008a63f <+171>:\tmov    rax,r8\n   0x000000000008a642 <+174>:\tmov    rbx,rdx\n   0x000000000008a645 <+177>:\tcmp    rbx,rax\n   0x000000000008a648 <+180>:\tjae    0x8a778 <heapify+484>\n   0x000000000008a64e <+186>:\tmov    rax,QWORD PTR [r10+rdx*8+0x17]\n   0x000000000008a653 <+191>:\tsar    r13,1\n   0x000000000008a656 <+194>:\tjae    0x8a65d <heapify+201>\n   0x000000000008a658 <+196>:\tmov    r13,QWORD PTR [r13+r13*1+0x8]\n   0x000000000008a65d <+201>:\tsar    rax,1\n   0x000000000008a660 <+204>:\tjae    0x8a667 <heapify+211>\n   0x000000000008a662 <+206>:\tmov    rax,QWORD PTR [rax+rax*1+0x8]\n   0x000000000008a667 <+211>:\tcmp    r13,rax\n   0x000000000008a66a <+214>:\tjge    0x8a673 <heapify+223>\n   0x000000000008a670 <+220>:\tmov    r12,rdx\n   0x000000000008a673 <+223>:\tmov    rax,r9\n   0x000000000008a676 <+226>:\tmov    rbx,rdi\n   0x000000000008a679 <+229>:\tcmp    rbx,rax\n   0x000000000008a67c <+232>:\tjae    0x8a77d <heapify+489>\n   0x000000000008a682 <+238>:\tmov    r13,QWORD PTR [r10+rdi*8+0x17]\n   0x000000000008a687 <+243>:\tmov    rax,r9\n   0x000000000008a68a <+246>:\tmov    rbx,r12\n   0x000000000008a68d <+249>:\tcmp    rbx,rax\n   0x000000000008a690 <+252>:\tjae    0x8a782 <heapify+494>\n   0x000000000008a696 <+258>:\tmov    rax,QWORD PTR [r10+r12*8+0x17]\n   0x000000000008a69b <+263>:\tmov    rbx,r13\n   0x000000000008a69e <+266>:\tsar    rbx,1\n   0x000000000008a6a1 <+269>:\tjae    0x8a6a8 <heapify+276>\n   0x000000000008a6a3 <+271>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a6a8 <+276>:\tmov    rdx,rax\n   0x000000000008a6ab <+279>:\tsar    rdx,1\n   0x000000000008a6ae <+282>:\tjae    0x8a6b5 <heapify+289>\n   0x000000000008a6b0 <+284>:\tmov    rdx,QWORD PTR [rdx+rdx*1+0x8]\n   0x000000000008a6b5 <+289>:\tcmp    rbx,rdx\n   0x000000000008a6b8 <+292>:\tjge    0x8a71a <heapify+390>\n   0x000000000008a6be <+298>:\tmov    rdx,r10\n   0x000000000008a6c1 <+301>:\tmov    rbx,r13\n   0x000000000008a6c4 <+304>:\tlea    r13,[rdx+rdi*8+0x17]\n   0x000000000008a6c9 <+309>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a6cd <+313>:\ttest   al,0x1\n   0x000000000008a6cf <+315>:\tje     0x8a6e8 <heapify+340>\n   0x000000000008a6d1 <+317>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a6d5 <+321>:\tshr    r11d,0x2\n   0x000000000008a6d9 <+325>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a6dd <+329>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a6e1 <+333>:\tje     0x8a6e8 <heapify+340>\n   0x000000000008a6e3 <+335>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a6e8 <+340>:\tmov    rdx,r10\n   0x000000000008a6eb <+343>:\tmov    rax,rbx\n   0x000000000008a6ee <+346>:\tlea    r13,[rdx+r12*8+0x17]\n   0x000000000008a6f3 <+351>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a6f7 <+355>:\ttest   al,0x1\n   0x000000000008a6f9 <+357>:\tje     0x8a712 <heapify+382>\n   0x000000000008a6fb <+359>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a6ff <+363>:\tshr    r11d,0x2\n   0x000000000008a703 <+367>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a707 <+371>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a70b <+375>:\tje     0x8a712 <heapify+382>\n   0x000000000008a70d <+377>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a712 <+382>:\tmov    rdi,r12\n   0x000000000008a715 <+385>:\tjmp    0x8a5fe <heapify+106>\n   0x000000000008a71a <+390>:\tsub    rcx,0x1\n   0x000000000008a71e <+394>:\tjmp    0x8a5e7 <heapify+83>\n   0x000000000008a723 <+399>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a727 <+403>:\tmov    rsp,rbp\n   0x000000000008a72a <+406>:\tpop    rbp\n   0x000000000008a72b <+407>:\tret\n   0x000000000008a72c <+408>:\tsub    rsp,0x10\n   0x000000000008a730 <+412>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x000000000008a734 <+416>:\tpush   rdi\n   0x000000000008a735 <+417>:\tpush   rsi\n   0x000000000008a736 <+418>:\tmovaps xmm0,xmm1\n   0x000000000008a739 <+421>:\tmov    eax,0x4a\n   0x000000000008a73e <+426>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a745 <+433>:\tcall   QWORD PTR [r11+0x7]\n   0x000000000008a749 <+437>:\tmov    rcx,rax\n   0x000000000008a74c <+440>:\tpop    rsi\n   0x000000000008a74d <+441>:\tpop    rdi\n   0x000000000008a74e <+442>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x000000000008a752 <+446>:\tadd    rsp,0x10\n   0x000000000008a756 <+450>:\tjmp    0x8a5c8 <heapify+52>\n   0x000000000008a75b <+455>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a762 <+462>:\tjmp    0x8a5f1 <heapify+93>\n   0x000000000008a767 <+467>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a76e <+474>:\tjmp    0x8a608 <heapify+116>\n   0x000000000008a773 <+479>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a778 <+484>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a77d <+489>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a782 <+494>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  var arr=[1,5,2,7,3,9,4,6,8];\n  print(\"Before sort\");\n  arr.forEach((var i)=>print(\"$i\"));\n  heapSort(arr);\n  print(\"After sort\");\n  arr.forEach((var i)=>print(\"$i\"));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x20\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a33d <main+489>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x000000000008a16d <+25>:\tmov    r10d,0x12\n   0x000000000008a173 <+31>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a178 <+36>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a184 <+48>:\tmov    QWORD PTR [rax+0x1f],0xa\n   0x000000000008a18c <+56>:\tmov    QWORD PTR [rax+0x27],0x4\n   0x000000000008a194 <+64>:\tmov    QWORD PTR [rax+0x2f],0xe\n   0x000000000008a19c <+72>:\tmov    QWORD PTR [rax+0x37],0x6\n   0x000000000008a1a4 <+80>:\tmov    QWORD PTR [rax+0x3f],0x12\n   0x000000000008a1ac <+88>:\tmov    QWORD PTR [rax+0x47],0x8\n   0x000000000008a1b4 <+96>:\tmov    QWORD PTR [rax+0x4f],0xc\n   0x000000000008a1bc <+104>:\tmov    QWORD PTR [rax+0x57],0x10\n   0x000000000008a1c4 <+112>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a1cb <+119>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a1d0 <+124>:\tmov    rcx,rax\n   0x000000000008a1d3 <+127>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1d7 <+131>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a1db <+135>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a1df <+139>:\tmov    QWORD PTR [rcx+0xf],0x12\n   0x000000000008a1e7 <+147>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a1ee <+154>:\tcall   0x8a7c0 <printToConsole>\n   0x000000000008a1f3 <+159>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a1f7 <+163>:\tmov    rcx,QWORD PTR [rdi+0xf]\n   0x000000000008a1fb <+167>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x000000000008a1ff <+171>:\tmov    rax,rcx\n   0x000000000008a202 <+174>:\tsar    rax,1\n   0x000000000008a205 <+177>:\txor    edx,edx\n   0x000000000008a207 <+179>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008a20b <+183>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a20f <+187>:\tjbe    0x8a349 <main+501>\n   0x000000000008a215 <+193>:\tcmp    rdx,rax\n   0x000000000008a218 <+196>:\tjge    0x8a26f <main+283>\n   0x000000000008a21e <+202>:\tmov    rbx,rdx\n   0x000000000008a221 <+205>:\tcmp    rbx,rax\n   0x000000000008a224 <+208>:\tjae    0x8a355 <main+513>\n   0x000000000008a22a <+214>:\tmov    rax,QWORD PTR [rdi+0x17]\n   0x000000000008a22e <+218>:\tmov    rbx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a233 <+223>:\tmov    QWORD PTR [rsp],rbx\n   0x000000000008a237 <+227>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a23c <+232>:\tmov    rdi,rax\n   0x000000000008a23f <+235>:\tcall   0x8a788 <print>\n   0x000000000008a244 <+240>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a248 <+244>:\tmov    rbx,QWORD PTR [rcx+0xf]\n   0x000000000008a24c <+248>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a250 <+252>:\tcmp    rbx,rsi\n   0x000000000008a253 <+255>:\tjne    0x8a308 <main+436>\n   0x000000000008a259 <+261>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008a25d <+265>:\tadd    rdx,0x1\n   0x000000000008a261 <+269>:\tsar    rbx,1\n   0x000000000008a264 <+272>:\tmov    rax,rbx\n   0x000000000008a267 <+275>:\tmov    rdi,rcx\n   0x000000000008a26a <+278>:\tmov    rcx,rsi\n   0x000000000008a26d <+281>:\tjmp    0x8a207 <main+179>\n   0x000000000008a26f <+283>:\tmov    rcx,rdi\n   0x000000000008a272 <+286>:\tmov    rdi,rcx\n   0x000000000008a275 <+289>:\tcall   0x8a36c <heapSort>\n   0x000000000008a27a <+294>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a281 <+301>:\tcall   0x8a7c0 <printToConsole>\n   0x000000000008a286 <+306>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a28a <+310>:\tmov    rdx,QWORD PTR [rcx+0xf]\n   0x000000000008a28e <+314>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008a292 <+318>:\tmov    rax,rdx\n   0x000000000008a295 <+321>:\tsar    rax,1\n   0x000000000008a298 <+324>:\txor    esi,esi\n   0x000000000008a29a <+326>:\tmov    QWORD PTR [rbp-0x18],rsi\n   0x000000000008a29e <+330>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2a2 <+334>:\tjbe    0x8a35a <main+518>\n   0x000000000008a2a8 <+340>:\tcmp    rsi,rax\n   0x000000000008a2ab <+343>:\tjge    0x8a2ff <main+427>\n   0x000000000008a2b1 <+349>:\tmov    rbx,rsi\n   0x000000000008a2b4 <+352>:\tcmp    rbx,rax\n   0x000000000008a2b7 <+355>:\tjae    0x8a366 <main+530>\n   0x000000000008a2bd <+361>:\tmov    rax,QWORD PTR [rcx+0x17]\n   0x000000000008a2c1 <+365>:\tmov    rbx,QWORD PTR [rax+rsi*8+0x17]\n   0x000000000008a2c6 <+370>:\tmov    QWORD PTR [rsp],rbx\n   0x000000000008a2ca <+374>:\tcall   0x58e50 <_StringBase._interpolateSingle>\n   0x000000000008a2cf <+379>:\tmov    rdi,rax\n   0x000000000008a2d2 <+382>:\tcall   0x8a788 <print>\n   0x000000000008a2d7 <+387>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a2db <+391>:\tmov    rdx,QWORD PTR [rcx+0xf]\n   0x000000000008a2df <+395>:\tmov    rbx,QWORD PTR [rbp-0x8]\n   0x000000000008a2e3 <+399>:\tcmp    rdx,rbx\n   0x000000000008a2e6 <+402>:\tjne    0x8a321 <main+461>\n   0x000000000008a2ec <+408>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a2f0 <+412>:\tadd    rsi,0x1\n   0x000000000008a2f4 <+416>:\tsar    rdx,1\n   0x000000000008a2f7 <+419>:\tmov    rax,rdx\n   0x000000000008a2fa <+422>:\tmov    rdx,rbx\n   0x000000000008a2fd <+425>:\tjmp    0x8a29a <main+326>\n   0x000000000008a2ff <+427>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a303 <+431>:\tmov    rsp,rbp\n   0x000000000008a306 <+434>:\tpop    rbp\n   0x000000000008a307 <+435>:\tret\n   0x000000000008a308 <+436>:\tcall   0x53570 <new ConcurrentModificationError>\n   0x000000000008a30d <+441>:\tmov    rcx,rax\n   0x000000000008a310 <+444>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a314 <+448>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008a318 <+452>:\tmov    rax,rcx\n   0x000000000008a31b <+455>:\tcall   0x83264 <stub _iso_stub_ThrowStub>\n   0x000000000008a320 <+460>:\tint3\n   0x000000000008a321 <+461>:\tmov    rax,rcx\n   0x000000000008a324 <+464>:\tcall   0x53570 <new ConcurrentModificationError>\n   0x000000000008a329 <+469>:\tmov    rcx,rax\n   0x000000000008a32c <+472>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a330 <+476>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x000000000008a334 <+480>:\tmov    rax,rcx\n   0x000000000008a337 <+483>:\tcall   0x83264 <stub _iso_stub_ThrowStub>\n   0x000000000008a33c <+488>:\tint3\n   0x000000000008a33d <+489>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a344 <+496>:\tjmp    0x8a166 <main+18>\n   0x000000000008a349 <+501>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a350 <+508>:\tjmp    0x8a215 <main+193>\n   0x000000000008a355 <+513>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a35a <+518>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a361 <+525>:\tjmp    0x8a2a8 <main+340>\n   0x000000000008a366 <+530>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sorting-algorithms-insertion-sort.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n    List<int> a = insertSort([10, 3, 11, 15, 19, 1]);\n    print('${a}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x8\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a263 <main+271>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0xc\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a179 <+37>:\tmov    QWORD PTR [rax+0x17],0x14\n   0x000000000008a181 <+45>:\tmov    QWORD PTR [rax+0x1f],0x6\n   0x000000000008a189 <+53>:\tmov    QWORD PTR [rax+0x27],0x16\n   0x000000000008a191 <+61>:\tmov    QWORD PTR [rax+0x2f],0x1e\n   0x000000000008a199 <+69>:\tmov    QWORD PTR [rax+0x37],0x26\n   0x000000000008a1a1 <+77>:\tmov    QWORD PTR [rax+0x3f],0x2\n   0x000000000008a1a9 <+85>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a1b0 <+92>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a1b5 <+97>:\tmov    rcx,rax\n   0x000000000008a1b8 <+100>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1bc <+104>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a1c0 <+108>:\tmov    QWORD PTR [rcx+0xf],0xc\n   0x000000000008a1c8 <+116>:\tmov    edx,0x1\n   0x000000000008a1cd <+121>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1d1 <+125>:\tjbe    0x8a26f <main+283>\n   0x000000000008a1d7 <+131>:\tcmp    rdx,0x6\n   0x000000000008a1db <+135>:\tjge    0x8a24a <main+246>\n   0x000000000008a1e1 <+141>:\tmov    rbx,QWORD PTR [rax+rdx*8+0x17]\n   0x000000000008a1e6 <+146>:\tmov    rsi,rdx\n   0x000000000008a1e9 <+149>:\tsub    rsi,0x1\n   0x000000000008a1ed <+153>:\tmov    rdi,rbx\n   0x000000000008a1f0 <+156>:\tsar    rdi,1\n   0x000000000008a1f3 <+159>:\tjae    0x8a1fa <main+166>\n   0x000000000008a1f5 <+161>:\tmov    rdi,QWORD PTR [rdi+rdi*1+0x8]\n   0x000000000008a1fa <+166>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1fe <+170>:\tjbe    0x8a27b <main+295>\n   0x000000000008a204 <+176>:\tcmp    rsi,0x0\n   0x000000000008a208 <+180>:\tjl     0x8a23b <main+231>\n   0x000000000008a20e <+186>:\tmov    r8,QWORD PTR [rax+rsi*8+0x17]\n   0x000000000008a213 <+191>:\tmov    r9,r8\n   0x000000000008a216 <+194>:\tsar    r9,1\n   0x000000000008a219 <+197>:\tjae    0x8a220 <main+204>\n   0x000000000008a21b <+199>:\tmov    r9,QWORD PTR [r9+r9*1+0x8]\n   0x000000000008a220 <+204>:\tcmp    r9,rdi\n   0x000000000008a223 <+207>:\tjle    0x8a23b <main+231>\n   0x000000000008a229 <+213>:\tmov    r9,rsi\n   0x000000000008a22c <+216>:\tadd    r9,0x1\n   0x000000000008a230 <+220>:\tmov    QWORD PTR [rax+r9*8+0x17],r8\n   0x000000000008a235 <+225>:\tsub    rsi,0x1\n   0x000000000008a239 <+229>:\tjmp    0x8a1fa <main+166>\n   0x000000000008a23b <+231>:\tadd    rsi,0x1\n   0x000000000008a23f <+235>:\tmov    QWORD PTR [rax+rsi*8+0x17],rbx\n   0x000000000008a244 <+240>:\tadd    rdx,0x1\n   0x000000000008a248 <+244>:\tjmp    0x8a1cd <main+121>\n   0x000000000008a24a <+246>:\tmov    rdi,rcx\n   0x000000000008a24d <+249>:\tcall   0x74e10 <ListBase.listToString>\n   0x000000000008a252 <+254>:\tmov    rdi,rax\n   0x000000000008a255 <+257>:\tcall   0x8a284 <print>\n   0x000000000008a25a <+262>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a25e <+266>:\tmov    rsp,rbp\n   0x000000000008a261 <+269>:\tpop    rbp\n   0x000000000008a262 <+270>:\tret\n   0x000000000008a263 <+271>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a26a <+278>:\tjmp    0x8a166 <main+18>\n   0x000000000008a26f <+283>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a276 <+290>:\tjmp    0x8a1d7 <main+131>\n   0x000000000008a27b <+295>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a282 <+302>:\tjmp    0x8a204 <main+176>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sorting-algorithms-quicksort.dart",
  "functions": [
    {
      "name": "quickSort",
      "source": "quickSort(List a) {\n  if (a.length <= 1) {\n    return a;\n  }\n\n  var pivot = a[0];\n  var less = [];\n  var more = [];\n  var pivotList = [];\n\n  // Partition\n  a.forEach((var i){\n    if (i.compareTo(pivot) < 0) {\n      less.add(i);\n    } else if (i.compareTo(pivot) > 0) {\n      more.add(i);\n    } else {\n      pivotList.add(i);\n    }\n  });\n\n  // Recursively sort sublists\n  less = quickSort(less);\n  more = quickSort(more);\n\n  // Concatenate results\n  less.addAll(pivotList);\n  less.addAll(more);\n  return less;\n}",
      "assembly": "Dump of assembler code for function quickSort:\n   0x0000000000090ac4 <+0>:\tpush   rbp\n   0x0000000000090ac5 <+1>:\tmov    rbp,rsp\n   0x0000000000090ac8 <+4>:\tsub    rsp,0x28\n   0x0000000000090acc <+8>:\tmov    rax,rdi\n   0x0000000000090acf <+11>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x0000000000090ad3 <+15>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090ad7 <+19>:\tjbe    0x90d3c <quickSort+632>\n   0x0000000000090add <+25>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x0000000000090ae0 <+28>:\tshr    ecx,0xc\n   0x0000000000090ae3 <+31>:\tmov    QWORD PTR [rsp],rax\n   0x0000000000090ae7 <+35>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090aeb <+39>:\tcall   QWORD PTR [rax+rcx*8+0x7ca8]\n   0x0000000000090af2 <+46>:\tsar    rax,1\n   0x0000000000090af5 <+49>:\tcmp    rax,0x1\n   0x0000000000090af9 <+53>:\tjg     0x90b08 <quickSort+68>\n   0x0000000000090aff <+59>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090b03 <+63>:\tmov    rsp,rbp\n   0x0000000000090b06 <+66>:\tpop    rbp\n   0x0000000000090b07 <+67>:\tret\n   0x0000000000090b08 <+68>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000090b0c <+72>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x0000000000090b0f <+75>:\tshr    ecx,0xc\n   0x0000000000090b12 <+78>:\tmov    QWORD PTR [rsp+0x8],rdi\n   0x0000000000090b17 <+83>:\tmov    QWORD PTR [rsp],0x0\n   0x0000000000090b1f <+91>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090b23 <+95>:\tcall   QWORD PTR [rax+rcx*8]\n   0x0000000000090b26 <+98>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x0000000000090b2a <+102>:\tmov    r10d,0x4\n   0x0000000000090b30 <+108>:\tcall   0x8a518 <stub _iso_stub_AllocateContextStub>\n   0x0000000000090b35 <+113>:\tmov    rcx,rax\n   0x0000000000090b38 <+116>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000090b3c <+120>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x0000000000090b40 <+124>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x0000000000090b44 <+128>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x0000000000090b48 <+132>:\txor    esi,esi\n   0x0000000000090b4a <+134>:\tcall   0x56dd8 <new _GrowableList>\n   0x0000000000090b4f <+139>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x0000000000090b53 <+143>:\tmov    QWORD PTR [rdx+0x1f],rax\n   0x0000000000090b57 <+147>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000090b5b <+151>:\tshr    r11d,0x2\n   0x0000000000090b5f <+155>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000090b63 <+159>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000090b67 <+163>:\tje     0x90b6e <quickSort+170>\n   0x0000000000090b69 <+165>:\tcall   0x89f12 <stub _iso_stub_WriteBarrierWrappersStub+26>\n   0x0000000000090b6e <+170>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x0000000000090b72 <+174>:\txor    esi,esi\n   0x0000000000090b74 <+176>:\tcall   0x56dd8 <new _GrowableList>\n   0x0000000000090b79 <+181>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x0000000000090b7d <+185>:\tmov    QWORD PTR [rdx+0x27],rax\n   0x0000000000090b81 <+189>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000090b85 <+193>:\tshr    r11d,0x2\n   0x0000000000090b89 <+197>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000090b8d <+201>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000090b91 <+205>:\tje     0x90b98 <quickSort+212>\n   0x0000000000090b93 <+207>:\tcall   0x89f12 <stub _iso_stub_WriteBarrierWrappersStub+26>\n   0x0000000000090b98 <+212>:\tmov    rdi,QWORD PTR [r14+0x70]\n   0x0000000000090b9c <+216>:\txor    esi,esi\n   0x0000000000090b9e <+218>:\tcall   0x56dd8 <new _GrowableList>\n   0x0000000000090ba3 <+223>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000090ba7 <+227>:\tmov    QWORD PTR [rcx+0x2f],rax\n   0x0000000000090bab <+231>:\tmov    r11b,BYTE PTR [rcx-0x1]\n   0x0000000000090baf <+235>:\tshr    r11d,0x2\n   0x0000000000090bb3 <+239>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000090bb7 <+243>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000090bbb <+247>:\tje     0x90bc2 <quickSort+254>\n   0x0000000000090bbd <+249>:\tcall   0x89f05 <stub _iso_stub_WriteBarrierWrappersStub+13>\n   0x0000000000090bc2 <+254>:\tmov    rdx,rcx\n   0x0000000000090bc5 <+257>:\tmov    rbx,QWORD PTR [r15+0x181f]\n   0x0000000000090bcc <+264>:\tcall   0x8a844 <stub _iso_stub_AllocateClosureStub>\n   0x0000000000090bd1 <+269>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000090bd5 <+273>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x0000000000090bd8 <+276>:\tshr    ecx,0xc\n   0x0000000000090bdb <+279>:\tmov    rsi,rax\n   0x0000000000090bde <+282>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090be2 <+286>:\tcall   QWORD PTR [rax+rcx*8+0x8cf8]\n   0x0000000000090be9 <+293>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x0000000000090bed <+297>:\tmov    rdi,QWORD PTR [rax+0x1f]\n   0x0000000000090bf1 <+301>:\tcall   0x90ac4 <quickSort>\n   0x0000000000090bf6 <+306>:\tmov    rbx,rax\n   0x0000000000090bf9 <+309>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x0000000000090bfd <+313>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x0000000000090c01 <+317>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x0000000000090c05 <+321>:\ttest   al,0x1\n   0x0000000000090c07 <+323>:\tmov    esi,0x3c\n   0x0000000000090c0c <+328>:\tje     0x90c14 <quickSort+336>\n   0x0000000000090c0e <+330>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x0000000000090c11 <+333>:\tshr    esi,0xc\n   0x0000000000090c14 <+336>:\tsub    rsi,0x5a\n   0x0000000000090c18 <+340>:\tcmp    rsi,0x2\n   0x0000000000090c1c <+344>:\tjbe    0x90c50 <quickSort+396>\n   0x0000000000090c22 <+350>:\tsub    rsi,0x16\n   0x0000000000090c26 <+354>:\tcmp    rsi,0x37\n   0x0000000000090c2a <+358>:\tjbe    0x90c50 <quickSort+396>\n   0x0000000000090c30 <+364>:\tcmp    rsi,0x1b8\n   0x0000000000090c37 <+371>:\tje     0x90c50 <quickSort+396>\n   0x0000000000090c3d <+377>:\tmov    rbx,QWORD PTR [r15+0x667]\n   0x0000000000090c44 <+384>:\tmov    r9,QWORD PTR [r15+0x1827]\n   0x0000000000090c4b <+391>:\tcall   0x8975c <stub _iso_stub_DefaultTypeTestStub>\n   0x0000000000090c50 <+396>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090c54 <+400>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000090c58 <+404>:\tmov    QWORD PTR [rcx+0x1f],rax\n   0x0000000000090c5c <+408>:\tmov    r11b,BYTE PTR [rcx-0x1]\n   0x0000000000090c60 <+412>:\tshr    r11d,0x2\n   0x0000000000090c64 <+416>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000090c68 <+420>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000090c6c <+424>:\tje     0x90c73 <quickSort+431>\n   0x0000000000090c6e <+426>:\tcall   0x89f05 <stub _iso_stub_WriteBarrierWrappersStub+13>\n   0x0000000000090c73 <+431>:\tmov    rdi,QWORD PTR [rcx+0x27]\n   0x0000000000090c77 <+435>:\tcall   0x90ac4 <quickSort>\n   0x0000000000090c7c <+440>:\tmov    rbx,rax\n   0x0000000000090c7f <+443>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x0000000000090c83 <+447>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x0000000000090c87 <+451>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x0000000000090c8b <+455>:\ttest   al,0x1\n   0x0000000000090c8d <+457>:\tmov    esi,0x3c\n   0x0000000000090c92 <+462>:\tje     0x90c9a <quickSort+470>\n   0x0000000000090c94 <+464>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x0000000000090c97 <+467>:\tshr    esi,0xc\n   0x0000000000090c9a <+470>:\tsub    rsi,0x5a\n   0x0000000000090c9e <+474>:\tcmp    rsi,0x2\n   0x0000000000090ca2 <+478>:\tjbe    0x90cd6 <quickSort+530>\n   0x0000000000090ca8 <+484>:\tsub    rsi,0x16\n   0x0000000000090cac <+488>:\tcmp    rsi,0x37\n   0x0000000000090cb0 <+492>:\tjbe    0x90cd6 <quickSort+530>\n   0x0000000000090cb6 <+498>:\tcmp    rsi,0x1b8\n   0x0000000000090cbd <+505>:\tje     0x90cd6 <quickSort+530>\n   0x0000000000090cc3 <+511>:\tmov    rbx,QWORD PTR [r15+0x667]\n   0x0000000000090cca <+518>:\tmov    r9,QWORD PTR [r15+0x1837]\n   0x0000000000090cd1 <+525>:\tcall   0x8975c <stub _iso_stub_DefaultTypeTestStub>\n   0x0000000000090cd6 <+530>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090cda <+534>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x0000000000090cde <+538>:\tmov    QWORD PTR [rdx+0x27],rax\n   0x0000000000090ce2 <+542>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x0000000000090ce6 <+546>:\tshr    r11d,0x2\n   0x0000000000090cea <+550>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x0000000000090cee <+554>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x0000000000090cf2 <+558>:\tje     0x90cf9 <quickSort+565>\n   0x0000000000090cf4 <+560>:\tcall   0x89f12 <stub _iso_stub_WriteBarrierWrappersStub+26>\n   0x0000000000090cf9 <+565>:\tmov    rdi,QWORD PTR [rdx+0x1f]\n   0x0000000000090cfd <+569>:\tmov    rsi,QWORD PTR [rdx+0x2f]\n   0x0000000000090d01 <+573>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x0000000000090d04 <+576>:\tshr    ecx,0xc\n   0x0000000000090d07 <+579>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090d0b <+583>:\tcall   QWORD PTR [rax+rcx*8+0x8f68]\n   0x0000000000090d12 <+590>:\tmov    rax,QWORD PTR [rbp-0x18]\n   0x0000000000090d16 <+594>:\tmov    rdi,QWORD PTR [rax+0x1f]\n   0x0000000000090d1a <+598>:\tmov    rsi,QWORD PTR [rax+0x27]\n   0x0000000000090d1e <+602>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x0000000000090d21 <+605>:\tshr    ecx,0xc\n   0x0000000000090d24 <+608>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090d28 <+612>:\tcall   QWORD PTR [rax+rcx*8+0x8f68]\n   0x0000000000090d2f <+619>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x0000000000090d33 <+623>:\tmov    rax,QWORD PTR [rcx+0x1f]\n   0x0000000000090d37 <+627>:\tmov    rsp,rbp\n   0x0000000000090d3a <+630>:\tpop    rbp\n   0x0000000000090d3b <+631>:\tret\n   0x0000000000090d3c <+632>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090d43 <+639>:\tjmp    0x90add <quickSort+25>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  var arr=[1,5,2,7,3,9,4,6,8];\n  print(\"Before sort\");\n  arr.forEach((var i)=>print(\"$i\"));\n  arr = quickSort(arr);\n  print(\"After sort\");\n  arr.forEach((var i)=>print(\"$i\"));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090910 <+0>:\tpush   rbp\n   0x0000000000090911 <+1>:\tmov    rbp,rsp\n   0x0000000000090914 <+4>:\tsub    rsp,0x20\n   0x0000000000090918 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000009091c <+12>:\tjbe    0x90aa5 <main+405>\n   0x0000000000090922 <+18>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x0000000000090929 <+25>:\tmov    r10d,0x12\n   0x000000000009092f <+31>:\tcall   0x8b428 <stub _iso_stub_AllocateArrayStub>\n   0x0000000000090934 <+36>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x0000000000090938 <+40>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x0000000000090940 <+48>:\tmov    QWORD PTR [rax+0x1f],0xa\n   0x0000000000090948 <+56>:\tmov    QWORD PTR [rax+0x27],0x4\n   0x0000000000090950 <+64>:\tmov    QWORD PTR [rax+0x2f],0xe\n   0x0000000000090958 <+72>:\tmov    QWORD PTR [rax+0x37],0x6\n   0x0000000000090960 <+80>:\tmov    QWORD PTR [rax+0x3f],0x12\n   0x0000000000090968 <+88>:\tmov    QWORD PTR [rax+0x47],0x8\n   0x0000000000090970 <+96>:\tmov    QWORD PTR [rax+0x4f],0xc\n   0x0000000000090978 <+104>:\tmov    QWORD PTR [rax+0x57],0x10\n   0x0000000000090980 <+112>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x0000000000090987 <+119>:\tcall   0x8a4e8 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000009098c <+124>:\tmov    rcx,rax\n   0x000000000009098f <+127>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090993 <+131>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x0000000000090997 <+135>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000009099b <+139>:\tmov    QWORD PTR [rcx+0xf],0x12\n   0x00000000000909a3 <+147>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x00000000000909aa <+154>:\tcall   0x90f00 <printToConsole>\n   0x00000000000909af <+159>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x00000000000909b3 <+163>:\tmov    rcx,QWORD PTR [rdi+0xf]\n   0x00000000000909b7 <+167>:\tmov    QWORD PTR [rbp-0x8],rcx\n   0x00000000000909bb <+171>:\tmov    rax,rcx\n   0x00000000000909be <+174>:\tsar    rax,1\n   0x00000000000909c1 <+177>:\txor    edx,edx\n   0x00000000000909c3 <+179>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x00000000000909c7 <+183>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x00000000000909cb <+187>:\tjbe    0x90ab1 <main+417>\n   0x00000000000909d1 <+193>:\tcmp    rdx,rax\n   0x00000000000909d4 <+196>:\tjge    0x90a28 <main+280>\n   0x00000000000909da <+202>:\tmov    rbx,rdx\n   0x00000000000909dd <+205>:\tcmp    rbx,rax\n   0x00000000000909e0 <+208>:\tjae    0x90abd <main+429>\n   0x00000000000909e6 <+214>:\tmov    rax,QWORD PTR [rdi+0x17]\n   0x00000000000909ea <+218>:\tmov    rbx,QWORD PTR [rax+rdx*8+0x17]\n   0x00000000000909ef <+223>:\tmov    QWORD PTR [rsp],rbx\n   0x00000000000909f3 <+227>:\tcall   0x5edec <_StringBase._interpolateSingle>\n   0x00000000000909f8 <+232>:\tmov    rdi,rax\n   0x00000000000909fb <+235>:\tcall   0x90ec8 <print>\n   0x0000000000090a00 <+240>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x0000000000090a04 <+244>:\tmov    rcx,QWORD PTR [rdi+0xf]\n   0x0000000000090a08 <+248>:\tmov    rbx,QWORD PTR [rbp-0x8]\n   0x0000000000090a0c <+252>:\tcmp    rcx,rbx\n   0x0000000000090a0f <+255>:\tjne    0x90a8c <main+380>\n   0x0000000000090a15 <+261>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x0000000000090a19 <+265>:\tadd    rdx,0x1\n   0x0000000000090a1d <+269>:\tsar    rcx,1\n   0x0000000000090a20 <+272>:\tmov    rax,rcx\n   0x0000000000090a23 <+275>:\tmov    rcx,rbx\n   0x0000000000090a26 <+278>:\tjmp    0x909c3 <main+179>\n   0x0000000000090a28 <+280>:\tcall   0x90ac4 <quickSort>\n   0x0000000000090a2d <+285>:\tmov    rbx,rax\n   0x0000000000090a30 <+288>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x0000000000090a34 <+292>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x0000000000090a38 <+296>:\tmov    QWORD PTR [rbp-0x8],rbx\n   0x0000000000090a3c <+300>:\tmov    rbx,QWORD PTR [r15+0x987]\n   0x0000000000090a43 <+307>:\tmov    r9,QWORD PTR [r15+0x17ff]\n   0x0000000000090a4a <+314>:\tcall   0x54df0 <assert type is List<int>>\n   0x0000000000090a4f <+319>:\tmov    rdi,QWORD PTR [r15+0x180f]\n   0x0000000000090a56 <+326>:\tcall   0x90f00 <printToConsole>\n   0x0000000000090a5b <+331>:\tmov    rbx,QWORD PTR [r15+0x1817]\n   0x0000000000090a62 <+338>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x0000000000090a66 <+342>:\tcall   0x8a844 <stub _iso_stub_AllocateClosureStub>\n   0x0000000000090a6b <+347>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000090a6f <+351>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x0000000000090a72 <+354>:\tshr    ecx,0xc\n   0x0000000000090a75 <+357>:\tmov    rsi,rax\n   0x0000000000090a78 <+360>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x0000000000090a7c <+364>:\tcall   QWORD PTR [rax+rcx*8+0x8cf8]\n   0x0000000000090a83 <+371>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000090a87 <+375>:\tmov    rsp,rbp\n   0x0000000000090a8a <+378>:\tpop    rbp\n   0x0000000000090a8b <+379>:\tret\n   0x0000000000090a8c <+380>:\tcall   0x57510 <new ConcurrentModificationError>\n   0x0000000000090a91 <+385>:\tmov    rcx,rax\n   0x0000000000090a94 <+388>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x0000000000090a98 <+392>:\tmov    QWORD PTR [rcx+0xf],rax\n   0x0000000000090a9c <+396>:\tmov    rax,rcx\n   0x0000000000090a9f <+399>:\tcall   0x89a20 <stub _iso_stub_ThrowStub>\n   0x0000000000090aa4 <+404>:\tint3\n   0x0000000000090aa5 <+405>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090aac <+412>:\tjmp    0x90922 <main+18>\n   0x0000000000090ab1 <+417>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090ab8 <+424>:\tjmp    0x909d1 <main+193>\n   0x0000000000090abd <+429>:\tcall   0x8b96c <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sorting-algorithms-selection-sort.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n    List<int> a = selectionSort([1100, 2, 56, 200, -52, 3, 99, 33, 177, -199]);\n    print('$a');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x8\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a20c <main+184>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x000000000008a16d <+25>:\tmov    r10d,0x14\n   0x000000000008a173 <+31>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a178 <+36>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rax+0x17],0x898\n   0x000000000008a184 <+48>:\tmov    QWORD PTR [rax+0x1f],0x4\n   0x000000000008a18c <+56>:\tmov    QWORD PTR [rax+0x27],0x70\n   0x000000000008a194 <+64>:\tmov    QWORD PTR [rax+0x2f],0x190\n   0x000000000008a19c <+72>:\tmov    QWORD PTR [rax+0x37],0xffffffffffffff98\n   0x000000000008a1a4 <+80>:\tmov    QWORD PTR [rax+0x3f],0x6\n   0x000000000008a1ac <+88>:\tmov    QWORD PTR [rax+0x47],0xc6\n   0x000000000008a1b4 <+96>:\tmov    QWORD PTR [rax+0x4f],0x42\n   0x000000000008a1bc <+104>:\tmov    QWORD PTR [rax+0x57],0x162\n   0x000000000008a1c4 <+112>:\tmov    QWORD PTR [rax+0x5f],0xfffffffffffffe72\n   0x000000000008a1cc <+120>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a1d3 <+127>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a1d8 <+132>:\tmov    rcx,rax\n   0x000000000008a1db <+135>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1df <+139>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a1e3 <+143>:\tmov    QWORD PTR [rcx+0xf],0x14\n   0x000000000008a1eb <+151>:\tmov    rdi,rcx\n   0x000000000008a1ee <+154>:\tcall   0x8a2b4 <selectionSort>\n   0x000000000008a1f3 <+159>:\tmov    rdi,rax\n   0x000000000008a1f6 <+162>:\tcall   0x74e10 <ListBase.listToString>\n   0x000000000008a1fb <+167>:\tmov    rdi,rax\n   0x000000000008a1fe <+170>:\tcall   0x8a218 <print>\n   0x000000000008a203 <+175>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a207 <+179>:\tmov    rsp,rbp\n   0x000000000008a20a <+182>:\tpop    rbp\n   0x000000000008a20b <+183>:\tret\n   0x000000000008a20c <+184>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a213 <+191>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "selectionSort",
      "source": "selectionSort(List<int> array){\n\tfor(int currentPlace = 0;currentPlace<array.length-1;currentPlace++){\n\t\tint smallest = 4294967296; //maxInt\n\t\tint smallestAt = currentPlace+1;\n\t\tfor(int check = currentPlace; check<array.length;check++){\n\t\t\tif(array[check]<smallest){\n\t\t\t\tsmallestAt = check;\n\t\t\t\tsmallest = array[check];\n\t\t\t}\n\t\t}\n\t\tint temp = array[currentPlace];\n\t\tarray[currentPlace] = array[smallestAt];\n\t\tarray[smallestAt] = temp;\n\t}\n  return array;\n}",
      "assembly": "Dump of assembler code for function selectionSort:\n   0x000000000008a2b4 <+0>:\tpush   rbp\n   0x000000000008a2b5 <+1>:\tmov    rbp,rsp\n   0x000000000008a2b8 <+4>:\tmov    rcx,rdi\n   0x000000000008a2bb <+7>:\tmov    rsi,QWORD PTR [rcx+0xf]\n   0x000000000008a2bf <+11>:\tsar    rsi,1\n   0x000000000008a2c2 <+14>:\tmov    rdi,rsi\n   0x000000000008a2c5 <+17>:\tsub    rdi,0x1\n   0x000000000008a2c9 <+21>:\tmov    r8,QWORD PTR [rcx+0x17]\n   0x000000000008a2cd <+25>:\txor    r9d,r9d\n   0x000000000008a2d0 <+28>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2d4 <+32>:\tjbe    0x8a3ae <selectionSort+250>\n   0x000000000008a2da <+38>:\tcmp    r9,rdi\n   0x000000000008a2dd <+41>:\tjge    0x8a3a6 <selectionSort+242>\n   0x000000000008a2e3 <+47>:\tmov    r10,r9\n   0x000000000008a2e6 <+50>:\tadd    r10,0x1\n   0x000000000008a2ea <+54>:\tmov    r13,r10\n   0x000000000008a2ed <+57>:\tmov    r12,r9\n   0x000000000008a2f0 <+60>:\tmovabs rax,0x100000000\n   0x000000000008a2fa <+70>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2fe <+74>:\tjbe    0x8a3ba <selectionSort+262>\n   0x000000000008a304 <+80>:\tcmp    r12,rsi\n   0x000000000008a307 <+83>:\tjge    0x8a331 <selectionSort+125>\n   0x000000000008a30d <+89>:\tmov    rdx,QWORD PTR [r8+r12*8+0x17]\n   0x000000000008a312 <+94>:\tsar    rdx,1\n   0x000000000008a315 <+97>:\tjae    0x8a31c <selectionSort+104>\n   0x000000000008a317 <+99>:\tmov    rdx,QWORD PTR [rdx+rdx*1+0x8]\n   0x000000000008a31c <+104>:\tcmp    rdx,rax\n   0x000000000008a31f <+107>:\tjge    0x8a32b <selectionSort+119>\n   0x000000000008a325 <+113>:\tmov    rax,rdx\n   0x000000000008a328 <+116>:\tmov    r13,r12\n   0x000000000008a32b <+119>:\tadd    r12,0x1\n   0x000000000008a32f <+123>:\tjmp    0x8a2fa <selectionSort+70>\n   0x000000000008a331 <+125>:\tmov    r12,QWORD PTR [r8+r9*8+0x17]\n   0x000000000008a336 <+130>:\tmov    rax,rsi\n   0x000000000008a339 <+133>:\tmov    rbx,r13\n   0x000000000008a33c <+136>:\tcmp    rbx,rax\n   0x000000000008a33f <+139>:\tjae    0x8a3c6 <selectionSort+274>\n   0x000000000008a345 <+145>:\tmov    rax,QWORD PTR [r8+r13*8+0x17]\n   0x000000000008a34a <+150>:\tmov    rdx,r8\n   0x000000000008a34d <+153>:\tmov    rbx,r13\n   0x000000000008a350 <+156>:\tlea    r13,[rdx+r9*8+0x17]\n   0x000000000008a355 <+161>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a359 <+165>:\ttest   al,0x1\n   0x000000000008a35b <+167>:\tje     0x8a374 <selectionSort+192>\n   0x000000000008a35d <+169>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a361 <+173>:\tshr    r11d,0x2\n   0x000000000008a365 <+177>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a369 <+181>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a36d <+185>:\tje     0x8a374 <selectionSort+192>\n   0x000000000008a36f <+187>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a374 <+192>:\tmov    rdx,r8\n   0x000000000008a377 <+195>:\tmov    rax,r12\n   0x000000000008a37a <+198>:\tlea    r13,[rdx+rbx*8+0x17]\n   0x000000000008a37f <+203>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a383 <+207>:\ttest   al,0x1\n   0x000000000008a385 <+209>:\tje     0x8a39e <selectionSort+234>\n   0x000000000008a387 <+211>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a38b <+215>:\tshr    r11d,0x2\n   0x000000000008a38f <+219>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a393 <+223>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a397 <+227>:\tje     0x8a39e <selectionSort+234>\n   0x000000000008a399 <+229>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a39e <+234>:\tmov    r9,r10\n   0x000000000008a3a1 <+237>:\tjmp    0x8a2d0 <selectionSort+28>\n   0x000000000008a3a6 <+242>:\tmov    rax,rcx\n   0x000000000008a3a9 <+245>:\tmov    rsp,rbp\n   0x000000000008a3ac <+248>:\tpop    rbp\n   0x000000000008a3ad <+249>:\tret\n   0x000000000008a3ae <+250>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a3b5 <+257>:\tjmp    0x8a2da <selectionSort+38>\n   0x000000000008a3ba <+262>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a3c1 <+269>:\tjmp    0x8a304 <selectionSort+80>\n   0x000000000008a3c6 <+274>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sorting-algorithms-shell-sort.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n    List<int> a = shellSort([1100, 2, 56, 200, -52, 3, 99, 33, 177, -199]);\n    print('$a');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a34a <main+502>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x000000000008a16d <+25>:\tmov    r10d,0x14\n   0x000000000008a173 <+31>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a178 <+36>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rax+0x17],0x898\n   0x000000000008a184 <+48>:\tmov    QWORD PTR [rax+0x1f],0x4\n   0x000000000008a18c <+56>:\tmov    QWORD PTR [rax+0x27],0x70\n   0x000000000008a194 <+64>:\tmov    QWORD PTR [rax+0x2f],0x190\n   0x000000000008a19c <+72>:\tmov    QWORD PTR [rax+0x37],0xffffffffffffff98\n   0x000000000008a1a4 <+80>:\tmov    QWORD PTR [rax+0x3f],0x6\n   0x000000000008a1ac <+88>:\tmov    QWORD PTR [rax+0x47],0xc6\n   0x000000000008a1b4 <+96>:\tmov    QWORD PTR [rax+0x4f],0x42\n   0x000000000008a1bc <+104>:\tmov    QWORD PTR [rax+0x57],0x162\n   0x000000000008a1c4 <+112>:\tmov    QWORD PTR [rax+0x5f],0xfffffffffffffe72\n   0x000000000008a1cc <+120>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a1d3 <+127>:\tcall   0x83d2c <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a1d8 <+132>:\tmov    rsi,rax\n   0x000000000008a1db <+135>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a1df <+139>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008a1e3 <+143>:\tmov    QWORD PTR [rsi+0x17],rcx\n   0x000000000008a1e7 <+147>:\tmov    QWORD PTR [rsi+0xf],0x14\n   0x000000000008a1ef <+155>:\tmov    r8d,0x5\n   0x000000000008a1f5 <+161>:\tmov    edi,0x2\n   0x000000000008a1fa <+166>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1fe <+170>:\tjbe    0x8a356 <main+514>\n   0x000000000008a204 <+176>:\tcmp    r8,0x0\n   0x000000000008a208 <+180>:\tjle    0x8a330 <main+476>\n   0x000000000008a20e <+186>:\tmov    r9,r8\n   0x000000000008a211 <+189>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a215 <+193>:\tjbe    0x8a362 <main+526>\n   0x000000000008a21b <+199>:\tcmp    r9,0xa\n   0x000000000008a21f <+203>:\tjge    0x8a304 <main+432>\n   0x000000000008a225 <+209>:\tmov    rbx,r9\n   0x000000000008a228 <+212>:\tmov    eax,0xa\n   0x000000000008a22d <+217>:\tcmp    rbx,rax\n   0x000000000008a230 <+220>:\tjae    0x8a36e <main+538>\n   0x000000000008a236 <+226>:\tmov    r10,QWORD PTR [rcx+r9*8+0x17]\n   0x000000000008a23b <+231>:\tmov    r12,r10\n   0x000000000008a23e <+234>:\tsar    r12,1\n   0x000000000008a241 <+237>:\tjae    0x8a248 <main+244>\n   0x000000000008a243 <+239>:\tmov    r12,QWORD PTR [r12+r12*1+0x8]\n   0x000000000008a248 <+244>:\tmov    r13,r9\n   0x000000000008a24b <+247>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a24f <+251>:\tjbe    0x8a373 <main+543>\n   0x000000000008a255 <+257>:\tcmp    r13,r8\n   0x000000000008a258 <+260>:\tjl     0x8a2ca <main+374>\n   0x000000000008a25e <+266>:\tmov    rdx,r13\n   0x000000000008a261 <+269>:\tsub    rdx,r8\n   0x000000000008a264 <+272>:\tmov    rbx,rdx\n   0x000000000008a267 <+275>:\tmov    eax,0xa\n   0x000000000008a26c <+280>:\tcmp    rbx,rax\n   0x000000000008a26f <+283>:\tjae    0x8a37f <main+555>\n   0x000000000008a275 <+289>:\tmov    rax,QWORD PTR [rcx+rdx*8+0x17]\n   0x000000000008a27a <+294>:\tmov    rbx,rax\n   0x000000000008a27d <+297>:\tsar    rbx,1\n   0x000000000008a280 <+300>:\tjae    0x8a287 <main+307>\n   0x000000000008a282 <+302>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a287 <+307>:\tcmp    rbx,r12\n   0x000000000008a28a <+310>:\tjle    0x8a2c2 <main+366>\n   0x000000000008a290 <+316>:\tmov    rbx,rdx\n   0x000000000008a293 <+319>:\tmov    rdx,rcx\n   0x000000000008a296 <+322>:\tmov    rsi,r13\n   0x000000000008a299 <+325>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008a29e <+330>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a2a2 <+334>:\ttest   al,0x1\n   0x000000000008a2a4 <+336>:\tje     0x8a2bd <main+361>\n   0x000000000008a2a6 <+338>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a2aa <+342>:\tshr    r11d,0x2\n   0x000000000008a2ae <+346>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a2b2 <+350>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a2b6 <+354>:\tje     0x8a2bd <main+361>\n   0x000000000008a2b8 <+356>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a2bd <+361>:\tmov    r13,rbx\n   0x000000000008a2c0 <+364>:\tjmp    0x8a24b <main+247>\n   0x000000000008a2c2 <+366>:\tmov    rsi,r13\n   0x000000000008a2c5 <+369>:\tjmp    0x8a2cd <main+377>\n   0x000000000008a2ca <+374>:\tmov    rsi,r13\n   0x000000000008a2cd <+377>:\tmov    rdx,rcx\n   0x000000000008a2d0 <+380>:\tmov    rax,r10\n   0x000000000008a2d3 <+383>:\tlea    r13,[rdx+rsi*8+0x17]\n   0x000000000008a2d8 <+388>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a2dc <+392>:\ttest   al,0x1\n   0x000000000008a2de <+394>:\tje     0x8a2f7 <main+419>\n   0x000000000008a2e0 <+396>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a2e4 <+400>:\tshr    r11d,0x2\n   0x000000000008a2e8 <+404>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a2ec <+408>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a2f0 <+412>:\tje     0x8a2f7 <main+419>\n   0x000000000008a2f2 <+414>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a2f7 <+419>:\tadd    r9,0x1\n   0x000000000008a2fb <+423>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a2ff <+427>:\tjmp    0x8a211 <main+189>\n   0x000000000008a304 <+432>:\tmov    rax,r8\n   0x000000000008a307 <+435>:\tmov    r11,rax\n   0x000000000008a30a <+438>:\tmov    rax,QWORD PTR [r15+0x607]\n   0x000000000008a311 <+445>:\timul   r11\n   0x000000000008a314 <+448>:\tadd    rdx,r11\n   0x000000000008a317 <+451>:\tmov    rax,rdx\n   0x000000000008a31a <+454>:\tshr    rdx,0x3f\n   0x000000000008a31e <+458>:\tadd    rdx,rax\n   0x000000000008a321 <+461>:\tmov    rax,rdx\n   0x000000000008a324 <+464>:\tmov    r8,rax\n   0x000000000008a327 <+467>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a32b <+471>:\tjmp    0x8a1fa <main+166>\n   0x000000000008a330 <+476>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a334 <+480>:\tcall   0x74e10 <ListBase.listToString>\n   0x000000000008a339 <+485>:\tmov    rdi,rax\n   0x000000000008a33c <+488>:\tcall   0x8a384 <print>\n   0x000000000008a341 <+493>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a345 <+497>:\tmov    rsp,rbp\n   0x000000000008a348 <+500>:\tpop    rbp\n   0x000000000008a349 <+501>:\tret\n   0x000000000008a34a <+502>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a351 <+509>:\tjmp    0x8a166 <main+18>\n   0x000000000008a356 <+514>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a35d <+521>:\tjmp    0x8a204 <main+176>\n   0x000000000008a362 <+526>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a369 <+533>:\tjmp    0x8a21b <main+199>\n   0x000000000008a36e <+538>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a373 <+543>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a37a <+550>:\tjmp    0x8a255 <main+257>\n   0x000000000008a37f <+555>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sorting-algorithms-sleep-sort.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() async {\n  Future<void> sleepsort(Iterable<int> input) => Future.wait(input",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a47c <+0>:\tpush   rbp\n   0x000000000008a47d <+1>:\tmov    rbp,rsp\n   0x000000000008a480 <+4>:\tsub    rsp,0x30\n   0x000000000008a484 <+8>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a488 <+12>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a48c <+16>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a490 <+20>:\tjbe    0x8a578 <main+252>\n   0x000000000008a496 <+26>:\tmov    rax,QWORD PTR [r15+0xc87]\n   0x000000000008a49d <+33>:\tcall   0x6d63c <stub _iso_stub_InitAsyncStub>\n   0x000000000008a4a2 <+38>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a4a6 <+42>:\tmov    r10d,0xe\n   0x000000000008a4ac <+48>:\tcall   0x84f94 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a4b1 <+53>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a4b5 <+57>:\tmov    QWORD PTR [rax+0x17],0x6\n   0x000000000008a4bd <+65>:\tmov    QWORD PTR [rax+0x1f],0x14\n   0x000000000008a4c5 <+73>:\tmov    QWORD PTR [rax+0x27],0x4\n   0x000000000008a4cd <+81>:\tmov    QWORD PTR [rax+0x2f],0xf0\n   0x000000000008a4d5 <+89>:\tmov    QWORD PTR [rax+0x37],0xf4\n   0x000000000008a4dd <+97>:\tmov    QWORD PTR [rax+0x3f],0xf2\n   0x000000000008a4e5 <+105>:\tmov    QWORD PTR [rax+0x47],0x6c\n   0x000000000008a4ed <+113>:\tmov    rdx,QWORD PTR [r15+0x237]\n   0x000000000008a4f4 <+120>:\tcall   0x84054 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a4f9 <+125>:\tmov    rcx,rax\n   0x000000000008a4fc <+128>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a500 <+132>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008a504 <+136>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a508 <+140>:\tmov    QWORD PTR [rcx+0xf],0xe\n   0x000000000008a510 <+148>:\tmov    rbx,QWORD PTR [r15+0x17ff]\n   0x000000000008a517 <+155>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a51b <+159>:\tcall   0x843b0 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a520 <+164>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a527 <+171>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008a52c <+176>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008a530 <+180>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a535 <+185>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a539 <+189>:\tmov    r10,QWORD PTR [r15+0x57]\n   0x000000000008a53d <+193>:\tcall   0x56cfc <ListBase.map>\n   0x000000000008a542 <+198>:\tmov    r11,QWORD PTR [r15+0xc87]\n   0x000000000008a549 <+205>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a54e <+210>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a552 <+214>:\tmov    r10,QWORD PTR [r15+0x180f]\n   0x000000000008a559 <+221>:\tcall   0x8a584 <Future.wait>\n   0x000000000008a55e <+226>:\tmov    rcx,rax\n   0x000000000008a561 <+229>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a565 <+233>:\tcall   0x6d1b4 <stub _iso_stub_AwaitStub>\n   0x000000000008a56a <+238>:\tmov    rsp,rbp\n   0x000000000008a56d <+241>:\tpop    rbp\n   0x000000000008a56e <+242>:\tret\n   0x000000000008a56f <+243>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a573 <+247>:\tjmp    0x59fec <stub _iso_stub_ReturnAsyncNotFutureStub>\n   0x000000000008a578 <+252>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a57f <+259>:\tjmp    0x8a496 <main+26>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "split-a-character-string-based-on-change-of-character.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  print(split(\"gHHH5  ))YY++,,,///\\\\\", \", \"));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a20c <+0>:\tpush   rbp\n   0x000000000008a20d <+1>:\tmov    rbp,rsp\n   0x000000000008a210 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a214 <+8>:\tjbe    0x8a230 <main+36>\n   0x000000000008a21a <+14>:\tcall   0x8a2d8 <split>\n   0x000000000008a21f <+19>:\tmov    rdi,rax\n   0x000000000008a222 <+22>:\tcall   0x8a23c <print>\n   0x000000000008a227 <+27>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a22b <+31>:\tmov    rsp,rbp\n   0x000000000008a22e <+34>:\tpop    rbp\n   0x000000000008a22f <+35>:\tret\n   0x000000000008a230 <+36>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a237 <+43>:\tjmp    0x8a21a <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "string-append.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  String str = \"Hello\";\n  str = str + \" World!\";\n  print(str);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a193 <main+63>\n   0x000000000008a166 <+18>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a16d <+25>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a172 <+30>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a179 <+37>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a17d <+41>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a182 <+46>:\tmov    rdi,rax\n   0x000000000008a185 <+49>:\tcall   0x8a19c <print>\n   0x000000000008a18a <+54>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a18e <+58>:\tmov    rsp,rbp\n   0x000000000008a191 <+61>:\tpop    rbp\n   0x000000000008a192 <+62>:\tret\n   0x000000000008a193 <+63>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a19a <+70>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "string-case.dart",
  "functions": [
    {
      "name": "capitalize",
      "source": "String capitalize(String string) {\n  if (string.isEmpty) {\n    return string;\n  }\n  return string[0].toUpperCase() + string.substring(1);\n}",
      "assembly": "Dump of assembler code for function capitalize:\n   0x000000000008a2bc <+0>:\tpush   rbp\n   0x000000000008a2bd <+1>:\tmov    rbp,rsp\n   0x000000000008a2c0 <+4>:\tsub    rsp,0x18\n   0x000000000008a2c4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2c8 <+12>:\tjbe    0x8a311 <capitalize+85>\n   0x000000000008a2ce <+18>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a2d5 <+25>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a2d9 <+29>:\tcall   0x811c0 <String.toUpperCase>\n   0x000000000008a2de <+34>:\tmov    rdi,QWORD PTR [r15+0x1807]\n   0x000000000008a2e5 <+41>:\tmov    esi,0x1\n   0x000000000008a2ea <+46>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a2ee <+50>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008a2f5 <+57>:\tcall   0x5c04c <_StringBase.substring>\n   0x000000000008a2fa <+62>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a2fe <+66>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a303 <+71>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a307 <+75>:\tcall   0x5c3d0 <_StringBase.+>\n   0x000000000008a30c <+80>:\tmov    rsp,rbp\n   0x000000000008a30f <+83>:\tpop    rbp\n   0x000000000008a310 <+84>:\tret\n   0x000000000008a311 <+85>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a318 <+92>:\tjmp    0x8a2ce <capitalize+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  var s = 'alphaBETA';\n  print('Original string: $s');\n  print('To Lower case:   ${s.toLowerCase()}');\n  print('To Upper case:   ${s.toUpperCase()}');\n  print('To Capitalize:   ${capitalize(s)}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a2ae <main+346>\n   0x000000000008a166 <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a16d <+25>:\tcall   0x8a31c <print>\n   0x000000000008a172 <+30>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a176 <+34>:\tmov    r10d,0x4\n   0x000000000008a17c <+40>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a181 <+45>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a185 <+49>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a18c <+56>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a190 <+60>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a197 <+67>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a19b <+71>:\tcall   0x81e58 <String.toLowerCase>\n   0x000000000008a1a0 <+76>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a1a4 <+80>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a1a8 <+84>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a1ac <+88>:\ttest   al,0x1\n   0x000000000008a1ae <+90>:\tje     0x8a1c7 <main+115>\n   0x000000000008a1b0 <+92>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a1b4 <+96>:\tshr    r11d,0x2\n   0x000000000008a1b8 <+100>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a1bc <+104>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a1c0 <+108>:\tje     0x8a1c7 <main+115>\n   0x000000000008a1c2 <+110>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a1c7 <+115>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a1cb <+119>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a1cf <+123>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1d4 <+128>:\tmov    rdi,rax\n   0x000000000008a1d7 <+131>:\tcall   0x8a31c <print>\n   0x000000000008a1dc <+136>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1e0 <+140>:\tmov    r10d,0x4\n   0x000000000008a1e6 <+146>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a1eb <+151>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a1ef <+155>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a1f6 <+162>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a1fa <+166>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a201 <+173>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a205 <+177>:\tcall   0x811c0 <String.toUpperCase>\n   0x000000000008a20a <+182>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a20e <+186>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a212 <+190>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a216 <+194>:\ttest   al,0x1\n   0x000000000008a218 <+196>:\tje     0x8a231 <main+221>\n   0x000000000008a21a <+198>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a21e <+202>:\tshr    r11d,0x2\n   0x000000000008a222 <+206>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a226 <+210>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a22a <+214>:\tje     0x8a231 <main+221>\n   0x000000000008a22c <+216>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a231 <+221>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a235 <+225>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a239 <+229>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a23e <+234>:\tmov    rdi,rax\n   0x000000000008a241 <+237>:\tcall   0x8a31c <print>\n   0x000000000008a246 <+242>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a24a <+246>:\tmov    r10d,0x4\n   0x000000000008a250 <+252>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a255 <+257>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a259 <+261>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a260 <+268>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a264 <+272>:\tcall   0x8a2bc <capitalize>\n   0x000000000008a269 <+277>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a26d <+281>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a271 <+285>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a275 <+289>:\ttest   al,0x1\n   0x000000000008a277 <+291>:\tje     0x8a290 <main+316>\n   0x000000000008a279 <+293>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a27d <+297>:\tshr    r11d,0x2\n   0x000000000008a281 <+301>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a285 <+305>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a289 <+309>:\tje     0x8a290 <main+316>\n   0x000000000008a28b <+311>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a290 <+316>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a294 <+320>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a298 <+324>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a29d <+329>:\tmov    rdi,rax\n   0x000000000008a2a0 <+332>:\tcall   0x8a31c <print>\n   0x000000000008a2a5 <+337>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a2a9 <+341>:\tmov    rsp,rbp\n   0x000000000008a2ac <+344>:\tpop    rbp\n   0x000000000008a2ad <+345>:\tret\n   0x000000000008a2ae <+346>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2b5 <+353>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "substring-top-and-tail.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  String word = \"Premier League\";\n  print(\"Without first letter: ${word.substring(1)} !\");\n  print(\"Without last letter: ${word.substring(0, word.length - 1)} !\");\n  print(\"Without first and last letter: ${word.substring(1, word.length - 1)} !\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a2f3 <main+415>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0x6\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a179 <+37>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a180 <+44>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a184 <+48>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a18b <+55>:\tmov    esi,0x1\n   0x000000000008a190 <+60>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008a197 <+67>:\tcall   0x5c04c <_StringBase.substring>\n   0x000000000008a19c <+72>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a1a0 <+76>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a1a4 <+80>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a1a8 <+84>:\ttest   al,0x1\n   0x000000000008a1aa <+86>:\tje     0x8a1c3 <main+111>\n   0x000000000008a1ac <+88>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a1b0 <+92>:\tshr    r11d,0x2\n   0x000000000008a1b4 <+96>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a1b8 <+100>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a1bc <+104>:\tje     0x8a1c3 <main+111>\n   0x000000000008a1be <+106>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a1c3 <+111>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1c7 <+115>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a1ce <+122>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a1d2 <+126>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a1d6 <+130>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1db <+135>:\tmov    rdi,rax\n   0x000000000008a1de <+138>:\tcall   0x8a300 <print>\n   0x000000000008a1e3 <+143>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1e7 <+147>:\tmov    r10d,0x6\n   0x000000000008a1ed <+153>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a1f2 <+158>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a1f6 <+162>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a1fd <+169>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a201 <+173>:\tmov    QWORD PTR [rsp],0x1a\n   0x000000000008a209 <+181>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a210 <+188>:\txor    esi,esi\n   0x000000000008a212 <+190>:\tmov    r10,QWORD PTR [r15+0x9f]\n   0x000000000008a219 <+197>:\tcall   0x5c04c <_StringBase.substring>\n   0x000000000008a21e <+202>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a222 <+206>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a226 <+210>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a22a <+214>:\ttest   al,0x1\n   0x000000000008a22c <+216>:\tje     0x8a245 <main+241>\n   0x000000000008a22e <+218>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a232 <+222>:\tshr    r11d,0x2\n   0x000000000008a236 <+226>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a23a <+230>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a23e <+234>:\tje     0x8a245 <main+241>\n   0x000000000008a240 <+236>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a245 <+241>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a249 <+245>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a250 <+252>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a254 <+256>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a258 <+260>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a25d <+265>:\tmov    rdi,rax\n   0x000000000008a260 <+268>:\tcall   0x8a300 <print>\n   0x000000000008a265 <+273>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a269 <+277>:\tmov    r10d,0x6\n   0x000000000008a26f <+283>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a274 <+288>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a278 <+292>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a27f <+299>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a283 <+303>:\tmov    QWORD PTR [rsp],0x1a\n   0x000000000008a28b <+311>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a292 <+318>:\tmov    esi,0x1\n   0x000000000008a297 <+323>:\tmov    r10,QWORD PTR [r15+0x9f]\n   0x000000000008a29e <+330>:\tcall   0x5c04c <_StringBase.substring>\n   0x000000000008a2a3 <+335>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a2a7 <+339>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a2ab <+343>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a2af <+347>:\ttest   al,0x1\n   0x000000000008a2b1 <+349>:\tje     0x8a2ca <main+374>\n   0x000000000008a2b3 <+351>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a2b7 <+355>:\tshr    r11d,0x2\n   0x000000000008a2bb <+359>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a2bf <+363>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a2c3 <+367>:\tje     0x8a2ca <main+374>\n   0x000000000008a2c5 <+369>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a2ca <+374>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a2ce <+378>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a2d5 <+385>:\tmov    QWORD PTR [rax+0x27],r11\n   0x000000000008a2d9 <+389>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a2dd <+393>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a2e2 <+398>:\tmov    rdi,rax\n   0x000000000008a2e5 <+401>:\tcall   0x8a300 <print>\n   0x000000000008a2ea <+406>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a2ee <+410>:\tmov    rsp,rbp\n   0x000000000008a2f1 <+413>:\tpop    rbp\n   0x000000000008a2f2 <+414>:\tret\n   0x000000000008a2f3 <+415>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2fa <+422>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sudan-function.dart",
  "functions": [
    {
      "name": "F",
      "source": "int F(int n, int x, int y) {\n  if (n == 0) {\n    return x + y;\n  } else if (y == 0) {\n    return x;\n  }\n\n  return F(n - 1, F(n, x, y - 1), F(n, x, y - 1) + y);\n}",
      "assembly": "Dump of assembler code for function F:\n   0x000000000008a2a0 <+0>:\tpush   rbp\n   0x000000000008a2a1 <+1>:\tmov    rbp,rsp\n   0x000000000008a2a4 <+4>:\tsub    rsp,0x28\n   0x000000000008a2a8 <+8>:\tmov    rbx,rdi\n   0x000000000008a2ab <+11>:\tmov    rcx,rsi\n   0x000000000008a2ae <+14>:\tmov    rax,rdx\n   0x000000000008a2b1 <+17>:\tmov    QWORD PTR [rbp-0x18],rdi\n   0x000000000008a2b5 <+21>:\tmov    QWORD PTR [rbp-0x20],rsi\n   0x000000000008a2b9 <+25>:\tmov    QWORD PTR [rbp-0x28],rdx\n   0x000000000008a2bd <+29>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2c1 <+33>:\tjbe    0x8a346 <F+166>\n   0x000000000008a2c7 <+39>:\tcmp    rbx,0x0\n   0x000000000008a2cb <+43>:\tjne    0x8a2dc <F+60>\n   0x000000000008a2d1 <+49>:\tadd    rcx,rax\n   0x000000000008a2d4 <+52>:\tmov    rax,rcx\n   0x000000000008a2d7 <+55>:\tmov    rsp,rbp\n   0x000000000008a2da <+58>:\tpop    rbp\n   0x000000000008a2db <+59>:\tret\n   0x000000000008a2dc <+60>:\tcmp    rax,0x0\n   0x000000000008a2e0 <+64>:\tjne    0x8a2ee <F+78>\n   0x000000000008a2e6 <+70>:\tmov    rax,rcx\n   0x000000000008a2e9 <+73>:\tmov    rsp,rbp\n   0x000000000008a2ec <+76>:\tpop    rbp\n   0x000000000008a2ed <+77>:\tret\n   0x000000000008a2ee <+78>:\tmov    r8,rbx\n   0x000000000008a2f1 <+81>:\tsub    r8,0x1\n   0x000000000008a2f5 <+85>:\tmov    QWORD PTR [rbp-0x10],r8\n   0x000000000008a2f9 <+89>:\tmov    r9,rax\n   0x000000000008a2fc <+92>:\tsub    r9,0x1\n   0x000000000008a300 <+96>:\tmov    rdi,rbx\n   0x000000000008a303 <+99>:\tmov    rsi,rcx\n   0x000000000008a306 <+102>:\tmov    rdx,r9\n   0x000000000008a309 <+105>:\tmov    QWORD PTR [rbp-0x8],r9\n   0x000000000008a30d <+109>:\tcall   0x8a2a0 <F>\n   0x000000000008a312 <+114>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a316 <+118>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a31a <+122>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a31e <+126>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a322 <+130>:\tcall   0x8a2a0 <F>\n   0x000000000008a327 <+135>:\tmov    rcx,rax\n   0x000000000008a32a <+138>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a32e <+142>:\tadd    rcx,rax\n   0x000000000008a331 <+145>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a335 <+149>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a339 <+153>:\tmov    rdx,rcx\n   0x000000000008a33c <+156>:\tcall   0x8a2a0 <F>\n   0x000000000008a341 <+161>:\tmov    rsp,rbp\n   0x000000000008a344 <+164>:\tpop    rbp\n   0x000000000008a345 <+165>:\tret\n   0x000000000008a346 <+166>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a34d <+173>:\tjmp    0x8a2c7 <F+39>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print('F(1,3,3) = ${F(1, 3, 3)}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1f5 <main+161>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0x4\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a179 <+37>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a180 <+44>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a184 <+48>:\tmov    edi,0x1\n   0x000000000008a189 <+53>:\tmov    esi,0x3\n   0x000000000008a18e <+58>:\tmov    edx,0x3\n   0x000000000008a193 <+63>:\tcall   0x8a2a0 <F>\n   0x000000000008a198 <+68>:\tmov    rcx,rax\n   0x000000000008a19b <+71>:\tmov    rax,rcx\n   0x000000000008a19e <+74>:\tadd    rax,rax\n   0x000000000008a1a1 <+77>:\tjno    0x8a1b0 <main+92>\n   0x000000000008a1a7 <+83>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1ac <+88>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a1b0 <+92>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a1b4 <+96>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a1b8 <+100>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a1bc <+104>:\ttest   al,0x1\n   0x000000000008a1be <+106>:\tje     0x8a1d7 <main+131>\n   0x000000000008a1c0 <+108>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a1c4 <+112>:\tshr    r11d,0x2\n   0x000000000008a1c8 <+116>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a1cc <+120>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a1d0 <+124>:\tje     0x8a1d7 <main+131>\n   0x000000000008a1d2 <+126>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a1d7 <+131>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a1db <+135>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a1df <+139>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1e4 <+144>:\tmov    rdi,rax\n   0x000000000008a1e7 <+147>:\tcall   0x8a204 <print>\n   0x000000000008a1ec <+152>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1f0 <+156>:\tmov    rsp,rbp\n   0x000000000008a1f3 <+159>:\tpop    rbp\n   0x000000000008a1f4 <+160>:\tret\n   0x000000000008a1f5 <+161>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1fc <+168>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sum-digits-of-an-integer.dart",
  "functions": [
    {
      "name": "sumDigits",
      "source": "num sumDigits(var number, var nBase) {\n  if (number < 0) number = -number; // convert negative numbers to positive\n  if (nBase < 2) nBase = 2;         // nBase can't be less than 2\n  num sum = 0;\n  while (number > 0) {\n    sum += number % nBase;\n    number ~/= nBase;\n  }\n  return sum;\n}",
      "assembly": "Dump of assembler code for function sumDigits:\n   0x000000000008a9dc <+0>:\tpush   rbp\n   0x000000000008a9dd <+1>:\tmov    rbp,rsp\n   0x000000000008a9e0 <+4>:\tsub    rsp,0x30\n   0x000000000008a9e4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a9e8 <+12>:\tjbe    0x8ab1a <sumDigits+318>\n   0x000000000008a9ee <+18>:\tcmp    rdi,0x0\n   0x000000000008a9f2 <+22>:\tjge    0x8aa06 <sumDigits+42>\n   0x000000000008a9f8 <+28>:\tmov    rax,rdi\n   0x000000000008a9fb <+31>:\tneg    rax\n   0x000000000008a9fe <+34>:\tmov    rcx,rax\n   0x000000000008aa01 <+37>:\tjmp    0x8aa09 <sumDigits+45>\n   0x000000000008aa06 <+42>:\tmov    rcx,rdi\n   0x000000000008aa09 <+45>:\tcmp    rsi,0x2\n   0x000000000008aa0d <+49>:\tjge    0x8aa1d <sumDigits+65>\n   0x000000000008aa13 <+55>:\tmov    edx,0x2\n   0x000000000008aa18 <+60>:\tjmp    0x8aa20 <sumDigits+68>\n   0x000000000008aa1d <+65>:\tmov    rdx,rsi\n   0x000000000008aa20 <+68>:\tmov    rax,rcx\n   0x000000000008aa23 <+71>:\tadd    rax,rax\n   0x000000000008aa26 <+74>:\tjno    0x8aa35 <sumDigits+89>\n   0x000000000008aa2c <+80>:\tcall   0x85568 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008aa31 <+85>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008aa35 <+89>:\tmov    rcx,rdx\n   0x000000000008aa38 <+92>:\tadd    rcx,rcx\n   0x000000000008aa3b <+95>:\tmov    QWORD PTR [rbp-0x18],rcx\n   0x000000000008aa3f <+99>:\tmov    rdx,rax\n   0x000000000008aa42 <+102>:\txor    eax,eax\n   0x000000000008aa44 <+104>:\tmov    QWORD PTR [rbp-0x8],rdx\n   0x000000000008aa48 <+108>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008aa4c <+112>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008aa50 <+116>:\tjbe    0x8ab26 <sumDigits+330>\n   0x000000000008aa56 <+122>:\tmov    QWORD PTR [rsp+0x8],rdx\n   0x000000000008aa5b <+127>:\tmov    QWORD PTR [rsp],0x0\n   0x000000000008aa63 <+135>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008aa68 <+140>:\tmov    rcx,QWORD PTR [r15+0x1827]\n   0x000000000008aa6f <+147>:\tmov    rbx,QWORD PTR [r15+0x182f]\n   0x000000000008aa76 <+154>:\tcall   rcx\n   0x000000000008aa78 <+156>:\ttest   al,0x10\n   0x000000000008aa7a <+158>:\tjne    0x8ab11 <sumDigits+309>\n   0x000000000008aa80 <+164>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008aa84 <+168>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008aa88 <+172>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008aa8d <+177>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008aa91 <+181>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008aa95 <+185>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008aa9a <+190>:\tmov    rcx,QWORD PTR [r15+0x1837]\n   0x000000000008aaa1 <+197>:\tmov    rbx,QWORD PTR [r15+0x183f]\n   0x000000000008aaa8 <+204>:\tcall   rcx\n   0x000000000008aaaa <+206>:\tmov    rcx,rax\n   0x000000000008aaad <+209>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008aab1 <+213>:\ttest   al,0x1\n   0x000000000008aab3 <+215>:\tmov    edx,0x3c\n   0x000000000008aab8 <+220>:\tje     0x8aac0 <sumDigits+228>\n   0x000000000008aaba <+222>:\tmov    edx,DWORD PTR [rax-0x1]\n   0x000000000008aabd <+225>:\tshr    edx,0xc\n   0x000000000008aac0 <+228>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008aac5 <+233>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008aac9 <+237>:\tmov    rcx,rdx\n   0x000000000008aacc <+240>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008aad0 <+244>:\tcall   QWORD PTR [rax+rcx*8-0x60]\n   0x000000000008aad4 <+248>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008aad8 <+252>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008aadc <+256>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008aae1 <+261>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008aae5 <+265>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008aae9 <+269>:\tmov    rdx,QWORD PTR [rsp+0x8]\n   0x000000000008aaee <+274>:\tmov    rcx,QWORD PTR [r15+0x1847]\n   0x000000000008aaf5 <+281>:\tmov    rbx,QWORD PTR [r15+0x184f]\n   0x000000000008aafc <+288>:\tcall   rcx\n   0x000000000008aafe <+290>:\tmov    rcx,rax\n   0x000000000008ab01 <+293>:\tmov    rdx,rcx\n   0x000000000008ab04 <+296>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008ab08 <+300>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008ab0c <+304>:\tjmp    0x8aa44 <sumDigits+104>\n   0x000000000008ab11 <+309>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008ab15 <+313>:\tmov    rsp,rbp\n   0x000000000008ab18 <+316>:\tpop    rbp\n   0x000000000008ab19 <+317>:\tret\n   0x000000000008ab1a <+318>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab21 <+325>:\tjmp    0x8a9ee <sumDigits+18>\n   0x000000000008ab26 <+330>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ab2d <+337>:\tjmp    0x8aa56 <sumDigits+122>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print('The sums of the digits are:\\n');\n  print('1    base 10 : ${sumDigits(1, 10)}');\n  print('1234 base 10 : ${sumDigits(1234, 10)}');\n  print('fe   base 16 : ${sumDigits(0xfe, 16)}');\n  print('f0e  base 16 : ${sumDigits(0xf0e, 16)}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a7cc <+0>:\tpush   rbp\n   0x000000000008a7cd <+1>:\tmov    rbp,rsp\n   0x000000000008a7d0 <+4>:\tsub    rsp,0x10\n   0x000000000008a7d4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a7d8 <+12>:\tjbe    0x8a997 <main+459>\n   0x000000000008a7de <+18>:\tmov    rdi,QWORD PTR [r15+0x17ff]\n   0x000000000008a7e5 <+25>:\tcall   0x8ab34 <printToConsole>\n   0x000000000008a7ea <+30>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a7ee <+34>:\tmov    r10d,0x4\n   0x000000000008a7f4 <+40>:\tcall   0x852e4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a7f9 <+45>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a7fd <+49>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a804 <+56>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a808 <+60>:\tmov    edi,0x1\n   0x000000000008a80d <+65>:\tmov    esi,0xa\n   0x000000000008a812 <+70>:\tcall   0x8a9dc <sumDigits>\n   0x000000000008a817 <+75>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a81b <+79>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a81f <+83>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a823 <+87>:\ttest   al,0x1\n   0x000000000008a825 <+89>:\tje     0x8a83e <main+114>\n   0x000000000008a827 <+91>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a82b <+95>:\tshr    r11d,0x2\n   0x000000000008a82f <+99>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a833 <+103>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a837 <+107>:\tje     0x8a83e <main+114>\n   0x000000000008a839 <+109>:\tcall   0x838fc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a83e <+114>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a842 <+118>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a846 <+122>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a84b <+127>:\tmov    rdi,rax\n   0x000000000008a84e <+130>:\tcall   0x8a9a4 <print>\n   0x000000000008a853 <+135>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a857 <+139>:\tmov    r10d,0x4\n   0x000000000008a85d <+145>:\tcall   0x852e4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a862 <+150>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a866 <+154>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a86d <+161>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a871 <+165>:\tmov    edi,0x4d2\n   0x000000000008a876 <+170>:\tmov    esi,0xa\n   0x000000000008a87b <+175>:\tcall   0x8a9dc <sumDigits>\n   0x000000000008a880 <+180>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a884 <+184>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a888 <+188>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a88c <+192>:\ttest   al,0x1\n   0x000000000008a88e <+194>:\tje     0x8a8a7 <main+219>\n   0x000000000008a890 <+196>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a894 <+200>:\tshr    r11d,0x2\n   0x000000000008a898 <+204>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a89c <+208>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a8a0 <+212>:\tje     0x8a8a7 <main+219>\n   0x000000000008a8a2 <+214>:\tcall   0x838fc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a8a7 <+219>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a8ab <+223>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a8af <+227>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a8b4 <+232>:\tmov    rdi,rax\n   0x000000000008a8b7 <+235>:\tcall   0x8a9a4 <print>\n   0x000000000008a8bc <+240>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a8c0 <+244>:\tmov    r10d,0x4\n   0x000000000008a8c6 <+250>:\tcall   0x852e4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a8cb <+255>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a8cf <+259>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a8d6 <+266>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a8da <+270>:\tmov    edi,0xfe\n   0x000000000008a8df <+275>:\tmov    esi,0x10\n   0x000000000008a8e4 <+280>:\tcall   0x8a9dc <sumDigits>\n   0x000000000008a8e9 <+285>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a8ed <+289>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a8f1 <+293>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a8f5 <+297>:\ttest   al,0x1\n   0x000000000008a8f7 <+299>:\tje     0x8a910 <main+324>\n   0x000000000008a8f9 <+301>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a8fd <+305>:\tshr    r11d,0x2\n   0x000000000008a901 <+309>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a905 <+313>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a909 <+317>:\tje     0x8a910 <main+324>\n   0x000000000008a90b <+319>:\tcall   0x838fc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a910 <+324>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a914 <+328>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a918 <+332>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a91d <+337>:\tmov    rdi,rax\n   0x000000000008a920 <+340>:\tcall   0x8a9a4 <print>\n   0x000000000008a925 <+345>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a929 <+349>:\tmov    r10d,0x4\n   0x000000000008a92f <+355>:\tcall   0x852e4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a934 <+360>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a938 <+364>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a93f <+371>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a943 <+375>:\tmov    edi,0xf0e\n   0x000000000008a948 <+380>:\tmov    esi,0x10\n   0x000000000008a94d <+385>:\tcall   0x8a9dc <sumDigits>\n   0x000000000008a952 <+390>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a956 <+394>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a95a <+398>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a95e <+402>:\ttest   al,0x1\n   0x000000000008a960 <+404>:\tje     0x8a979 <main+429>\n   0x000000000008a962 <+406>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a966 <+410>:\tshr    r11d,0x2\n   0x000000000008a96a <+414>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a96e <+418>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a972 <+422>:\tje     0x8a979 <main+429>\n   0x000000000008a974 <+424>:\tcall   0x838fc <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a979 <+429>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a97d <+433>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a981 <+437>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a986 <+442>:\tmov    rdi,rax\n   0x000000000008a989 <+445>:\tcall   0x8a9a4 <print>\n   0x000000000008a98e <+450>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a992 <+454>:\tmov    rsp,rbp\n   0x000000000008a995 <+457>:\tpop    rbp\n   0x000000000008a996 <+458>:\tret\n   0x000000000008a997 <+459>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a99e <+466>:\tjmp    0x8a7de <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sum-of-a-series-1.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  var list = new List<int>.generate(1000, (i) => i + 1);\n\n  num sum = 0;\n\n  (list.map((x) => 1.0 / (x * x))).forEach((num e) {\n    sum += e;\n  });\n  print(sum);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a3d0 <+0>:\tpush   rbp\n   0x000000000008a3d1 <+1>:\tmov    rbp,rsp\n   0x000000000008a3d4 <+4>:\tsub    rsp,0x28\n   0x000000000008a3d8 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3dc <+12>:\tjbe    0x8a4ad <main+221>\n   0x000000000008a3e2 <+18>:\tmov    rdi,QWORD PTR [r15+0x237]\n   0x000000000008a3e9 <+25>:\tmov    esi,0x3e8\n   0x000000000008a3ee <+30>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a3f3 <+35>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a3f7 <+39>:\tmov    rcx,QWORD PTR [rax+0xf]\n   0x000000000008a3fb <+43>:\tsar    rcx,1\n   0x000000000008a3fe <+46>:\tmov    rdx,QWORD PTR [rax+0x17]\n   0x000000000008a402 <+50>:\txor    ebx,ebx\n   0x000000000008a404 <+52>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a408 <+56>:\tjbe    0x8a4b9 <main+233>\n   0x000000000008a40e <+62>:\tcmp    rbx,rcx\n   0x000000000008a411 <+65>:\tjge    0x8a42e <main+94>\n   0x000000000008a417 <+71>:\tmov    rsi,rbx\n   0x000000000008a41a <+74>:\tadd    rsi,0x1\n   0x000000000008a41e <+78>:\tmov    rdi,rsi\n   0x000000000008a421 <+81>:\tadd    rdi,rdi\n   0x000000000008a424 <+84>:\tmov    QWORD PTR [rdx+rbx*8+0x17],rdi\n   0x000000000008a429 <+89>:\tmov    rbx,rsi\n   0x000000000008a42c <+92>:\tjmp    0x8a404 <main+52>\n   0x000000000008a42e <+94>:\tmov    r10d,0x1\n   0x000000000008a434 <+100>:\tcall   0x83fd8 <stub _iso_stub_AllocateContextStub>\n   0x000000000008a439 <+105>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a43d <+109>:\tmov    QWORD PTR [rax+0x17],0x0\n   0x000000000008a445 <+117>:\tmov    rbx,QWORD PTR [r15+0x17f7]\n   0x000000000008a44c <+124>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a450 <+128>:\tcall   0x84304 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a455 <+133>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a45c <+140>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008a461 <+145>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a465 <+149>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a46a <+154>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a46e <+158>:\tmov    r10,QWORD PTR [r15+0x57]\n   0x000000000008a472 <+162>:\tcall   0x5dac4 <ListBase.map>\n   0x000000000008a477 <+167>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a47b <+171>:\tmov    rbx,QWORD PTR [r15+0x1807]\n   0x000000000008a482 <+178>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a486 <+182>:\tcall   0x84304 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a48b <+187>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a48f <+191>:\tmov    rsi,rax\n   0x000000000008a492 <+194>:\tcall   0x8a564 <ListIterable.forEach>\n   0x000000000008a497 <+199>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a49b <+203>:\tmov    rdi,QWORD PTR [rax+0x17]\n   0x000000000008a49f <+207>:\tcall   0x8a4c8 <print>\n   0x000000000008a4a4 <+212>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a4a8 <+216>:\tmov    rsp,rbp\n   0x000000000008a4ab <+219>:\tpop    rbp\n   0x000000000008a4ac <+220>:\tret\n   0x000000000008a4ad <+221>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4b4 <+228>:\tjmp    0x8a3e2 <main+18>\n   0x000000000008a4b9 <+233>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4c0 <+240>:\tjmp    0x8a40e <main+62>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sum-of-a-series-2.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  print(f(1000));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a181 <main+45>\n   0x000000000008a162 <+14>:\tmovsd  xmm1,QWORD PTR [r15+0x17f7]\n   0x000000000008a16b <+23>:\tcall   0x8a264 <f>\n   0x000000000008a170 <+28>:\tmovaps xmm1,xmm0\n   0x000000000008a173 <+31>:\tcall   0x8a18c <print>\n   0x000000000008a178 <+36>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a17c <+40>:\tmov    rsp,rbp\n   0x000000000008a17f <+43>:\tpop    rbp\n   0x000000000008a180 <+44>:\tret\n   0x000000000008a181 <+45>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a188 <+52>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sum-of-squares-2.dart",
  "functions": [
    {
      "name": "sumOfSquares",
      "source": "num sumOfSquares(List<num> l) => l.map((num x)=>x*x)",
      "assembly": "Dump of assembler code for function sumOfSquares:\n   0x000000000008a824 <+0>:\tpush   rbp\n   0x000000000008a825 <+1>:\tmov    rbp,rsp\n   0x000000000008a828 <+4>:\tsub    rsp,0x28\n   0x000000000008a82c <+8>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a830 <+12>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a834 <+16>:\tjbe    0x8a8b1 <sumOfSquares+141>\n   0x000000000008a83a <+22>:\tmov    rbx,QWORD PTR [r15+0x17ff]\n   0x000000000008a841 <+29>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a845 <+33>:\tcall   0x845d0 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a84a <+38>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a851 <+45>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008a856 <+50>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a85a <+54>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a85f <+59>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a863 <+63>:\tmov    r10,QWORD PTR [r15+0x57]\n   0x000000000008a867 <+67>:\tcall   0x5dac4 <ListBase.map>\n   0x000000000008a86c <+72>:\tmov    rbx,QWORD PTR [r15+0x1807]\n   0x000000000008a873 <+79>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a877 <+83>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a87b <+87>:\tcall   0x845d0 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a880 <+92>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a887 <+99>:\tmov    QWORD PTR [rsp+0x18],r11\n   0x000000000008a88c <+104>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a890 <+108>:\tmov    QWORD PTR [rsp+0x10],r11\n   0x000000000008a895 <+113>:\txor    ecx,ecx\n   0x000000000008a897 <+115>:\tmov    QWORD PTR [rsp+0x8],rcx\n   0x000000000008a89c <+120>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a8a0 <+124>:\tmov    r10,QWORD PTR [r15+0x13df]\n   0x000000000008a8a7 <+131>:\tcall   0x8a8bc <ListIterable.fold>\n   0x000000000008a8ac <+136>:\tmov    rsp,rbp\n   0x000000000008a8af <+139>:\tpop    rbp\n   0x000000000008a8b0 <+140>:\tret\n   0x000000000008a8b1 <+141>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a8b8 <+148>:\tjmp    0x8a83a <sumOfSquares+22>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main(){\n  print(sumOfSquares([]));\n  print(sumOfSquares([1,2,3]));\n  print(sumOfSquares([10]));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a69c <+0>:\tpush   rbp\n   0x000000000008a69d <+1>:\tmov    rbp,rsp\n   0x000000000008a6a0 <+4>:\tsub    rsp,0x8\n   0x000000000008a6a4 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a6a8 <+12>:\tjbe    0x8a779 <main+221>\n   0x000000000008a6ae <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a6b5 <+25>:\txor    esi,esi\n   0x000000000008a6b7 <+27>:\tcall   0x52e38 <new _GrowableList>\n   0x000000000008a6bc <+32>:\tmov    rdi,rax\n   0x000000000008a6bf <+35>:\tcall   0x8a824 <sumOfSquares>\n   0x000000000008a6c4 <+40>:\tmov    rdi,rax\n   0x000000000008a6c7 <+43>:\tcall   0x8a788 <print>\n   0x000000000008a6cc <+48>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a6d0 <+52>:\tmov    r10d,0x6\n   0x000000000008a6d6 <+58>:\tcall   0x851b4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a6db <+63>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a6df <+67>:\tmov    QWORD PTR [rax+0x17],0x2\n   0x000000000008a6e7 <+75>:\tmov    QWORD PTR [rax+0x1f],0x4\n   0x000000000008a6ef <+83>:\tmov    QWORD PTR [rax+0x27],0x6\n   0x000000000008a6f7 <+91>:\tmov    rdx,QWORD PTR [r15+0x17f7]\n   0x000000000008a6fe <+98>:\tcall   0x84274 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a703 <+103>:\tmov    rcx,rax\n   0x000000000008a706 <+106>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a70a <+110>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a70e <+114>:\tmov    QWORD PTR [rcx+0xf],0x6\n   0x000000000008a716 <+122>:\tmov    rdi,rcx\n   0x000000000008a719 <+125>:\tcall   0x8a824 <sumOfSquares>\n   0x000000000008a71e <+130>:\tmov    rdi,rax\n   0x000000000008a721 <+133>:\tcall   0x8a788 <print>\n   0x000000000008a726 <+138>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a72a <+142>:\tmov    r10d,0x2\n   0x000000000008a730 <+148>:\tcall   0x851b4 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a735 <+153>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a739 <+157>:\tmov    QWORD PTR [rax+0x17],0x14\n   0x000000000008a741 <+165>:\tmov    rdx,QWORD PTR [r15+0x17f7]\n   0x000000000008a748 <+172>:\tcall   0x84274 <stub _iso_stub_AllocateGrowableArrayStub>\n   0x000000000008a74d <+177>:\tmov    rcx,rax\n   0x000000000008a750 <+180>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a754 <+184>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a758 <+188>:\tmov    QWORD PTR [rcx+0xf],0x2\n   0x000000000008a760 <+196>:\tmov    rdi,rcx\n   0x000000000008a763 <+199>:\tcall   0x8a824 <sumOfSquares>\n   0x000000000008a768 <+204>:\tmov    rdi,rax\n   0x000000000008a76b <+207>:\tcall   0x8a788 <print>\n   0x000000000008a770 <+212>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a774 <+216>:\tmov    rsp,rbp\n   0x000000000008a777 <+219>:\tpop    rbp\n   0x000000000008a778 <+220>:\tret\n   0x000000000008a779 <+221>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a780 <+228>:\tjmp    0x8a6ae <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "tau-function.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  const int limit = 100;\n  print(\"Count of divisors for the first $limit positive integers:\");\n  for (int n = 1; n <= limit; ++n) {\n    print(divisorCount(n).toString().padLeft(3));\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a308 <+0>:\tpush   rbp\n   0x000000000008a309 <+1>:\tmov    rbp,rsp\n   0x000000000008a30c <+4>:\tsub    rsp,0x10\n   0x000000000008a310 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a314 <+12>:\tjbe    0x8a4bf <main+439>\n   0x000000000008a31a <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a321 <+25>:\tcall   0x8a550 <printToConsole>\n   0x000000000008a326 <+30>:\tmov    esi,0x1\n   0x000000000008a32b <+35>:\tmov    QWORD PTR [rbp-0x8],rsi\n   0x000000000008a32f <+39>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a333 <+43>:\tjbe    0x8a4cb <main+451>\n   0x000000000008a339 <+49>:\tcmp    rsi,0x64\n   0x000000000008a33d <+53>:\tjg     0x8a4b6 <main+430>\n   0x000000000008a343 <+59>:\tmov    rcx,rsi\n   0x000000000008a346 <+62>:\tmov    eax,0x1\n   0x000000000008a34b <+67>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a34f <+71>:\tjbe    0x8a4d7 <main+463>\n   0x000000000008a355 <+77>:\ttest   cl,0x1\n   0x000000000008a358 <+80>:\tjne    0x8a367 <main+95>\n   0x000000000008a35e <+86>:\tadd    rax,0x1\n   0x000000000008a362 <+90>:\tsar    rcx,1\n   0x000000000008a365 <+93>:\tjmp    0x8a34b <main+67>\n   0x000000000008a367 <+95>:\tmov    rbx,rax\n   0x000000000008a36a <+98>:\tmov    rax,rcx\n   0x000000000008a36d <+101>:\tmov    ecx,0x3\n   0x000000000008a372 <+106>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a376 <+110>:\tjbe    0x8a4e3 <main+475>\n   0x000000000008a37c <+116>:\tmov    rdx,rcx\n   0x000000000008a37f <+119>:\timul   rdx,rcx\n   0x000000000008a383 <+123>:\tcmp    rdx,rax\n   0x000000000008a386 <+126>:\tjg     0x8a433 <main+299>\n   0x000000000008a38c <+132>:\tmov    r8,rax\n   0x000000000008a38f <+135>:\tmov    edi,0x1\n   0x000000000008a394 <+140>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a398 <+144>:\tjbe    0x8a4ef <main+487>\n   0x000000000008a39e <+150>:\tmov    rax,r8\n   0x000000000008a3a1 <+153>:\ttest   rcx,rcx\n   0x000000000008a3a4 <+156>:\tje     0x8a4fb <main+499>\n   0x000000000008a3aa <+162>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a3ae <+166>:\tje     0x8a514 <main+524>\n   0x000000000008a3b4 <+172>:\tmovsxd rdx,eax\n   0x000000000008a3b7 <+175>:\tcmp    rdx,rax\n   0x000000000008a3ba <+178>:\tjne    0x8a3cc <main+196>\n   0x000000000008a3bc <+180>:\tmovsxd rdx,ecx\n   0x000000000008a3bf <+183>:\tcmp    rdx,rcx\n   0x000000000008a3c2 <+186>:\tjne    0x8a3cc <main+196>\n   0x000000000008a3c4 <+188>:\tcdq\n   0x000000000008a3c5 <+189>:\tidiv   ecx\n   0x000000000008a3c7 <+191>:\tmovsxd rdx,edx\n   0x000000000008a3ca <+194>:\tjmp    0x8a3d1 <main+201>\n   0x000000000008a3cc <+196>:\tcqo\n   0x000000000008a3ce <+198>:\tidiv   rcx\n   0x000000000008a3d1 <+201>:\ttest   rdx,rdx\n   0x000000000008a3d4 <+204>:\tjl     0x8a51b <main+531>\n   0x000000000008a3da <+210>:\tcmp    rdx,0x0\n   0x000000000008a3de <+214>:\tjne    0x8a423 <main+283>\n   0x000000000008a3e4 <+220>:\tadd    rdi,0x1\n   0x000000000008a3e8 <+224>:\tmov    rax,r8\n   0x000000000008a3eb <+227>:\ttest   rcx,rcx\n   0x000000000008a3ee <+230>:\tje     0x8a530 <main+552>\n   0x000000000008a3f4 <+236>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a3f8 <+240>:\tje     0x8a547 <main+575>\n   0x000000000008a3fe <+246>:\tmovsxd rdx,eax\n   0x000000000008a401 <+249>:\tcmp    rdx,rax\n   0x000000000008a404 <+252>:\tjne    0x8a416 <main+270>\n   0x000000000008a406 <+254>:\tmovsxd rdx,ecx\n   0x000000000008a409 <+257>:\tcmp    rdx,rcx\n   0x000000000008a40c <+260>:\tjne    0x8a416 <main+270>\n   0x000000000008a40e <+262>:\tcdq\n   0x000000000008a40f <+263>:\tidiv   ecx\n   0x000000000008a411 <+265>:\tmovsxd rax,eax\n   0x000000000008a414 <+268>:\tjmp    0x8a41b <main+275>\n   0x000000000008a416 <+270>:\tcqo\n   0x000000000008a418 <+272>:\tidiv   rcx\n   0x000000000008a41b <+275>:\tmov    r8,rax\n   0x000000000008a41e <+278>:\tjmp    0x8a394 <main+140>\n   0x000000000008a423 <+283>:\timul   rbx,rdi\n   0x000000000008a427 <+287>:\tadd    rcx,0x2\n   0x000000000008a42b <+291>:\tmov    rax,r8\n   0x000000000008a42e <+294>:\tjmp    0x8a372 <main+106>\n   0x000000000008a433 <+299>:\tcmp    rax,0x1\n   0x000000000008a437 <+303>:\tjle    0x8a44b <main+323>\n   0x000000000008a43d <+309>:\tmov    rax,rbx\n   0x000000000008a440 <+312>:\tshl    rax,1\n   0x000000000008a443 <+315>:\tmov    rcx,rax\n   0x000000000008a446 <+318>:\tjmp    0x8a44e <main+326>\n   0x000000000008a44b <+323>:\tmov    rcx,rbx\n   0x000000000008a44e <+326>:\tmov    rax,rcx\n   0x000000000008a451 <+329>:\tadd    rax,rax\n   0x000000000008a454 <+332>:\tjno    0x8a463 <main+347>\n   0x000000000008a45a <+338>:\tcall   0x850a4 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a45f <+343>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a463 <+347>:\ttest   al,0x1\n   0x000000000008a465 <+349>:\tmov    ecx,0x3c\n   0x000000000008a46a <+354>:\tje     0x8a472 <main+362>\n   0x000000000008a46c <+356>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a46f <+359>:\tshr    ecx,0xc\n   0x000000000008a472 <+362>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a476 <+366>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a47a <+370>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008a481 <+377>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a484 <+380>:\tshr    ecx,0xc\n   0x000000000008a487 <+383>:\tmov    rdi,rax\n   0x000000000008a48a <+386>:\tmov    esi,0x3\n   0x000000000008a48f <+391>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008a496 <+398>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a49a <+402>:\tcall   QWORD PTR [rax+rcx*8+0x10]\n   0x000000000008a49e <+406>:\tmov    rdi,rax\n   0x000000000008a4a1 <+409>:\tcall   0x8a550 <printToConsole>\n   0x000000000008a4a6 <+414>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a4aa <+418>:\tadd    rcx,0x1\n   0x000000000008a4ae <+422>:\tmov    rsi,rcx\n   0x000000000008a4b1 <+425>:\tjmp    0x8a32b <main+35>\n   0x000000000008a4b6 <+430>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a4ba <+434>:\tmov    rsp,rbp\n   0x000000000008a4bd <+437>:\tpop    rbp\n   0x000000000008a4be <+438>:\tret\n   0x000000000008a4bf <+439>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4c6 <+446>:\tjmp    0x8a31a <main+18>\n   0x000000000008a4cb <+451>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4d2 <+458>:\tjmp    0x8a339 <main+49>\n   0x000000000008a4d7 <+463>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4de <+470>:\tjmp    0x8a355 <main+77>\n   0x000000000008a4e3 <+475>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4ea <+482>:\tjmp    0x8a37c <main+116>\n   0x000000000008a4ef <+487>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a4f6 <+494>:\tjmp    0x8a39e <main+150>\n   0x000000000008a4fb <+499>:\tpush   r8\n   0x000000000008a4fd <+501>:\tpush   rdi\n   0x000000000008a4fe <+502>:\tpush   rsi\n   0x000000000008a4ff <+503>:\tpush   rbx\n   0x000000000008a500 <+504>:\tpush   rcx\n   0x000000000008a501 <+505>:\tpush   rax\n   0x000000000008a502 <+506>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a509 <+513>:\txor    r10d,r10d\n   0x000000000008a50c <+516>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a513 <+523>:\tint3\n   0x000000000008a514 <+524>:\txor    edx,edx\n   0x000000000008a516 <+526>:\tjmp    0x8a3da <main+210>\n   0x000000000008a51b <+531>:\ttest   rcx,rcx\n   0x000000000008a51e <+534>:\tjl     0x8a528 <main+544>\n   0x000000000008a520 <+536>:\tadd    rdx,rcx\n   0x000000000008a523 <+539>:\tjmp    0x8a3da <main+210>\n   0x000000000008a528 <+544>:\tsub    rdx,rcx\n   0x000000000008a52b <+547>:\tjmp    0x8a3da <main+210>\n   0x000000000008a530 <+552>:\tpush   rdi\n   0x000000000008a531 <+553>:\tpush   rsi\n   0x000000000008a532 <+554>:\tpush   rbx\n   0x000000000008a533 <+555>:\tpush   rcx\n   0x000000000008a534 <+556>:\tpush   rax\n   0x000000000008a535 <+557>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a53c <+564>:\txor    r10d,r10d\n   0x000000000008a53f <+567>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a546 <+574>:\tint3\n   0x000000000008a547 <+575>:\tneg    rax\n   0x000000000008a54a <+578>:\tjmp    0x8a41b <main+275>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "tau-number.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  const int limit = 100;\n  print(\"The first $limit tau numbers are:\");\n  int count = 0;\n  for (int n = 1; count < limit; n++) {\n    if (n % divisorCount(n) == 0) {\n      print(n.toString().padLeft(6));\n      count++;\n    }\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a314 <+0>:\tpush   rbp\n   0x000000000008a315 <+1>:\tmov    rbp,rsp\n   0x000000000008a318 <+4>:\tsub    rsp,0x18\n   0x000000000008a31c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a320 <+12>:\tjbe    0x8a52c <main+536>\n   0x000000000008a326 <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a32d <+25>:\tcall   0x8a5f4 <printToConsole>\n   0x000000000008a332 <+30>:\txor    edi,edi\n   0x000000000008a334 <+32>:\tmov    esi,0x1\n   0x000000000008a339 <+37>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a33d <+41>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008a341 <+45>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a345 <+49>:\tjbe    0x8a538 <main+548>\n   0x000000000008a34b <+55>:\tcmp    rdi,0x64\n   0x000000000008a34f <+59>:\tjge    0x8a523 <main+527>\n   0x000000000008a355 <+65>:\tmov    rcx,rsi\n   0x000000000008a358 <+68>:\tmov    eax,0x1\n   0x000000000008a35d <+73>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a361 <+77>:\tjbe    0x8a544 <main+560>\n   0x000000000008a367 <+83>:\ttest   cl,0x1\n   0x000000000008a36a <+86>:\tjne    0x8a379 <main+101>\n   0x000000000008a370 <+92>:\tadd    rax,0x1\n   0x000000000008a374 <+96>:\tsar    rcx,1\n   0x000000000008a377 <+99>:\tjmp    0x8a35d <main+73>\n   0x000000000008a379 <+101>:\tmov    rbx,rax\n   0x000000000008a37c <+104>:\tmov    rax,rcx\n   0x000000000008a37f <+107>:\tmov    ecx,0x3\n   0x000000000008a384 <+112>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a388 <+116>:\tjbe    0x8a550 <main+572>\n   0x000000000008a38e <+122>:\tmov    rdx,rcx\n   0x000000000008a391 <+125>:\timul   rdx,rcx\n   0x000000000008a395 <+129>:\tcmp    rdx,rax\n   0x000000000008a398 <+132>:\tjg     0x8a446 <main+306>\n   0x000000000008a39e <+138>:\tmov    r9,rax\n   0x000000000008a3a1 <+141>:\tmov    r8d,0x1\n   0x000000000008a3a7 <+147>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a3ab <+151>:\tjbe    0x8a55c <main+584>\n   0x000000000008a3b1 <+157>:\tmov    rax,r9\n   0x000000000008a3b4 <+160>:\ttest   rcx,rcx\n   0x000000000008a3b7 <+163>:\tje     0x8a568 <main+596>\n   0x000000000008a3bd <+169>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a3c1 <+173>:\tje     0x8a583 <main+623>\n   0x000000000008a3c7 <+179>:\tmovsxd rdx,eax\n   0x000000000008a3ca <+182>:\tcmp    rdx,rax\n   0x000000000008a3cd <+185>:\tjne    0x8a3df <main+203>\n   0x000000000008a3cf <+187>:\tmovsxd rdx,ecx\n   0x000000000008a3d2 <+190>:\tcmp    rdx,rcx\n   0x000000000008a3d5 <+193>:\tjne    0x8a3df <main+203>\n   0x000000000008a3d7 <+195>:\tcdq\n   0x000000000008a3d8 <+196>:\tidiv   ecx\n   0x000000000008a3da <+198>:\tmovsxd rdx,edx\n   0x000000000008a3dd <+201>:\tjmp    0x8a3e4 <main+208>\n   0x000000000008a3df <+203>:\tcqo\n   0x000000000008a3e1 <+205>:\tidiv   rcx\n   0x000000000008a3e4 <+208>:\ttest   rdx,rdx\n   0x000000000008a3e7 <+211>:\tjl     0x8a58a <main+630>\n   0x000000000008a3ed <+217>:\tcmp    rdx,0x0\n   0x000000000008a3f1 <+221>:\tjne    0x8a436 <main+290>\n   0x000000000008a3f7 <+227>:\tadd    r8,0x1\n   0x000000000008a3fb <+231>:\tmov    rax,r9\n   0x000000000008a3fe <+234>:\ttest   rcx,rcx\n   0x000000000008a401 <+237>:\tje     0x8a59f <main+651>\n   0x000000000008a407 <+243>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a40b <+247>:\tje     0x8a5b8 <main+676>\n   0x000000000008a411 <+253>:\tmovsxd rdx,eax\n   0x000000000008a414 <+256>:\tcmp    rdx,rax\n   0x000000000008a417 <+259>:\tjne    0x8a429 <main+277>\n   0x000000000008a419 <+261>:\tmovsxd rdx,ecx\n   0x000000000008a41c <+264>:\tcmp    rdx,rcx\n   0x000000000008a41f <+267>:\tjne    0x8a429 <main+277>\n   0x000000000008a421 <+269>:\tcdq\n   0x000000000008a422 <+270>:\tidiv   ecx\n   0x000000000008a424 <+272>:\tmovsxd rax,eax\n   0x000000000008a427 <+275>:\tjmp    0x8a42e <main+282>\n   0x000000000008a429 <+277>:\tcqo\n   0x000000000008a42b <+279>:\tidiv   rcx\n   0x000000000008a42e <+282>:\tmov    r9,rax\n   0x000000000008a431 <+285>:\tjmp    0x8a3a7 <main+147>\n   0x000000000008a436 <+290>:\timul   rbx,r8\n   0x000000000008a43a <+294>:\tadd    rcx,0x2\n   0x000000000008a43e <+298>:\tmov    rax,r9\n   0x000000000008a441 <+301>:\tjmp    0x8a384 <main+112>\n   0x000000000008a446 <+306>:\tcmp    rax,0x1\n   0x000000000008a44a <+310>:\tjle    0x8a45e <main+330>\n   0x000000000008a450 <+316>:\tmov    rax,rbx\n   0x000000000008a453 <+319>:\tshl    rax,1\n   0x000000000008a456 <+322>:\tmov    rcx,rax\n   0x000000000008a459 <+325>:\tjmp    0x8a461 <main+333>\n   0x000000000008a45e <+330>:\tmov    rcx,rbx\n   0x000000000008a461 <+333>:\tmov    rax,rsi\n   0x000000000008a464 <+336>:\ttest   rcx,rcx\n   0x000000000008a467 <+339>:\tje     0x8a5c0 <main+684>\n   0x000000000008a46d <+345>:\tcmp    rcx,0xffffffffffffffff\n   0x000000000008a471 <+349>:\tje     0x8a5d6 <main+706>\n   0x000000000008a477 <+355>:\tmovsxd rdx,eax\n   0x000000000008a47a <+358>:\tcmp    rdx,rax\n   0x000000000008a47d <+361>:\tjne    0x8a48f <main+379>\n   0x000000000008a47f <+363>:\tmovsxd rdx,ecx\n   0x000000000008a482 <+366>:\tcmp    rdx,rcx\n   0x000000000008a485 <+369>:\tjne    0x8a48f <main+379>\n   0x000000000008a487 <+371>:\tcdq\n   0x000000000008a488 <+372>:\tidiv   ecx\n   0x000000000008a48a <+374>:\tmovsxd rdx,edx\n   0x000000000008a48d <+377>:\tjmp    0x8a494 <main+384>\n   0x000000000008a48f <+379>:\tcqo\n   0x000000000008a491 <+381>:\tidiv   rcx\n   0x000000000008a494 <+384>:\ttest   rdx,rdx\n   0x000000000008a497 <+387>:\tjl     0x8a5dd <main+713>\n   0x000000000008a49d <+393>:\tcmp    rdx,0x0\n   0x000000000008a4a1 <+397>:\tjne    0x8a50f <main+507>\n   0x000000000008a4a7 <+403>:\tmov    rax,rsi\n   0x000000000008a4aa <+406>:\tadd    rax,rax\n   0x000000000008a4ad <+409>:\tjno    0x8a4bc <main+424>\n   0x000000000008a4b3 <+415>:\tcall   0x850b0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a4b8 <+420>:\tmov    QWORD PTR [rax+0x7],rsi\n   0x000000000008a4bc <+424>:\ttest   al,0x1\n   0x000000000008a4be <+426>:\tmov    ecx,0x3c\n   0x000000000008a4c3 <+431>:\tje     0x8a4cb <main+439>\n   0x000000000008a4c5 <+433>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a4c8 <+436>:\tshr    ecx,0xc\n   0x000000000008a4cb <+439>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a4cf <+443>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a4d3 <+447>:\tcall   QWORD PTR [rax+rcx*8+0x2240]\n   0x000000000008a4da <+454>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a4dd <+457>:\tshr    ecx,0xc\n   0x000000000008a4e0 <+460>:\tmov    rdi,rax\n   0x000000000008a4e3 <+463>:\tmov    esi,0x6\n   0x000000000008a4e8 <+468>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008a4ef <+475>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a4f3 <+479>:\tcall   QWORD PTR [rax+rcx*8+0x10]\n   0x000000000008a4f7 <+483>:\tmov    rdi,rax\n   0x000000000008a4fa <+486>:\tcall   0x8a5f4 <printToConsole>\n   0x000000000008a4ff <+491>:\tmov    rcx,QWORD PTR [rbp-0x8]\n   0x000000000008a503 <+495>:\tadd    rcx,0x1\n   0x000000000008a507 <+499>:\tmov    rdi,rcx\n   0x000000000008a50a <+502>:\tjmp    0x8a513 <main+511>\n   0x000000000008a50f <+507>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a513 <+511>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x000000000008a517 <+515>:\tadd    rcx,0x1\n   0x000000000008a51b <+519>:\tmov    rsi,rcx\n   0x000000000008a51e <+522>:\tjmp    0x8a339 <main+37>\n   0x000000000008a523 <+527>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a527 <+531>:\tmov    rsp,rbp\n   0x000000000008a52a <+534>:\tpop    rbp\n   0x000000000008a52b <+535>:\tret\n   0x000000000008a52c <+536>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a533 <+543>:\tjmp    0x8a326 <main+18>\n   0x000000000008a538 <+548>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a53f <+555>:\tjmp    0x8a34b <main+55>\n   0x000000000008a544 <+560>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a54b <+567>:\tjmp    0x8a367 <main+83>\n   0x000000000008a550 <+572>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a557 <+579>:\tjmp    0x8a38e <main+122>\n   0x000000000008a55c <+584>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a563 <+591>:\tjmp    0x8a3b1 <main+157>\n   0x000000000008a568 <+596>:\tpush   r9\n   0x000000000008a56a <+598>:\tpush   r8\n   0x000000000008a56c <+600>:\tpush   rdi\n   0x000000000008a56d <+601>:\tpush   rsi\n   0x000000000008a56e <+602>:\tpush   rbx\n   0x000000000008a56f <+603>:\tpush   rcx\n   0x000000000008a570 <+604>:\tpush   rax\n   0x000000000008a571 <+605>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a578 <+612>:\txor    r10d,r10d\n   0x000000000008a57b <+615>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a582 <+622>:\tint3\n   0x000000000008a583 <+623>:\txor    edx,edx\n   0x000000000008a585 <+625>:\tjmp    0x8a3ed <main+217>\n   0x000000000008a58a <+630>:\ttest   rcx,rcx\n   0x000000000008a58d <+633>:\tjl     0x8a597 <main+643>\n   0x000000000008a58f <+635>:\tadd    rdx,rcx\n   0x000000000008a592 <+638>:\tjmp    0x8a3ed <main+217>\n   0x000000000008a597 <+643>:\tsub    rdx,rcx\n   0x000000000008a59a <+646>:\tjmp    0x8a3ed <main+217>\n   0x000000000008a59f <+651>:\tpush   r8\n   0x000000000008a5a1 <+653>:\tpush   rdi\n   0x000000000008a5a2 <+654>:\tpush   rsi\n   0x000000000008a5a3 <+655>:\tpush   rbx\n   0x000000000008a5a4 <+656>:\tpush   rcx\n   0x000000000008a5a5 <+657>:\tpush   rax\n   0x000000000008a5a6 <+658>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a5ad <+665>:\txor    r10d,r10d\n   0x000000000008a5b0 <+668>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a5b7 <+675>:\tint3\n   0x000000000008a5b8 <+676>:\tneg    rax\n   0x000000000008a5bb <+679>:\tjmp    0x8a42e <main+282>\n   0x000000000008a5c0 <+684>:\tpush   rdi\n   0x000000000008a5c1 <+685>:\tpush   rsi\n   0x000000000008a5c2 <+686>:\tpush   rcx\n   0x000000000008a5c3 <+687>:\tpush   rax\n   0x000000000008a5c4 <+688>:\tmov    rbx,QWORD PTR [r14+0x460]\n   0x000000000008a5cb <+695>:\txor    r10d,r10d\n   0x000000000008a5ce <+698>:\tcall   QWORD PTR [r14+0x200]\n   0x000000000008a5d5 <+705>:\tint3\n   0x000000000008a5d6 <+706>:\txor    edx,edx\n   0x000000000008a5d8 <+708>:\tjmp    0x8a49d <main+393>\n   0x000000000008a5dd <+713>:\ttest   rcx,rcx\n   0x000000000008a5e0 <+716>:\tjl     0x8a5ea <main+726>\n   0x000000000008a5e2 <+718>:\tadd    rdx,rcx\n   0x000000000008a5e5 <+721>:\tjmp    0x8a49d <main+393>\n   0x000000000008a5ea <+726>:\tsub    rdx,rcx\n   0x000000000008a5ed <+729>:\tjmp    0x8a49d <main+393>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "temperature-conversion.dart",
  "functions": [
    {
      "name": "convertKelvin",
      "source": "void convertKelvin(double kelvin) {\n  print('K = ${kelvin.toStringAsFixed(2)}');\n  print('C = ${kelvinToCelsius(kelvin).toStringAsFixed(2)}');\n  print('F = ${kelvinToFahrenheit(kelvin).toStringAsFixed(2)}');\n  print('R = ${kelvinToRankine(kelvin).toStringAsFixed(2)}');\n  print('');\n}",
      "assembly": "Dump of assembler code for function convertKelvin:\n   0x000000000008a18c <+0>:\tpush   rbp\n   0x000000000008a18d <+1>:\tmov    rbp,rsp\n   0x000000000008a190 <+4>:\tsub    rsp,0x18\n   0x000000000008a194 <+8>:\tmovsd  QWORD PTR [rbp-0x10],xmm1\n   0x000000000008a199 <+13>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a19d <+17>:\tjbe    0x8a427 <convertKelvin+667>\n   0x000000000008a1a3 <+23>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a1a7 <+27>:\tmov    r10d,0x4\n   0x000000000008a1ad <+33>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a1b2 <+38>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a1b6 <+42>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a1bd <+49>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a1c1 <+53>:\tmovsd  xmm0,QWORD PTR [rbp-0x10]\n   0x000000000008a1c6 <+58>:\tmov    rdi,QWORD PTR [r14+0x48]\n   0x000000000008a1ca <+62>:\tadd    rdi,0x10\n   0x000000000008a1ce <+66>:\tcmp    rdi,QWORD PTR [r14+0x50]\n   0x000000000008a1d2 <+70>:\tjae    0x8a433 <convertKelvin+679>\n   0x000000000008a1d8 <+76>:\tmov    QWORD PTR [r14+0x48],rdi\n   0x000000000008a1dc <+80>:\tsub    rdi,0xf\n   0x000000000008a1e0 <+84>:\tmov    QWORD PTR [rdi-0x1],0x3e15c\n   0x000000000008a1e8 <+92>:\tmovsd  QWORD PTR [rdi+0x7],xmm0\n   0x000000000008a1ed <+97>:\tmov    esi,0x2\n   0x000000000008a1f2 <+102>:\tcall   0x8a558 <double.toStringAsFixed>\n   0x000000000008a1f7 <+107>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a1fb <+111>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a1ff <+115>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a203 <+119>:\ttest   al,0x1\n   0x000000000008a205 <+121>:\tje     0x8a21e <convertKelvin+146>\n   0x000000000008a207 <+123>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a20b <+127>:\tshr    r11d,0x2\n   0x000000000008a20f <+131>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a213 <+135>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a217 <+139>:\tje     0x8a21e <convertKelvin+146>\n   0x000000000008a219 <+141>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a21e <+146>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a222 <+150>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a226 <+154>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a22b <+159>:\tmov    rdi,rax\n   0x000000000008a22e <+162>:\tcall   0x8a520 <print>\n   0x000000000008a233 <+167>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a237 <+171>:\tmov    r10d,0x4\n   0x000000000008a23d <+177>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a242 <+182>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a246 <+186>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a24d <+193>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a251 <+197>:\tmovsd  xmm0,QWORD PTR [r15+0x180f]\n   0x000000000008a25a <+206>:\tmovsd  xmm1,QWORD PTR [rbp-0x10]\n   0x000000000008a25f <+211>:\tsubsd  xmm1,xmm0\n   0x000000000008a263 <+215>:\tmov    rdi,QWORD PTR [r14+0x48]\n   0x000000000008a267 <+219>:\tadd    rdi,0x10\n   0x000000000008a26b <+223>:\tcmp    rdi,QWORD PTR [r14+0x50]\n   0x000000000008a26f <+227>:\tjae    0x8a452 <convertKelvin+710>\n   0x000000000008a275 <+233>:\tmov    QWORD PTR [r14+0x48],rdi\n   0x000000000008a279 <+237>:\tsub    rdi,0xf\n   0x000000000008a27d <+241>:\tmov    QWORD PTR [rdi-0x1],0x3e15c\n   0x000000000008a285 <+249>:\tmovsd  QWORD PTR [rdi+0x7],xmm1\n   0x000000000008a28a <+254>:\tmov    esi,0x2\n   0x000000000008a28f <+259>:\tcall   0x8a558 <double.toStringAsFixed>\n   0x000000000008a294 <+264>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a298 <+268>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a29c <+272>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a2a0 <+276>:\ttest   al,0x1\n   0x000000000008a2a2 <+278>:\tje     0x8a2bb <convertKelvin+303>\n   0x000000000008a2a4 <+280>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a2a8 <+284>:\tshr    r11d,0x2\n   0x000000000008a2ac <+288>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a2b0 <+292>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a2b4 <+296>:\tje     0x8a2bb <convertKelvin+303>\n   0x000000000008a2b6 <+298>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a2bb <+303>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a2bf <+307>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a2c3 <+311>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a2c8 <+316>:\tmov    rdi,rax\n   0x000000000008a2cb <+319>:\tcall   0x8a520 <print>\n   0x000000000008a2d0 <+324>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a2d4 <+328>:\tmov    r10d,0x4\n   0x000000000008a2da <+334>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a2df <+339>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a2e3 <+343>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a2ea <+350>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a2ee <+354>:\tmovsd  xmm0,QWORD PTR [r15+0x181f]\n   0x000000000008a2f7 <+363>:\tmovsd  xmm1,QWORD PTR [rbp-0x10]\n   0x000000000008a2fc <+368>:\tmulsd  xmm1,xmm0\n   0x000000000008a300 <+372>:\tmovsd  QWORD PTR [rbp-0x10],xmm1\n   0x000000000008a305 <+377>:\tmovsd  xmm0,QWORD PTR [r15+0x1827]\n   0x000000000008a30e <+386>:\tmovaps xmm2,xmm1\n   0x000000000008a311 <+389>:\tsubsd  xmm2,xmm0\n   0x000000000008a315 <+393>:\tmov    rdi,QWORD PTR [r14+0x48]\n   0x000000000008a319 <+397>:\tadd    rdi,0x10\n   0x000000000008a31d <+401>:\tcmp    rdi,QWORD PTR [r14+0x50]\n   0x000000000008a321 <+405>:\tjae    0x8a471 <convertKelvin+741>\n   0x000000000008a327 <+411>:\tmov    QWORD PTR [r14+0x48],rdi\n   0x000000000008a32b <+415>:\tsub    rdi,0xf\n   0x000000000008a32f <+419>:\tmov    QWORD PTR [rdi-0x1],0x3e15c\n   0x000000000008a337 <+427>:\tmovsd  QWORD PTR [rdi+0x7],xmm2\n   0x000000000008a33c <+432>:\tmov    esi,0x2\n   0x000000000008a341 <+437>:\tcall   0x8a558 <double.toStringAsFixed>\n   0x000000000008a346 <+442>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a34a <+446>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a34e <+450>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a352 <+454>:\ttest   al,0x1\n   0x000000000008a354 <+456>:\tje     0x8a36d <convertKelvin+481>\n   0x000000000008a356 <+458>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a35a <+462>:\tshr    r11d,0x2\n   0x000000000008a35e <+466>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a362 <+470>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a366 <+474>:\tje     0x8a36d <convertKelvin+481>\n   0x000000000008a368 <+476>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a36d <+481>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a371 <+485>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a375 <+489>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a37a <+494>:\tmov    rdi,rax\n   0x000000000008a37d <+497>:\tcall   0x8a520 <print>\n   0x000000000008a382 <+502>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a386 <+506>:\tmov    r10d,0x4\n   0x000000000008a38c <+512>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a391 <+517>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a395 <+521>:\tmov    r11,QWORD PTR [r15+0x182f]\n   0x000000000008a39c <+528>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a3a0 <+532>:\tmovsd  xmm0,QWORD PTR [rbp-0x10]\n   0x000000000008a3a5 <+537>:\tmov    rdi,QWORD PTR [r14+0x48]\n   0x000000000008a3a9 <+541>:\tadd    rdi,0x10\n   0x000000000008a3ad <+545>:\tcmp    rdi,QWORD PTR [r14+0x50]\n   0x000000000008a3b1 <+549>:\tjae    0x8a49a <convertKelvin+782>\n   0x000000000008a3b7 <+555>:\tmov    QWORD PTR [r14+0x48],rdi\n   0x000000000008a3bb <+559>:\tsub    rdi,0xf\n   0x000000000008a3bf <+563>:\tmov    QWORD PTR [rdi-0x1],0x3e15c\n   0x000000000008a3c7 <+571>:\tmovsd  QWORD PTR [rdi+0x7],xmm0\n   0x000000000008a3cc <+576>:\tmov    esi,0x2\n   0x000000000008a3d1 <+581>:\tcall   0x8a558 <double.toStringAsFixed>\n   0x000000000008a3d6 <+586>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a3da <+590>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a3de <+594>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a3e2 <+598>:\ttest   al,0x1\n   0x000000000008a3e4 <+600>:\tje     0x8a3fd <convertKelvin+625>\n   0x000000000008a3e6 <+602>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a3ea <+606>:\tshr    r11d,0x2\n   0x000000000008a3ee <+610>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a3f2 <+614>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a3f6 <+618>:\tje     0x8a3fd <convertKelvin+625>\n   0x000000000008a3f8 <+620>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a3fd <+625>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a401 <+629>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a405 <+633>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a40a <+638>:\tmov    rdi,rax\n   0x000000000008a40d <+641>:\tcall   0x8a520 <print>\n   0x000000000008a412 <+646>:\tmov    rdi,QWORD PTR [r15+0xcf]\n   0x000000000008a419 <+653>:\tcall   0x8a4bc <printToConsole>\n   0x000000000008a41e <+658>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a422 <+662>:\tmov    rsp,rbp\n   0x000000000008a425 <+665>:\tpop    rbp\n   0x000000000008a426 <+666>:\tret\n   0x000000000008a427 <+667>:\tcall   QWORD PTR [r14+0x238]\n   0x000000000008a42e <+674>:\tjmp    0x8a1a3 <convertKelvin+23>\n   0x000000000008a433 <+679>:\tsub    rsp,0x10\n   0x000000000008a437 <+683>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a43b <+687>:\tpush   rax\n   0x000000000008a43c <+688>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a441 <+693>:\tmov    rdi,rax\n   0x000000000008a444 <+696>:\tpop    rax\n   0x000000000008a445 <+697>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a449 <+701>:\tadd    rsp,0x10\n   0x000000000008a44d <+705>:\tjmp    0x8a1e8 <convertKelvin+92>\n   0x000000000008a452 <+710>:\tsub    rsp,0x10\n   0x000000000008a456 <+714>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x000000000008a45a <+718>:\tpush   rax\n   0x000000000008a45b <+719>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a460 <+724>:\tmov    rdi,rax\n   0x000000000008a463 <+727>:\tpop    rax\n   0x000000000008a464 <+728>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x000000000008a468 <+732>:\tadd    rsp,0x10\n   0x000000000008a46c <+736>:\tjmp    0x8a285 <convertKelvin+249>\n   0x000000000008a471 <+741>:\tsub    rsp,0x20\n   0x000000000008a475 <+745>:\tmovups XMMWORD PTR [rsp],xmm1\n   0x000000000008a479 <+749>:\tmovups XMMWORD PTR [rsp+0x10],xmm2\n   0x000000000008a47e <+754>:\tpush   rax\n   0x000000000008a47f <+755>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a484 <+760>:\tmov    rdi,rax\n   0x000000000008a487 <+763>:\tpop    rax\n   0x000000000008a488 <+764>:\tmovups xmm1,XMMWORD PTR [rsp]\n   0x000000000008a48c <+768>:\tmovups xmm2,XMMWORD PTR [rsp+0x10]\n   0x000000000008a491 <+773>:\tadd    rsp,0x20\n   0x000000000008a495 <+777>:\tjmp    0x8a337 <convertKelvin+427>\n   0x000000000008a49a <+782>:\tsub    rsp,0x10\n   0x000000000008a49e <+786>:\tmovups XMMWORD PTR [rsp],xmm0\n   0x000000000008a4a2 <+790>:\tpush   rax\n   0x000000000008a4a3 <+791>:\tcall   0x84bec <stub _iso_stub_AllocateDoubleStub>\n   0x000000000008a4a8 <+796>:\tmov    rdi,rax\n   0x000000000008a4ab <+799>:\tpop    rax\n   0x000000000008a4ac <+800>:\tmovups xmm0,XMMWORD PTR [rsp]\n   0x000000000008a4b0 <+804>:\tadd    rsp,0x10\n   0x000000000008a4b4 <+808>:\tjmp    0x8a3c7 <convertKelvin+571>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  convertKelvin(0.0);\n  convertKelvin(21.0);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a181 <main+45>\n   0x000000000008a162 <+14>:\txorps  xmm1,xmm1\n   0x000000000008a165 <+17>:\tcall   0x8a18c <convertKelvin>\n   0x000000000008a16a <+22>:\tmovsd  xmm1,QWORD PTR [r15+0x17f7]\n   0x000000000008a173 <+31>:\tcall   0x8a18c <convertKelvin>\n   0x000000000008a178 <+36>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a17c <+40>:\tmov    rsp,rbp\n   0x000000000008a17f <+43>:\tpop    rbp\n   0x000000000008a180 <+44>:\tret\n   0x000000000008a181 <+45>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a188 <+52>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "the-name-game.dart",
  "functions": [
    {
      "name": "theGameName",
      "source": "void theGameName(String nombre) {\n  String x = nombre.toLowerCase();\n  x = x[0].toUpperCase() + x.substring(1);\n  String x0 = x[0].toUpperCase();\n\n  String y;\n  if (x0 == 'A' || x0 == 'E' || x0 == 'I' || x0 == 'O' || x0 == 'U') {\n    y = x.toLowerCase();\n  } else {\n    y = x.substring(1);\n  }\n\n  String b = 'b' + y;\n  String f = 'f' + y;\n  String m = 'm' + y;\n\n  switch (x0) {\n    case 'B':\n      b = y;\n      break;\n    case 'F':\n      f = y;\n      break;\n    case 'M':\n      m = y;\n      break;\n  }\n\n  print('$x, $x, bo-$b');\n  print('Banana-fana fo-$f');\n  print('Fee-fi-mo-$m');\n  print('$x!\\n');\n}",
      "assembly": "Dump of assembler code for function theGameName:\n   0x000000000008a31c <+0>:\tpush   rbp\n   0x000000000008a31d <+1>:\tmov    rbp,rsp\n   0x000000000008a320 <+4>:\tsub    rsp,0x40\n   0x000000000008a324 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a328 <+12>:\tjbe    0x8a6bf <theGameName+931>\n   0x000000000008a32e <+18>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x000000000008a331 <+21>:\tshr    ecx,0xc\n   0x000000000008a334 <+24>:\tmov    QWORD PTR [rsp],rdi\n   0x000000000008a338 <+28>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a33c <+32>:\tcall   QWORD PTR [rax+rcx*8+0x2e0]\n   0x000000000008a343 <+39>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a347 <+43>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a34c <+48>:\tmov    QWORD PTR [rsp],0x0\n   0x000000000008a354 <+56>:\tcall   0x5b73c <_StringBase.[]>\n   0x000000000008a359 <+61>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a35c <+64>:\tshr    ecx,0xc\n   0x000000000008a35f <+67>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a363 <+71>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a367 <+75>:\tcall   QWORD PTR [rax+rcx*8+0x670]\n   0x000000000008a36e <+82>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a372 <+86>:\tmov    esi,0x1\n   0x000000000008a377 <+91>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a37b <+95>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008a382 <+102>:\tcall   0x5dee4 <_StringBase.substring>\n   0x000000000008a387 <+107>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a38b <+111>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a390 <+116>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a394 <+120>:\tcall   0x5e264 <_StringBase.+>\n   0x000000000008a399 <+125>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a39d <+129>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a3a2 <+134>:\tmov    QWORD PTR [rsp],0x0\n   0x000000000008a3aa <+142>:\tcall   0x5b73c <_StringBase.[]>\n   0x000000000008a3af <+147>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a3b2 <+150>:\tshr    ecx,0xc\n   0x000000000008a3b5 <+153>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a3b9 <+157>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3bd <+161>:\tcall   QWORD PTR [rax+rcx*8+0x670]\n   0x000000000008a3c4 <+168>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a3c8 <+172>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a3cb <+175>:\tshr    ecx,0xc\n   0x000000000008a3ce <+178>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a3d3 <+183>:\tmov    r11,QWORD PTR [r15+0x1837]\n   0x000000000008a3da <+190>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a3de <+194>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a3e2 <+198>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a3e5 <+201>:\ttest   al,0x10\n   0x000000000008a3e7 <+203>:\tje     0x8a491 <theGameName+373>\n   0x000000000008a3ed <+209>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a3f1 <+213>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a3f4 <+216>:\tshr    ecx,0xc\n   0x000000000008a3f7 <+219>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a3fc <+224>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a403 <+231>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a407 <+235>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a40b <+239>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a40e <+242>:\ttest   al,0x10\n   0x000000000008a410 <+244>:\tje     0x8a491 <theGameName+373>\n   0x000000000008a416 <+250>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a41a <+254>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a41d <+257>:\tshr    ecx,0xc\n   0x000000000008a420 <+260>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a425 <+265>:\tmov    r11,QWORD PTR [r15+0x1847]\n   0x000000000008a42c <+272>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a430 <+276>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a434 <+280>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a437 <+283>:\ttest   al,0x10\n   0x000000000008a439 <+285>:\tje     0x8a491 <theGameName+373>\n   0x000000000008a43f <+291>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a443 <+295>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a446 <+298>:\tshr    ecx,0xc\n   0x000000000008a449 <+301>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a44e <+306>:\tmov    r11,QWORD PTR [r15+0x184f]\n   0x000000000008a455 <+313>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a459 <+317>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a45d <+321>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a460 <+324>:\ttest   al,0x10\n   0x000000000008a462 <+326>:\tje     0x8a491 <theGameName+373>\n   0x000000000008a468 <+332>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a46c <+336>:\tmov    ecx,DWORD PTR [rax-0x1]\n   0x000000000008a46f <+339>:\tshr    ecx,0xc\n   0x000000000008a472 <+342>:\tmov    QWORD PTR [rsp+0x8],rax\n   0x000000000008a477 <+347>:\tmov    r11,QWORD PTR [r15+0x1857]\n   0x000000000008a47e <+354>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a482 <+358>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a486 <+362>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008a489 <+365>:\ttest   al,0x10\n   0x000000000008a48b <+367>:\tjne    0x8a4af <theGameName+403>\n   0x000000000008a491 <+373>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a495 <+377>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x000000000008a498 <+380>:\tshr    ecx,0xc\n   0x000000000008a49b <+383>:\tmov    QWORD PTR [rsp],rdi\n   0x000000000008a49f <+387>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008a4a3 <+391>:\tcall   QWORD PTR [rax+rcx*8+0x2e0]\n   0x000000000008a4aa <+398>:\tjmp    0x8a4c4 <theGameName+424>\n   0x000000000008a4af <+403>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4b3 <+407>:\tmov    esi,0x1\n   0x000000000008a4b8 <+412>:\tmov    r10,QWORD PTR [r15+0x97]\n   0x000000000008a4bf <+419>:\tcall   0x5dee4 <_StringBase.substring>\n   0x000000000008a4c4 <+424>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x000000000008a4c8 <+428>:\tmov    r11,QWORD PTR [r15+0x185f]\n   0x000000000008a4cf <+435>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a4d4 <+440>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a4d8 <+444>:\tcall   0x5e264 <_StringBase.+>\n   0x000000000008a4dd <+449>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a4e1 <+453>:\tmov    r11,QWORD PTR [r15+0x1867]\n   0x000000000008a4e8 <+460>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a4ed <+465>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008a4f1 <+469>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a4f5 <+473>:\tcall   0x5e264 <_StringBase.+>\n   0x000000000008a4fa <+478>:\tmov    QWORD PTR [rbp-0x28],rax\n   0x000000000008a4fe <+482>:\tmov    r11,QWORD PTR [r15+0x186f]\n   0x000000000008a505 <+489>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a50a <+494>:\tmov    r11,QWORD PTR [rbp-0x18]\n   0x000000000008a50e <+498>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a512 <+502>:\tcall   0x5e264 <_StringBase.+>\n   0x000000000008a517 <+507>:\tmov    QWORD PTR [rbp-0x30],rax\n   0x000000000008a51b <+511>:\tmov    r11,QWORD PTR [r15+0x1877]\n   0x000000000008a522 <+518>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a527 <+523>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a52b <+527>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a52f <+531>:\tcall   0x82168 <String.==>\n   0x000000000008a534 <+536>:\ttest   al,0x10\n   0x000000000008a536 <+538>:\tjne    0x8a54d <theGameName+561>\n   0x000000000008a53c <+544>:\tmov    rsi,QWORD PTR [rbp-0x18]\n   0x000000000008a540 <+548>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a544 <+552>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x000000000008a548 <+556>:\tjmp    0x8a5bd <theGameName+673>\n   0x000000000008a54d <+561>:\tmov    r11,QWORD PTR [r15+0x187f]\n   0x000000000008a554 <+568>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a559 <+573>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a55d <+577>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a561 <+581>:\tcall   0x82168 <String.==>\n   0x000000000008a566 <+586>:\ttest   al,0x10\n   0x000000000008a568 <+588>:\tjne    0x8a57f <theGameName+611>\n   0x000000000008a56e <+594>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a572 <+598>:\tmov    rdx,QWORD PTR [rbp-0x18]\n   0x000000000008a576 <+602>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x000000000008a57a <+606>:\tjmp    0x8a5bd <theGameName+673>\n   0x000000000008a57f <+611>:\tmov    r11,QWORD PTR [r15+0x1887]\n   0x000000000008a586 <+618>:\tmov    QWORD PTR [rsp+0x8],r11\n   0x000000000008a58b <+623>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a58f <+627>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a593 <+631>:\tcall   0x82168 <String.==>\n   0x000000000008a598 <+636>:\ttest   al,0x10\n   0x000000000008a59a <+638>:\tjne    0x8a5b1 <theGameName+661>\n   0x000000000008a5a0 <+644>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a5a4 <+648>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a5a8 <+652>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a5ac <+656>:\tjmp    0x8a5bd <theGameName+673>\n   0x000000000008a5b1 <+661>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a5b5 <+665>:\tmov    rdx,QWORD PTR [rbp-0x28]\n   0x000000000008a5b9 <+669>:\tmov    rcx,QWORD PTR [rbp-0x30]\n   0x000000000008a5bd <+673>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a5c1 <+677>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008a5c5 <+681>:\tmov    QWORD PTR [rbp-0x18],rdx\n   0x000000000008a5c9 <+685>:\tmov    QWORD PTR [rbp-0x20],rcx\n   0x000000000008a5cd <+689>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a5d1 <+693>:\tmov    r10d,0xa\n   0x000000000008a5d7 <+699>:\tcall   0x84d08 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a5dc <+704>:\tmov    rcx,rax\n   0x000000000008a5df <+707>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a5e3 <+711>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a5e7 <+715>:\tmov    r11,QWORD PTR [r15+0x188f]\n   0x000000000008a5ee <+722>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a5f2 <+726>:\tmov    QWORD PTR [rcx+0x27],rax\n   0x000000000008a5f6 <+730>:\tmov    r11,QWORD PTR [r15+0x1897]\n   0x000000000008a5fd <+737>:\tmov    QWORD PTR [rcx+0x2f],r11\n   0x000000000008a601 <+741>:\tmov    rdx,QWORD PTR [rbp-0x10]\n   0x000000000008a605 <+745>:\tmov    QWORD PTR [rcx+0x37],rdx\n   0x000000000008a609 <+749>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a60d <+753>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008a612 <+758>:\tmov    rdi,rax\n   0x000000000008a615 <+761>:\tcall   0x8a6cc <print>\n   0x000000000008a61a <+766>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a61e <+770>:\tmov    r10d,0x4\n   0x000000000008a624 <+776>:\tcall   0x84d08 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a629 <+781>:\tmov    r11,QWORD PTR [r15+0x189f]\n   0x000000000008a630 <+788>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a634 <+792>:\tmov    rcx,QWORD PTR [rbp-0x18]\n   0x000000000008a638 <+796>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a63c <+800>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a640 <+804>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008a645 <+809>:\tmov    rdi,rax\n   0x000000000008a648 <+812>:\tcall   0x8a6cc <print>\n   0x000000000008a64d <+817>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a651 <+821>:\tmov    r10d,0x4\n   0x000000000008a657 <+827>:\tcall   0x84d08 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a65c <+832>:\tmov    r11,QWORD PTR [r15+0x18a7]\n   0x000000000008a663 <+839>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a667 <+843>:\tmov    rcx,QWORD PTR [rbp-0x20]\n   0x000000000008a66b <+847>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a66f <+851>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a673 <+855>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008a678 <+860>:\tmov    rdi,rax\n   0x000000000008a67b <+863>:\tcall   0x8a6cc <print>\n   0x000000000008a680 <+868>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a684 <+872>:\tmov    r10d,0x4\n   0x000000000008a68a <+878>:\tcall   0x84d08 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a68f <+883>:\tmov    rcx,rax\n   0x000000000008a692 <+886>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a696 <+890>:\tmov    QWORD PTR [rcx+0x17],rax\n   0x000000000008a69a <+894>:\tmov    r11,QWORD PTR [r15+0x18af]\n   0x000000000008a6a1 <+901>:\tmov    QWORD PTR [rcx+0x1f],r11\n   0x000000000008a6a5 <+905>:\tmov    QWORD PTR [rsp],rcx\n   0x000000000008a6a9 <+909>:\tcall   0x5b448 <_StringBase._interpolate>\n   0x000000000008a6ae <+914>:\tmov    rdi,rax\n   0x000000000008a6b1 <+917>:\tcall   0x8a6cc <print>\n   0x000000000008a6b6 <+922>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a6ba <+926>:\tmov    rsp,rbp\n   0x000000000008a6bd <+929>:\tpop    rbp\n   0x000000000008a6be <+930>:\tret\n   0x000000000008a6bf <+931>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a6c6 <+938>:\tjmp    0x8a32e <theGameName+18>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  List<String> listanombres = ['Gary', 'Earl', 'Billy', 'Felix', 'Mary', 'Steve'];\n  for (String nombre in listanombres) {\n    theGameName(nombre);\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a20c <+0>:\tpush   rbp\n   0x000000000008a20d <+1>:\tmov    rbp,rsp\n   0x000000000008a210 <+4>:\tsub    rsp,0x18\n   0x000000000008a214 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a218 <+12>:\tjbe    0x8a301 <main+245>\n   0x000000000008a21e <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a222 <+22>:\tmov    r10d,0xc\n   0x000000000008a228 <+28>:\tcall   0x84d08 <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a22d <+33>:\tmov    rbx,rax\n   0x000000000008a230 <+36>:\tmov    QWORD PTR [rbp-0x18],rbx\n   0x000000000008a234 <+40>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a23b <+47>:\tmov    QWORD PTR [rbx+0x17],r11\n   0x000000000008a23f <+51>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a246 <+58>:\tmov    QWORD PTR [rbx+0x1f],r11\n   0x000000000008a24a <+62>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a251 <+69>:\tmov    QWORD PTR [rbx+0x27],r11\n   0x000000000008a255 <+73>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a25c <+80>:\tmov    QWORD PTR [rbx+0x2f],r11\n   0x000000000008a260 <+84>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a267 <+91>:\tmov    QWORD PTR [rbx+0x37],r11\n   0x000000000008a26b <+95>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a272 <+102>:\tmov    QWORD PTR [rbx+0x3f],r11\n   0x000000000008a276 <+106>:\txor    eax,eax\n   0x000000000008a278 <+108>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a27c <+112>:\tjbe    0x8a30d <main+257>\n   0x000000000008a282 <+118>:\tcmp    rax,0x6\n   0x000000000008a286 <+122>:\tjge    0x8a2f8 <main+236>\n   0x000000000008a28c <+128>:\tmov    rsi,QWORD PTR [rbx+rax*8+0x17]\n   0x000000000008a291 <+133>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008a295 <+137>:\tmov    rdi,rax\n   0x000000000008a298 <+140>:\tadd    rdi,0x1\n   0x000000000008a29c <+144>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a2a0 <+148>:\tcmp    rsi,QWORD PTR [r14+0x70]\n   0x000000000008a2a4 <+152>:\tjne    0x8a2e5 <main+217>\n   0x000000000008a2aa <+158>:\tmov    rax,rsi\n   0x000000000008a2ad <+161>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a2b1 <+165>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a2b5 <+169>:\ttest   al,0x1\n   0x000000000008a2b7 <+171>:\tmov    esi,0x3c\n   0x000000000008a2bc <+176>:\tje     0x8a2c4 <main+184>\n   0x000000000008a2be <+178>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a2c1 <+181>:\tshr    esi,0xc\n   0x000000000008a2c4 <+184>:\tsub    rsi,0x5e\n   0x000000000008a2c8 <+188>:\tcmp    rsi,0x1\n   0x000000000008a2cc <+192>:\tjbe    0x8a2e5 <main+217>\n   0x000000000008a2d2 <+198>:\tmov    rbx,QWORD PTR [r15+0x107]\n   0x000000000008a2d9 <+205>:\tmov    r9,QWORD PTR [r15+0x1827]\n   0x000000000008a2e0 <+212>:\tcall   0x8afe8 <assert type is String>\n   0x000000000008a2e5 <+217>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a2e9 <+221>:\tcall   0x8a31c <theGameName>\n   0x000000000008a2ee <+226>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a2f2 <+230>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008a2f6 <+234>:\tjmp    0x8a278 <main+108>\n   0x000000000008a2f8 <+236>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a2fc <+240>:\tmov    rsp,rbp\n   0x000000000008a2ff <+243>:\tpop    rbp\n   0x000000000008a300 <+244>:\tret\n   0x000000000008a301 <+245>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a308 <+252>:\tjmp    0x8a21e <main+18>\n   0x000000000008a30d <+257>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a314 <+264>:\tjmp    0x8a282 <main+118>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "towers-of-hanoi-1.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  moveit(from,to) {\n    print(\"move ${from} ---> ${to}\");\n  }\n\n  hanoi(height,toPole,fromPole,usePole) {\n    if (height>0) {\n      hanoi(height-1,usePole,fromPole,toPole);\n      moveit(fromPole,toPole);\n      hanoi(height-1,toPole,usePole,fromPole);\n    }\n  }\n\n  hanoi(3,3,1,2);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a21c <+0>:\tpush   rbp\n   0x000000000008a21d <+1>:\tmov    rbp,rsp\n   0x000000000008a220 <+4>:\tsub    rsp,0x38\n   0x000000000008a224 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a228 <+12>:\tjbe    0x8a392 <main+374>\n   0x000000000008a22e <+18>:\tmov    r10d,0x2\n   0x000000000008a234 <+24>:\tcall   0x83e24 <stub _iso_stub_AllocateContextStub>\n   0x000000000008a239 <+29>:\tmov    rbx,QWORD PTR [r15+0x17f7]\n   0x000000000008a240 <+36>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a244 <+40>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a248 <+44>:\tcall   0x84150 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a24d <+49>:\tmov    rcx,rax\n   0x000000000008a250 <+52>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a254 <+56>:\tmov    QWORD PTR [rax+0x17],rcx\n   0x000000000008a258 <+60>:\tmov    rdx,rax\n   0x000000000008a25b <+63>:\tmov    rbx,QWORD PTR [r15+0x17ff]\n   0x000000000008a262 <+70>:\tcall   0x84150 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a267 <+75>:\tmov    rcx,rax\n   0x000000000008a26a <+78>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a26e <+82>:\tmov    QWORD PTR [rbp-0x10],rcx\n   0x000000000008a272 <+86>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a276 <+90>:\tmov    QWORD PTR [rsp+0x20],rcx\n   0x000000000008a27b <+95>:\tmov    QWORD PTR [rsp+0x18],0x2\n   0x000000000008a284 <+104>:\tmov    QWORD PTR [rsp+0x10],0x6\n   0x000000000008a28d <+113>:\tmov    QWORD PTR [rsp+0x8],0x2\n   0x000000000008a296 <+122>:\tmov    QWORD PTR [rsp],0x4\n   0x000000000008a29e <+130>:\tmov    rax,rcx\n   0x000000000008a2a1 <+133>:\tmov    r10,QWORD PTR [r15+0x5c7]\n   0x000000000008a2a8 <+140>:\tmov    rcx,QWORD PTR [rax+0x37]\n   0x000000000008a2ac <+144>:\tcall   rcx\n   0x000000000008a2ae <+146>:\tmov    rdi,QWORD PTR [r15+0x1807]\n   0x000000000008a2b5 <+153>:\tcall   0x8a3d8 <printToConsole>\n   0x000000000008a2ba <+158>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a2be <+162>:\tmov    QWORD PTR [rsp+0x20],r11\n   0x000000000008a2c3 <+167>:\tmov    QWORD PTR [rsp+0x18],0x2\n   0x000000000008a2cc <+176>:\tmov    QWORD PTR [rsp+0x10],0x4\n   0x000000000008a2d5 <+185>:\tmov    QWORD PTR [rsp+0x8],0x6\n   0x000000000008a2de <+194>:\tmov    QWORD PTR [rsp],0x2\n   0x000000000008a2e6 <+202>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a2ea <+206>:\tmov    r10,QWORD PTR [r15+0x5c7]\n   0x000000000008a2f1 <+213>:\tmov    rcx,QWORD PTR [rax+0x37]\n   0x000000000008a2f5 <+217>:\tcall   rcx\n   0x000000000008a2f7 <+219>:\tmov    rdi,QWORD PTR [r15+0x180f]\n   0x000000000008a2fe <+226>:\tcall   0x8a3d8 <printToConsole>\n   0x000000000008a303 <+231>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a307 <+235>:\tmov    QWORD PTR [rsp+0x20],r11\n   0x000000000008a30c <+240>:\tmov    QWORD PTR [rsp+0x18],0x2\n   0x000000000008a315 <+249>:\tmov    QWORD PTR [rsp+0x10],0x2\n   0x000000000008a31e <+258>:\tmov    QWORD PTR [rsp+0x8],0x4\n   0x000000000008a327 <+267>:\tmov    QWORD PTR [rsp],0x6\n   0x000000000008a32f <+275>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a333 <+279>:\tmov    r10,QWORD PTR [r15+0x5c7]\n   0x000000000008a33a <+286>:\tmov    rcx,QWORD PTR [rax+0x37]\n   0x000000000008a33e <+290>:\tcall   rcx\n   0x000000000008a340 <+292>:\tmov    rdi,QWORD PTR [r15+0x1817]\n   0x000000000008a347 <+299>:\tcall   0x8a3d8 <printToConsole>\n   0x000000000008a34c <+304>:\tmov    r11,QWORD PTR [rbp-0x10]\n   0x000000000008a350 <+308>:\tmov    QWORD PTR [rsp+0x20],r11\n   0x000000000008a355 <+313>:\tmov    QWORD PTR [rsp+0x18],0x2\n   0x000000000008a35e <+322>:\tmov    QWORD PTR [rsp+0x10],0x6\n   0x000000000008a367 <+331>:\tmov    QWORD PTR [rsp+0x8],0x2\n   0x000000000008a370 <+340>:\tmov    QWORD PTR [rsp],0x4\n   0x000000000008a378 <+348>:\tmov    rax,QWORD PTR [rbp-0x10]\n   0x000000000008a37c <+352>:\tmov    r10,QWORD PTR [r15+0x5c7]\n   0x000000000008a383 <+359>:\tmov    rcx,QWORD PTR [rax+0x37]\n   0x000000000008a387 <+363>:\tcall   rcx\n   0x000000000008a389 <+365>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a38d <+369>:\tmov    rsp,rbp\n   0x000000000008a390 <+372>:\tpop    rbp\n   0x000000000008a391 <+373>:\tret\n   0x000000000008a392 <+374>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a399 <+381>:\tjmp    0x8a22e <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "towers-of-hanoi-2.dart",
  "functions": [
    {
      "name": "main",
      "source": "main() {\n  String say(String from, String to) => \"$from ---> $to\";\n\n  hanoi(int height, int toPole, int fromPole, int usePole) {\n    if (height > 0) {\n      hanoi(height - 1, usePole, fromPole, toPole);\n      print(say(fromPole.toString(), toPole.toString()));\n      hanoi(height - 1, toPole, usePole, fromPole);\n    }\n  }\n\n  hanoi(3, 3, 1, 2);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x30\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1eb <main+151>\n   0x000000000008a166 <+18>:\tmov    r10d,0x2\n   0x000000000008a16c <+24>:\tcall   0x83d5c <stub _iso_stub_AllocateContextStub>\n   0x000000000008a171 <+29>:\tmov    rbx,QWORD PTR [r15+0x17f7]\n   0x000000000008a178 <+36>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a17c <+40>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a180 <+44>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a185 <+49>:\tmov    rcx,rax\n   0x000000000008a188 <+52>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a18c <+56>:\tmov    QWORD PTR [rax+0x17],rcx\n   0x000000000008a190 <+60>:\tmov    rdx,rax\n   0x000000000008a193 <+63>:\tmov    rbx,QWORD PTR [r15+0x17ff]\n   0x000000000008a19a <+70>:\tcall   0x84088 <stub _iso_stub_AllocateClosureStub>\n   0x000000000008a19f <+75>:\tmov    rcx,rax\n   0x000000000008a1a2 <+78>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a1a6 <+82>:\tmov    QWORD PTR [rax+0x1f],rcx\n   0x000000000008a1aa <+86>:\tmov    QWORD PTR [rsp+0x20],rcx\n   0x000000000008a1af <+91>:\tmov    QWORD PTR [rsp+0x18],0x6\n   0x000000000008a1b8 <+100>:\tmov    QWORD PTR [rsp+0x10],0x6\n   0x000000000008a1c1 <+109>:\tmov    QWORD PTR [rsp+0x8],0x2\n   0x000000000008a1ca <+118>:\tmov    QWORD PTR [rsp],0x4\n   0x000000000008a1d2 <+126>:\tmov    rax,rcx\n   0x000000000008a1d5 <+129>:\tmov    r10,QWORD PTR [r15+0x5c7]\n   0x000000000008a1dc <+136>:\tmov    rcx,QWORD PTR [rax+0x37]\n   0x000000000008a1e0 <+140>:\tcall   rcx\n   0x000000000008a1e2 <+142>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1e6 <+146>:\tmov    rsp,rbp\n   0x000000000008a1e9 <+149>:\tpop    rbp\n   0x000000000008a1ea <+150>:\tret\n   0x000000000008a1eb <+151>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1f2 <+158>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "validate-international-securities-identification-number.dart",
  "functions": [
    {
      "name": "checkISIN",
      "source": "bool checkISIN(String isin) {\n  int j = 0, v = 0;\n  List<int> s = List.filled(24, 0);\n\n  for (int i = 0; i < 12; i++) {\n    int k = isin.codeUnitAt(i);\n    if (k >= '0'.codeUnitAt(0) && k <= '9'.codeUnitAt(0)) {\n      if (i < 2) return false;\n      s[j++] = k - '0'.codeUnitAt(0);\n    } else if (k >= 'A'.codeUnitAt(0) && k <= 'Z'.codeUnitAt(0)) {\n      if (i == 11) return false;\n      k -= 'A'.codeUnitAt(0) - 10;\n      s[j++] = k ~/ 10;\n      s[j++] = k % 10;\n    } else {\n      return false;\n    }\n  }\n\n  if (isin.length > 12) return false;\n\n  for (int i = j - 2; i >= 0; i -= 2) {\n    int k = 2 * s[i];\n    v += k > 9 ? k - 9 : k;\n  }\n\n  for (int i = j - 1; i >= 0; i -= 2) {\n    v += s[i];\n  }\n\n  return v % 10 == 0;\n}",
      "assembly": "Dump of assembler code for function checkISIN:\n   0x000000000008a318 <+0>:\tpush   rbp\n   0x000000000008a319 <+1>:\tmov    rbp,rsp\n   0x000000000008a31c <+4>:\tsub    rsp,0x10\n   0x000000000008a320 <+8>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a324 <+12>:\tmov    rbx,QWORD PTR [r15+0x237]\n   0x000000000008a32b <+19>:\tmov    r10d,0x30\n   0x000000000008a331 <+25>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a336 <+30>:\tmov    rcx,rax\n   0x000000000008a339 <+33>:\txor    esi,esi\n   0x000000000008a33b <+35>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a33f <+39>:\tjbe    0x8a66b <checkISIN+851>\n   0x000000000008a345 <+45>:\tcmp    rsi,0x18\n   0x000000000008a349 <+49>:\tjge    0x8a35e <checkISIN+70>\n   0x000000000008a34f <+55>:\tmov    QWORD PTR [rcx+rsi*8+0x17],0x0\n   0x000000000008a358 <+64>:\tadd    rsi,0x1\n   0x000000000008a35c <+68>:\tjmp    0x8a33b <checkISIN+35>\n   0x000000000008a35e <+70>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a362 <+74>:\tmov    rdi,QWORD PTR [rsi+0x7]\n   0x000000000008a366 <+78>:\tmov    QWORD PTR [rbp-0x10],rdi\n   0x000000000008a36a <+82>:\tmov    r8,rdi\n   0x000000000008a36d <+85>:\tsar    r8,1\n   0x000000000008a370 <+88>:\tmov    r9d,DWORD PTR [rsi-0x1]\n   0x000000000008a374 <+92>:\tshr    r9d,0xc\n   0x000000000008a378 <+96>:\tadd    r9,r9\n   0x000000000008a37b <+99>:\txor    r13d,r13d\n   0x000000000008a37e <+102>:\txor    r12d,r12d\n   0x000000000008a381 <+105>:\tmov    r10d,0xa\n   0x000000000008a387 <+111>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a38b <+115>:\tjbe    0x8a677 <checkISIN+863>\n   0x000000000008a391 <+121>:\tcmp    r12,0xc\n   0x000000000008a395 <+125>:\tjge    0x8a54c <checkISIN+564>\n   0x000000000008a39b <+131>:\tmov    rax,r8\n   0x000000000008a39e <+134>:\tmov    rbx,r12\n   0x000000000008a3a1 <+137>:\tcmp    rbx,rax\n   0x000000000008a3a4 <+140>:\tjae    0x8a683 <checkISIN+875>\n   0x000000000008a3aa <+146>:\tcmp    r9,0xbc\n   0x000000000008a3b1 <+153>:\tjne    0x8a3c2 <checkISIN+170>\n   0x000000000008a3b7 <+159>:\tmovzx  rax,BYTE PTR [rsi+r12*1+0xf]\n   0x000000000008a3bd <+165>:\tjmp    0x8a3c8 <checkISIN+176>\n   0x000000000008a3c2 <+170>:\tmovzx  rax,WORD PTR [rsi+r12*2+0xf]\n   0x000000000008a3c8 <+176>:\tcmp    rax,0x30\n   0x000000000008a3cc <+180>:\tjl     0x8a424 <checkISIN+268>\n   0x000000000008a3d2 <+186>:\tcmp    rax,0x39\n   0x000000000008a3d6 <+190>:\tjg     0x8a424 <checkISIN+268>\n   0x000000000008a3dc <+196>:\tcmp    r12,0x2\n   0x000000000008a3e0 <+200>:\tjl     0x8a418 <checkISIN+256>\n   0x000000000008a3e6 <+206>:\tmov    rdx,r13\n   0x000000000008a3e9 <+209>:\tadd    rdx,0x1\n   0x000000000008a3ed <+213>:\tsub    rax,0x30\n   0x000000000008a3f1 <+217>:\tmov    rbx,r13\n   0x000000000008a3f4 <+220>:\tmov    rdi,rax\n   0x000000000008a3f7 <+223>:\tmov    eax,0x18\n   0x000000000008a3fc <+228>:\tcmp    rbx,rax\n   0x000000000008a3ff <+231>:\tjae    0x8a688 <checkISIN+880>\n   0x000000000008a405 <+237>:\tmov    rax,rdi\n   0x000000000008a408 <+240>:\tadd    rax,rax\n   0x000000000008a40b <+243>:\tmov    QWORD PTR [rcx+r13*8+0x17],rax\n   0x000000000008a410 <+248>:\tmov    r13,rdx\n   0x000000000008a413 <+251>:\tjmp    0x8a527 <checkISIN+527>\n   0x000000000008a418 <+256>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008a41f <+263>:\tmov    rsp,rbp\n   0x000000000008a422 <+266>:\tpop    rbp\n   0x000000000008a423 <+267>:\tret\n   0x000000000008a424 <+268>:\tcmp    rax,0x41\n   0x000000000008a428 <+272>:\tjl     0x8a540 <checkISIN+552>\n   0x000000000008a42e <+278>:\tcmp    rax,0x5a\n   0x000000000008a432 <+282>:\tjg     0x8a540 <checkISIN+552>\n   0x000000000008a438 <+288>:\tcmp    r12,0xb\n   0x000000000008a43c <+292>:\tje     0x8a534 <checkISIN+540>\n   0x000000000008a442 <+298>:\tmov    rdi,rax\n   0x000000000008a445 <+301>:\tsub    rdi,0x37\n   0x000000000008a449 <+305>:\tmov    rbx,r13\n   0x000000000008a44c <+308>:\tadd    rbx,0x1\n   0x000000000008a450 <+312>:\tmov    rax,rdi\n   0x000000000008a453 <+315>:\tmov    r11,rax\n   0x000000000008a456 <+318>:\tmov    rax,QWORD PTR [r15+0x1847]\n   0x000000000008a45d <+325>:\timul   r11\n   0x000000000008a460 <+328>:\tsar    rdx,0x2\n   0x000000000008a464 <+332>:\tmov    rax,rdx\n   0x000000000008a467 <+335>:\tshr    rdx,0x3f\n   0x000000000008a46b <+339>:\tadd    rdx,rax\n   0x000000000008a46e <+342>:\tmov    rax,rdx\n   0x000000000008a471 <+345>:\tmov    rdx,rbx\n   0x000000000008a474 <+348>:\tmov    rbx,r13\n   0x000000000008a477 <+351>:\tmov    rsi,rax\n   0x000000000008a47a <+354>:\tmov    eax,0x18\n   0x000000000008a47f <+359>:\tcmp    rbx,rax\n   0x000000000008a482 <+362>:\tjae    0x8a68d <checkISIN+885>\n   0x000000000008a488 <+368>:\tmov    rax,rsi\n   0x000000000008a48b <+371>:\tadd    rax,rax\n   0x000000000008a48e <+374>:\tjno    0x8a49d <checkISIN+389>\n   0x000000000008a494 <+380>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a499 <+385>:\tmov    QWORD PTR [rax+0x7],rsi\n   0x000000000008a49d <+389>:\tmov    rsi,rdx\n   0x000000000008a4a0 <+392>:\tmov    rdx,rcx\n   0x000000000008a4a3 <+395>:\tmov    rbx,r13\n   0x000000000008a4a6 <+398>:\tlea    r13,[rdx+rbx*8+0x17]\n   0x000000000008a4ab <+403>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a4af <+407>:\ttest   al,0x1\n   0x000000000008a4b1 <+409>:\tje     0x8a4ca <checkISIN+434>\n   0x000000000008a4b3 <+411>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a4b7 <+415>:\tshr    r11d,0x2\n   0x000000000008a4bb <+419>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a4bf <+423>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a4c3 <+427>:\tje     0x8a4ca <checkISIN+434>\n   0x000000000008a4c5 <+429>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a4ca <+434>:\tmov    r13,rsi\n   0x000000000008a4cd <+437>:\tadd    r13,0x1\n   0x000000000008a4d1 <+441>:\tmov    rax,rdi\n   0x000000000008a4d4 <+444>:\tmov    r11,rax\n   0x000000000008a4d7 <+447>:\tmov    rax,QWORD PTR [r15+0x1847]\n   0x000000000008a4de <+454>:\timul   r11\n   0x000000000008a4e1 <+457>:\tsar    rdx,0x2\n   0x000000000008a4e5 <+461>:\tmov    rax,rdx\n   0x000000000008a4e8 <+464>:\tshr    rdx,0x3f\n   0x000000000008a4ec <+468>:\tadd    rdx,rax\n   0x000000000008a4ef <+471>:\tmov    rax,r11\n   0x000000000008a4f2 <+474>:\tmov    r11d,0xa\n   0x000000000008a4f8 <+480>:\timul   rdx,r11\n   0x000000000008a4fc <+484>:\tsub    rax,rdx\n   0x000000000008a4ff <+487>:\tjge    0x8a508 <checkISIN+496>\n   0x000000000008a505 <+493>:\tadd    rax,r11\n   0x000000000008a508 <+496>:\tmov    rdx,rax\n   0x000000000008a50b <+499>:\tmov    rbx,rsi\n   0x000000000008a50e <+502>:\tmov    eax,0x18\n   0x000000000008a513 <+507>:\tcmp    rbx,rax\n   0x000000000008a516 <+510>:\tjae    0x8a692 <checkISIN+890>\n   0x000000000008a51c <+516>:\tmov    rdi,rdx\n   0x000000000008a51f <+519>:\tadd    rdi,rdi\n   0x000000000008a522 <+522>:\tmov    QWORD PTR [rcx+rsi*8+0x17],rdi\n   0x000000000008a527 <+527>:\tadd    r12,0x1\n   0x000000000008a52b <+531>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a52f <+535>:\tjmp    0x8a387 <checkISIN+111>\n   0x000000000008a534 <+540>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008a53b <+547>:\tmov    rsp,rbp\n   0x000000000008a53e <+550>:\tpop    rbp\n   0x000000000008a53f <+551>:\tret\n   0x000000000008a540 <+552>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008a547 <+559>:\tmov    rsp,rbp\n   0x000000000008a54a <+562>:\tpop    rbp\n   0x000000000008a54b <+563>:\tret\n   0x000000000008a54c <+564>:\tmov    rbx,r13\n   0x000000000008a54f <+567>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a553 <+571>:\tsar    rsi,1\n   0x000000000008a556 <+574>:\tcmp    rsi,0xc\n   0x000000000008a55a <+578>:\tjle    0x8a56c <checkISIN+596>\n   0x000000000008a560 <+584>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008a567 <+591>:\tmov    rsp,rbp\n   0x000000000008a56a <+594>:\tpop    rbp\n   0x000000000008a56b <+595>:\tret\n   0x000000000008a56c <+596>:\tmov    rsi,rbx\n   0x000000000008a56f <+599>:\tsub    rsi,0x2\n   0x000000000008a573 <+603>:\tmov    rdx,rsi\n   0x000000000008a576 <+606>:\txor    esi,esi\n   0x000000000008a578 <+608>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a57c <+612>:\tjbe    0x8a697 <checkISIN+895>\n   0x000000000008a582 <+618>:\tcmp    rdx,0x0\n   0x000000000008a586 <+622>:\tjl     0x8a5d2 <checkISIN+698>\n   0x000000000008a58c <+628>:\tmov    rdi,rbx\n   0x000000000008a58f <+631>:\tmov    rbx,rdx\n   0x000000000008a592 <+634>:\tmov    eax,0x18\n   0x000000000008a597 <+639>:\tcmp    rbx,rax\n   0x000000000008a59a <+642>:\tjae    0x8a6a3 <checkISIN+907>\n   0x000000000008a5a0 <+648>:\tmov    r8,QWORD PTR [rcx+rdx*8+0x17]\n   0x000000000008a5a5 <+653>:\tsar    r8,1\n   0x000000000008a5a8 <+656>:\tjae    0x8a5af <checkISIN+663>\n   0x000000000008a5aa <+658>:\tmov    r8,QWORD PTR [r8+r8*1+0x8]\n   0x000000000008a5af <+663>:\tshl    r8,1\n   0x000000000008a5b2 <+666>:\tcmp    r8,0x9\n   0x000000000008a5b6 <+670>:\tjle    0x8a5c6 <checkISIN+686>\n   0x000000000008a5bc <+676>:\tmov    r9,r8\n   0x000000000008a5bf <+679>:\tsub    r9,0x9\n   0x000000000008a5c3 <+683>:\tmov    r8,r9\n   0x000000000008a5c6 <+686>:\tadd    rsi,r8\n   0x000000000008a5c9 <+689>:\tsub    rdx,0x2\n   0x000000000008a5cd <+693>:\tmov    rbx,rdi\n   0x000000000008a5d0 <+696>:\tjmp    0x8a578 <checkISIN+608>\n   0x000000000008a5d2 <+698>:\tmov    rdi,rbx\n   0x000000000008a5d5 <+701>:\tsub    rdi,0x1\n   0x000000000008a5d9 <+705>:\tmov    rdx,rdi\n   0x000000000008a5dc <+708>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a5e0 <+712>:\tjbe    0x8a6a8 <checkISIN+912>\n   0x000000000008a5e6 <+718>:\tcmp    rdx,0x0\n   0x000000000008a5ea <+722>:\tjl     0x8a619 <checkISIN+769>\n   0x000000000008a5f0 <+728>:\tmov    rbx,rdx\n   0x000000000008a5f3 <+731>:\tmov    eax,0x18\n   0x000000000008a5f8 <+736>:\tcmp    rbx,rax\n   0x000000000008a5fb <+739>:\tjae    0x8a6b4 <checkISIN+924>\n   0x000000000008a601 <+745>:\tmov    rbx,QWORD PTR [rcx+rdx*8+0x17]\n   0x000000000008a606 <+750>:\tsar    rbx,1\n   0x000000000008a609 <+753>:\tjae    0x8a610 <checkISIN+760>\n   0x000000000008a60b <+755>:\tmov    rbx,QWORD PTR [rbx+rbx*1+0x8]\n   0x000000000008a610 <+760>:\tadd    rsi,rbx\n   0x000000000008a613 <+763>:\tsub    rdx,0x2\n   0x000000000008a617 <+767>:\tjmp    0x8a5dc <checkISIN+708>\n   0x000000000008a619 <+769>:\tmov    rax,rsi\n   0x000000000008a61c <+772>:\tmov    r11,rax\n   0x000000000008a61f <+775>:\tmov    rax,QWORD PTR [r15+0x1847]\n   0x000000000008a626 <+782>:\timul   r11\n   0x000000000008a629 <+785>:\tsar    rdx,0x2\n   0x000000000008a62d <+789>:\tmov    rax,rdx\n   0x000000000008a630 <+792>:\tshr    rdx,0x3f\n   0x000000000008a634 <+796>:\tadd    rdx,rax\n   0x000000000008a637 <+799>:\tmov    rax,r11\n   0x000000000008a63a <+802>:\tmov    r11d,0xa\n   0x000000000008a640 <+808>:\timul   rdx,r11\n   0x000000000008a644 <+812>:\tsub    rax,rdx\n   0x000000000008a647 <+815>:\tjge    0x8a650 <checkISIN+824>\n   0x000000000008a64d <+821>:\tadd    rax,r11\n   0x000000000008a650 <+824>:\tmov    rdx,rax\n   0x000000000008a653 <+827>:\tcmp    rdx,0x0\n   0x000000000008a657 <+831>:\tje     0x8a662 <checkISIN+842>\n   0x000000000008a659 <+833>:\tmov    rax,QWORD PTR [r14+0x80]\n   0x000000000008a660 <+840>:\tjmp    0x8a666 <checkISIN+846>\n   0x000000000008a662 <+842>:\tmov    rax,QWORD PTR [r14+0x78]\n   0x000000000008a666 <+846>:\tmov    rsp,rbp\n   0x000000000008a669 <+849>:\tpop    rbp\n   0x000000000008a66a <+850>:\tret\n   0x000000000008a66b <+851>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a672 <+858>:\tjmp    0x8a345 <checkISIN+45>\n   0x000000000008a677 <+863>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a67e <+870>:\tjmp    0x8a391 <checkISIN+121>\n   0x000000000008a683 <+875>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a688 <+880>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a68d <+885>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a692 <+890>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a697 <+895>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a69e <+902>:\tjmp    0x8a582 <checkISIN+618>\n   0x000000000008a6a3 <+907>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\n   0x000000000008a6a8 <+912>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a6af <+919>:\tjmp    0x8a5e6 <checkISIN+718>\n   0x000000000008a6b4 <+924>:\tcall   0x851b0 <stub _iso_stub_RangeErrorSharedWithoutFPURegsStub>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  List<String> test = [\n    \"US0378331005\",\n    \"US0373831005\",\n    \"U50378331005\",\n    \"US03378331005\",\n    \"AU0000XVGZA3\",\n    \"AU0000VXGZA3\",\n    \"FR0000988040\"\n  ];\n\n  for (String isin in test) {\n    print('$isin - ${checkISIN(isin)}');\n  }\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x28\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a299 <main+325>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0xe\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    rbx,rax\n   0x000000000008a178 <+36>:\tmov    QWORD PTR [rbp-0x18],rbx\n   0x000000000008a17c <+40>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a183 <+47>:\tmov    QWORD PTR [rbx+0x17],r11\n   0x000000000008a187 <+51>:\tmov    r11,QWORD PTR [r15+0x17ff]\n   0x000000000008a18e <+58>:\tmov    QWORD PTR [rbx+0x1f],r11\n   0x000000000008a192 <+62>:\tmov    r11,QWORD PTR [r15+0x1807]\n   0x000000000008a199 <+69>:\tmov    QWORD PTR [rbx+0x27],r11\n   0x000000000008a19d <+73>:\tmov    r11,QWORD PTR [r15+0x180f]\n   0x000000000008a1a4 <+80>:\tmov    QWORD PTR [rbx+0x2f],r11\n   0x000000000008a1a8 <+84>:\tmov    r11,QWORD PTR [r15+0x1817]\n   0x000000000008a1af <+91>:\tmov    QWORD PTR [rbx+0x37],r11\n   0x000000000008a1b3 <+95>:\tmov    r11,QWORD PTR [r15+0x181f]\n   0x000000000008a1ba <+102>:\tmov    QWORD PTR [rbx+0x3f],r11\n   0x000000000008a1be <+106>:\tmov    r11,QWORD PTR [r15+0x1827]\n   0x000000000008a1c5 <+113>:\tmov    QWORD PTR [rbx+0x47],r11\n   0x000000000008a1c9 <+117>:\txor    eax,eax\n   0x000000000008a1cb <+119>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a1cf <+123>:\tjbe    0x8a2a5 <main+337>\n   0x000000000008a1d5 <+129>:\tcmp    rax,0x7\n   0x000000000008a1d9 <+133>:\tjge    0x8a290 <main+316>\n   0x000000000008a1df <+139>:\tmov    rsi,QWORD PTR [rbx+rax*8+0x17]\n   0x000000000008a1e4 <+144>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x000000000008a1e8 <+148>:\tmov    rdi,rax\n   0x000000000008a1eb <+151>:\tadd    rdi,0x1\n   0x000000000008a1ef <+155>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x000000000008a1f3 <+159>:\tcmp    rsi,QWORD PTR [r14+0x70]\n   0x000000000008a1f7 <+163>:\tjne    0x8a238 <main+228>\n   0x000000000008a1fd <+169>:\tmov    rax,rsi\n   0x000000000008a200 <+172>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008a204 <+176>:\tmov    rcx,QWORD PTR [r14+0x70]\n   0x000000000008a208 <+180>:\ttest   al,0x1\n   0x000000000008a20a <+182>:\tmov    esi,0x3c\n   0x000000000008a20f <+187>:\tje     0x8a217 <main+195>\n   0x000000000008a211 <+189>:\tmov    esi,DWORD PTR [rax-0x1]\n   0x000000000008a214 <+192>:\tshr    esi,0xc\n   0x000000000008a217 <+195>:\tsub    rsi,0x5e\n   0x000000000008a21b <+199>:\tcmp    rsi,0x1\n   0x000000000008a21f <+203>:\tjbe    0x8a238 <main+228>\n   0x000000000008a225 <+209>:\tmov    rbx,QWORD PTR [r15+0x107]\n   0x000000000008a22c <+216>:\tmov    r9,QWORD PTR [r15+0x182f]\n   0x000000000008a233 <+223>:\tcall   0x8af38 <assert type is String>\n   0x000000000008a238 <+228>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a23c <+232>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a240 <+236>:\tmov    r10d,0x6\n   0x000000000008a246 <+242>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a24b <+247>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a24f <+251>:\tmov    QWORD PTR [rbp-0x20],rax\n   0x000000000008a253 <+255>:\tmov    QWORD PTR [rax+0x17],rdi\n   0x000000000008a257 <+259>:\tmov    r11,QWORD PTR [r15+0x183f]\n   0x000000000008a25e <+266>:\tmov    QWORD PTR [rax+0x1f],r11\n   0x000000000008a262 <+270>:\tcall   0x8a318 <checkISIN>\n   0x000000000008a267 <+275>:\tmov    rcx,rax\n   0x000000000008a26a <+278>:\tmov    rax,QWORD PTR [rbp-0x20]\n   0x000000000008a26e <+282>:\tmov    QWORD PTR [rax+0x27],rcx\n   0x000000000008a272 <+286>:\tmov    QWORD PTR [rsp],rax\n   0x000000000008a276 <+290>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a27b <+295>:\tmov    rdi,rax\n   0x000000000008a27e <+298>:\tcall   0x8a2b4 <printToConsole>\n   0x000000000008a283 <+303>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x000000000008a287 <+307>:\tmov    rbx,QWORD PTR [rbp-0x18]\n   0x000000000008a28b <+311>:\tjmp    0x8a1cb <main+119>\n   0x000000000008a290 <+316>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a294 <+320>:\tmov    rsp,rbp\n   0x000000000008a297 <+323>:\tpop    rbp\n   0x000000000008a298 <+324>:\tret\n   0x000000000008a299 <+325>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2a0 <+332>:\tjmp    0x8a166 <main+18>\n   0x000000000008a2a5 <+337>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a2ac <+344>:\tjmp    0x8a1d5 <main+129>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "walk-a-directory-recursively.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main(List<String> args) {\n  var dir = Directory(args[0]);\n  dir.list(recursive: true, followLinks: false).forEach((final cur) {\n    if (cur is Directory) {\n      print(\"Directory: ${cur.path}\");\n    }\n\n    if (cur is File) {\n      print(\"File: ${cur.path}\");\n    }\n  });\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008e990 <+0>:\tpush   rbp\n   0x000000000008e991 <+1>:\tmov    rbp,rsp\n   0x000000000008e994 <+4>:\tsub    rsp,0x20\n   0x000000000008e998 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008e99c <+12>:\tjbe    0x8ea55 <main+197>\n   0x000000000008e9a2 <+18>:\tmov    ecx,DWORD PTR [rdi-0x1]\n   0x000000000008e9a5 <+21>:\tshr    ecx,0xc\n   0x000000000008e9a8 <+24>:\tmov    QWORD PTR [rsp+0x8],rdi\n   0x000000000008e9ad <+29>:\tmov    QWORD PTR [rsp],0x0\n   0x000000000008e9b5 <+37>:\tmov    rax,QWORD PTR [r14+0x58]\n   0x000000000008e9b9 <+41>:\tcall   QWORD PTR [rax+rcx*8]\n   0x000000000008e9bc <+44>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008e9c0 <+48>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008e9c4 <+52>:\tmov    rax,QWORD PTR [rax+0x6c8]\n   0x000000000008e9cb <+59>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008e9cf <+63>:\tjne    0x8e9e1 <main+81>\n   0x000000000008e9d5 <+69>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x000000000008e9dc <+76>:\tcall   0x877ac <stub _iso_stub_InitLateStaticFieldStub>\n   0x000000000008e9e1 <+81>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x000000000008e9e5 <+85>:\tmov    rax,QWORD PTR [rax+0x800]\n   0x000000000008e9ec <+92>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x000000000008e9f0 <+96>:\tjne    0x8ea02 <main+114>\n   0x000000000008e9f6 <+102>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x000000000008e9fd <+109>:\tcall   0x87764 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x000000000008ea02 <+114>:\tcall   0x68488 <new _Directory>\n   0x000000000008ea07 <+119>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008ea0b <+123>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008ea0f <+127>:\tmov    QWORD PTR [rax+0x7],rdi\n   0x000000000008ea13 <+131>:\tcall   0x69910 <FileSystemEntity._toUtf8Array>\n   0x000000000008ea18 <+136>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008ea1c <+140>:\tmov    rsi,QWORD PTR [r14+0x80]\n   0x000000000008ea23 <+147>:\tmov    rdx,QWORD PTR [r14+0x78]\n   0x000000000008ea27 <+151>:\tcall   0x8eec8 <_Directory.list>\n   0x000000000008ea2c <+156>:\tmov    rbx,QWORD PTR [r15+0x17f7]\n   0x000000000008ea33 <+163>:\tmov    rdx,QWORD PTR [r14+0x70]\n   0x000000000008ea37 <+167>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008ea3b <+171>:\tcall   0x8866c <stub _iso_stub_AllocateClosureStub>\n   0x000000000008ea40 <+176>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008ea44 <+180>:\tmov    rsi,rax\n   0x000000000008ea47 <+183>:\tcall   0x8ea64 <Stream.forEach>\n   0x000000000008ea4c <+188>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008ea50 <+192>:\tmov    rsp,rbp\n   0x000000000008ea53 <+195>:\tpop    rbp\n   0x000000000008ea54 <+196>:\tret\n   0x000000000008ea55 <+197>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008ea5c <+204>:\tjmp    0x8e9a2 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "write-language-name-in-3d-ascii.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main(){\n print(\"\"\"\n\n XXX       XX       XXX     XXXX\n  X   X    X    X     X    X      X\n   X   X    XXXX      XXX        X\n    XXX      X    X      X   X      X\n  \"\"\".replaceAll('X','_/'));\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a18d <main+57>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tmov    rsi,QWORD PTR [r15+0x17ff]\n   0x000000000008a170 <+28>:\tmov    rdx,QWORD PTR [r15+0x1807]\n   0x000000000008a177 <+35>:\tcall   0x62fa8 <_StringBase.replaceAll>\n   0x000000000008a17c <+40>:\tmov    rdi,rax\n   0x000000000008a17f <+43>:\tcall   0x8a198 <print>\n   0x000000000008a184 <+48>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a188 <+52>:\tmov    rsp,rbp\n   0x000000000008a18b <+55>:\tpop    rbp\n   0x000000000008a18c <+56>:\tret\n   0x000000000008a18d <+57>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a194 <+64>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "yin-and-yang-1.dart",
  "functions": [
    {
      "name": "main",
      "source": "int main() {\n  yinYang(18);\n  return 0;\n}",
      "assembly": "Dump of assembler code for function main:\n   0x0000000000090b00 <+0>:\tpush   rbp\n   0x0000000000090b01 <+1>:\tmov    rbp,rsp\n   0x0000000000090b04 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b08 <+8>:\tjbe    0x90b1a <main+26>\n   0x0000000000090b0e <+14>:\tcall   0x90b24 <yinYang>\n   0x0000000000090b13 <+19>:\txor    eax,eax\n   0x0000000000090b15 <+21>:\tmov    rsp,rbp\n   0x0000000000090b18 <+24>:\tpop    rbp\n   0x0000000000090b19 <+25>:\tret\n   0x0000000000090b1a <+26>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090b21 <+33>:\tjmp    0x90b0e <main+14>\nEnd of assembler dump.\n"
    },
    {
      "name": "pixel",
      "source": "String pixel(int x, int y, int r) {\n  if (circle(x, y, -r ~/ 2, r ~/ 6)) {\n    return '#';\n  }\n  if (circle(x, y, r ~/ 2, r ~/ 6)) {\n    return '.';\n  }\n  if (circle(x, y, -r ~/ 2, r ~/ 2)) {\n    return '.';\n  }\n  if (circle(x, y, r ~/ 2, r ~/ 2)) {\n    return '#';\n  }\n  if (circle(x, y, 0, r)) {\n    if (x < 0) {\n      return '.';\n    } else {\n      return '#';\n    }\n  }\n  return ' ';\n}",
      "assembly": "Dump of assembler code for function pixel:\n   0x0000000000091160 <+0>:\tpush   rbp\n   0x0000000000091161 <+1>:\tmov    rbp,rsp\n   0x0000000000091164 <+4>:\tmov    ecx,0x2\n   0x0000000000091169 <+9>:\tmov    rax,rdi\n   0x000000000009116c <+12>:\tmov    r11,rax\n   0x000000000009116f <+15>:\tmov    rax,QWORD PTR [r15+0x607]\n   0x0000000000091176 <+22>:\timul   r11\n   0x0000000000091179 <+25>:\tadd    rdx,r11\n   0x000000000009117c <+28>:\tmov    rax,rdx\n   0x000000000009117f <+31>:\tshr    rdx,0x3f\n   0x0000000000091183 <+35>:\tadd    rdx,rax\n   0x0000000000091186 <+38>:\tmov    rax,rdx\n   0x0000000000091189 <+41>:\tmov    rcx,rax\n   0x000000000009118c <+44>:\timul   rcx,rax\n   0x0000000000091190 <+48>:\tmov    rdx,rsi\n   0x0000000000091193 <+51>:\tsub    rdx,0xfffffffffffffff7\n   0x0000000000091197 <+55>:\tmov    rbx,rdx\n   0x000000000009119a <+58>:\timul   rbx,rdx\n   0x000000000009119e <+62>:\tadd    rbx,rcx\n   0x00000000000911a1 <+65>:\tcmp    rbx,0x9\n   0x00000000000911a5 <+69>:\tjg     0x911b7 <pixel+87>\n   0x00000000000911ab <+75>:\tmov    rax,QWORD PTR [r15+0x1aa7]\n   0x00000000000911b2 <+82>:\tmov    rsp,rbp\n   0x00000000000911b5 <+85>:\tpop    rbp\n   0x00000000000911b6 <+86>:\tret\n   0x00000000000911b7 <+87>:\tmov    rdx,rsi\n   0x00000000000911ba <+90>:\tsub    rdx,0x9\n   0x00000000000911be <+94>:\tmov    r8,rdx\n   0x00000000000911c1 <+97>:\timul   r8,rdx\n   0x00000000000911c5 <+101>:\tadd    r8,rcx\n   0x00000000000911c8 <+104>:\tcmp    r8,0x9\n   0x00000000000911cc <+108>:\tjg     0x911de <pixel+126>\n   0x00000000000911d2 <+114>:\tmov    rax,QWORD PTR [r15+0xbf]\n   0x00000000000911d9 <+121>:\tmov    rsp,rbp\n   0x00000000000911dc <+124>:\tpop    rbp\n   0x00000000000911dd <+125>:\tret\n   0x00000000000911de <+126>:\tcmp    rbx,0x51\n   0x00000000000911e2 <+130>:\tjg     0x911f4 <pixel+148>\n   0x00000000000911e8 <+136>:\tmov    rax,QWORD PTR [r15+0xbf]\n   0x00000000000911ef <+143>:\tmov    rsp,rbp\n   0x00000000000911f2 <+146>:\tpop    rbp\n   0x00000000000911f3 <+147>:\tret\n   0x00000000000911f4 <+148>:\tcmp    r8,0x51\n   0x00000000000911f8 <+152>:\tjg     0x9120a <pixel+170>\n   0x00000000000911fe <+158>:\tmov    rax,QWORD PTR [r15+0x1aa7]\n   0x0000000000091205 <+165>:\tmov    rsp,rbp\n   0x0000000000091208 <+168>:\tpop    rbp\n   0x0000000000091209 <+169>:\tret\n   0x000000000009120a <+170>:\tmov    rdx,rsi\n   0x000000000009120d <+173>:\timul   rdx,rsi\n   0x0000000000091211 <+177>:\tadd    rcx,rdx\n   0x0000000000091214 <+180>:\tcmp    rcx,0x144\n   0x000000000009121b <+187>:\tjg     0x91243 <pixel+227>\n   0x0000000000091221 <+193>:\tcmp    rdi,0x0\n   0x0000000000091225 <+197>:\tjge    0x91237 <pixel+215>\n   0x000000000009122b <+203>:\tmov    rax,QWORD PTR [r15+0xbf]\n   0x0000000000091232 <+210>:\tmov    rsp,rbp\n   0x0000000000091235 <+213>:\tpop    rbp\n   0x0000000000091236 <+214>:\tret\n   0x0000000000091237 <+215>:\tmov    rax,QWORD PTR [r15+0x1aa7]\n   0x000000000009123e <+222>:\tmov    rsp,rbp\n   0x0000000000091241 <+225>:\tpop    rbp\n   0x0000000000091242 <+226>:\tret\n   0x0000000000091243 <+227>:\tmov    rax,QWORD PTR [r15+0x5df]\n   0x000000000009124a <+234>:\tmov    rsp,rbp\n   0x000000000009124d <+237>:\tpop    rbp\n   0x000000000009124e <+238>:\tret\nEnd of assembler dump.\n"
    },
    {
      "name": "yinYang",
      "source": "void yinYang(int r) {\n  for (int y = -r; y <= r; y++) {\n    for (int x = -2 * r; x <= 2 * r; x++) {\n      stdout.write(pixel(x, y, r));\n    }\n    stdout.write('\\n');\n  }\n}",
      "assembly": "Dump of assembler code for function yinYang:\n   0x0000000000090b24 <+0>:\tpush   rbp\n   0x0000000000090b25 <+1>:\tmov    rbp,rsp\n   0x0000000000090b28 <+4>:\tsub    rsp,0x18\n   0x0000000000090b2c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b30 <+12>:\tjbe    0x90c93 <yinYang+367>\n   0x0000000000090b36 <+18>:\tmov    rsi,0xffffffffffffffee\n   0x0000000000090b3d <+25>:\tmov    QWORD PTR [rbp-0x10],rsi\n   0x0000000000090b41 <+29>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b45 <+33>:\tjbe    0x90c9f <yinYang+379>\n   0x0000000000090b4b <+39>:\tcmp    rsi,0x12\n   0x0000000000090b4f <+43>:\tjg     0x90c8a <yinYang+358>\n   0x0000000000090b55 <+49>:\tmov    rdi,0xffffffffffffffdc\n   0x0000000000090b5c <+56>:\tmov    QWORD PTR [rbp-0x8],rdi\n   0x0000000000090b60 <+60>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x0000000000090b64 <+64>:\tjbe    0x90cab <yinYang+391>\n   0x0000000000090b6a <+70>:\tcmp    rdi,0x24\n   0x0000000000090b6e <+74>:\tjg     0x90c08 <yinYang+228>\n   0x0000000000090b74 <+80>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090b78 <+84>:\tmov    rax,QWORD PTR [rax+0x6c0]\n   0x0000000000090b7f <+91>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090b83 <+95>:\tjne    0x90b95 <yinYang+113>\n   0x0000000000090b89 <+101>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000090b90 <+108>:\tcall   0x89b70 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090b95 <+113>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090b99 <+117>:\tmov    rax,QWORD PTR [rax+0x7c8]\n   0x0000000000090ba0 <+124>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090ba4 <+128>:\tjne    0x90bb6 <yinYang+146>\n   0x0000000000090baa <+134>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000090bb1 <+141>:\tcall   0x89b28 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090bb6 <+146>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090bba <+150>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000090bc1 <+157>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090bc5 <+161>:\tjne    0x90bd7 <yinYang+179>\n   0x0000000000090bcb <+167>:\tmov    rdx,QWORD PTR [r15+0x1837]\n   0x0000000000090bd2 <+174>:\tcall   0x89b28 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090bd7 <+179>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x0000000000090bdb <+183>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x0000000000090bdf <+187>:\tmov    QWORD PTR [rbp-0x18],rax\n   0x0000000000090be3 <+191>:\tcall   0x91160 <pixel>\n   0x0000000000090be8 <+196>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x0000000000090bec <+200>:\tmov    rsi,rax\n   0x0000000000090bef <+203>:\tcall   0x90cb8 <_StdSink._write>\n   0x0000000000090bf4 <+208>:\tmov    rax,QWORD PTR [rbp-0x8]\n   0x0000000000090bf8 <+212>:\tadd    rax,0x1\n   0x0000000000090bfc <+216>:\tmov    rdi,rax\n   0x0000000000090bff <+219>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x0000000000090c03 <+223>:\tjmp    0x90b5c <yinYang+56>\n   0x0000000000090c08 <+228>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090c0c <+232>:\tmov    rax,QWORD PTR [rax+0x6c0]\n   0x0000000000090c13 <+239>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090c17 <+243>:\tjne    0x90c29 <yinYang+261>\n   0x0000000000090c1d <+249>:\tmov    rdx,QWORD PTR [r15+0x867]\n   0x0000000000090c24 <+256>:\tcall   0x89b70 <stub _iso_stub_InitLateStaticFieldStub>\n   0x0000000000090c29 <+261>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090c2d <+265>:\tmov    rax,QWORD PTR [rax+0x7c8]\n   0x0000000000090c34 <+272>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090c38 <+276>:\tjne    0x90c4a <yinYang+294>\n   0x0000000000090c3e <+282>:\tmov    rdx,QWORD PTR [r15+0x86f]\n   0x0000000000090c45 <+289>:\tcall   0x89b28 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090c4a <+294>:\tmov    rax,QWORD PTR [r14+0x60]\n   0x0000000000090c4e <+298>:\tmov    rax,QWORD PTR [rax+0x7d0]\n   0x0000000000090c55 <+305>:\tcmp    rax,QWORD PTR [r15+0x3f]\n   0x0000000000090c59 <+309>:\tjne    0x90c6b <yinYang+327>\n   0x0000000000090c5f <+315>:\tmov    rdx,QWORD PTR [r15+0x1837]\n   0x0000000000090c66 <+322>:\tcall   0x89b28 <stub _iso_stub_InitLateFinalStaticFieldStub>\n   0x0000000000090c6b <+327>:\tmov    rdi,rax\n   0x0000000000090c6e <+330>:\tmov    rsi,QWORD PTR [r15+0x183f]\n   0x0000000000090c75 <+337>:\tcall   0x90cb8 <_StdSink._write>\n   0x0000000000090c7a <+342>:\tmov    rcx,QWORD PTR [rbp-0x10]\n   0x0000000000090c7e <+346>:\tadd    rcx,0x1\n   0x0000000000090c82 <+350>:\tmov    rsi,rcx\n   0x0000000000090c85 <+353>:\tjmp    0x90b3d <yinYang+25>\n   0x0000000000090c8a <+358>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x0000000000090c8e <+362>:\tmov    rsp,rbp\n   0x0000000000090c91 <+365>:\tpop    rbp\n   0x0000000000090c92 <+366>:\tret\n   0x0000000000090c93 <+367>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090c9a <+374>:\tjmp    0x90b36 <yinYang+18>\n   0x0000000000090c9f <+379>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090ca6 <+386>:\tjmp    0x90b4b <yinYang+39>\n   0x0000000000090cab <+391>:\tcall   QWORD PTR [r14+0x230]\n   0x0000000000090cb2 <+398>:\tjmp    0x90b6a <yinYang+70>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "zeckendorf-arithmetic.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  print(\"Addition:\");\n  var g = Zeckendorf(\"10\");\n  g + Zeckendorf(\"10\");\n  print(g);\n  g + Zeckendorf(\"10\");\n  print(g);\n  g + Zeckendorf(\"1001\");\n  print(g);\n  g + Zeckendorf(\"1000\");\n  print(g);\n  g + Zeckendorf(\"10101\");\n  print(g);\n\n  print(\"\\nSubtraction:\");\n  g = Zeckendorf(\"1000\");\n  g - Zeckendorf(\"101\");\n  print(g);\n  g = Zeckendorf(\"10101010\");\n  g - Zeckendorf(\"1010101\");\n  print(g);\n\n  print(\"\\nMultiplication:\");\n  g = Zeckendorf(\"1001\");\n  g * Zeckendorf(\"101\");\n  print(g);\n  g = Zeckendorf(\"101010\");\n  g + Zeckendorf(\"101\");\n  print(g);\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a438 <+0>:\tpush   rbp\n   0x000000000008a439 <+1>:\tmov    rbp,rsp\n   0x000000000008a43c <+4>:\tsub    rsp,0x10\n   0x000000000008a440 <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a444 <+12>:\tjbe    0x8a68d <main+597>\n   0x000000000008a44a <+18>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a451 <+25>:\tcall   0x8b31c <printToConsole>\n   0x000000000008a456 <+30>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a45b <+35>:\tmov    rdi,rax\n   0x000000000008a45e <+38>:\tmov    rsi,QWORD PTR [r15+0x17ff]\n   0x000000000008a465 <+45>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a469 <+49>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a46e <+54>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a473 <+59>:\tmov    rdi,rax\n   0x000000000008a476 <+62>:\tmov    rsi,QWORD PTR [r15+0x17ff]\n   0x000000000008a47d <+69>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a481 <+73>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a486 <+78>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a48a <+82>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a48e <+86>:\tcall   0x8b184 <Zeckendorf.+>\n   0x000000000008a493 <+91>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a497 <+95>:\tcall   0x8b14c <print>\n   0x000000000008a49c <+100>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a4a1 <+105>:\tmov    rdi,rax\n   0x000000000008a4a4 <+108>:\tmov    rsi,QWORD PTR [r15+0x17ff]\n   0x000000000008a4ab <+115>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a4af <+119>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a4b4 <+124>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4b8 <+128>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a4bc <+132>:\tcall   0x8b184 <Zeckendorf.+>\n   0x000000000008a4c1 <+137>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4c5 <+141>:\tcall   0x8b14c <print>\n   0x000000000008a4ca <+146>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a4cf <+151>:\tmov    rdi,rax\n   0x000000000008a4d2 <+154>:\tmov    rsi,QWORD PTR [r15+0x1807]\n   0x000000000008a4d9 <+161>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a4dd <+165>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a4e2 <+170>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4e6 <+174>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a4ea <+178>:\tcall   0x8b184 <Zeckendorf.+>\n   0x000000000008a4ef <+183>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a4f3 <+187>:\tcall   0x8b14c <print>\n   0x000000000008a4f8 <+192>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a4fd <+197>:\tmov    rdi,rax\n   0x000000000008a500 <+200>:\tmov    rsi,QWORD PTR [r15+0x180f]\n   0x000000000008a507 <+207>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a50b <+211>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a510 <+216>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a514 <+220>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a518 <+224>:\tcall   0x8b184 <Zeckendorf.+>\n   0x000000000008a51d <+229>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a521 <+233>:\tcall   0x8b14c <print>\n   0x000000000008a526 <+238>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a52b <+243>:\tmov    rdi,rax\n   0x000000000008a52e <+246>:\tmov    rsi,QWORD PTR [r15+0x1817]\n   0x000000000008a535 <+253>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a539 <+257>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a53e <+262>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a542 <+266>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a546 <+270>:\tcall   0x8b184 <Zeckendorf.+>\n   0x000000000008a54b <+275>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a54f <+279>:\tcall   0x8b14c <print>\n   0x000000000008a554 <+284>:\tmov    rdi,QWORD PTR [r15+0x181f]\n   0x000000000008a55b <+291>:\tcall   0x8b31c <printToConsole>\n   0x000000000008a560 <+296>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a565 <+301>:\tmov    rdi,rax\n   0x000000000008a568 <+304>:\tmov    rsi,QWORD PTR [r15+0x180f]\n   0x000000000008a56f <+311>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a573 <+315>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a578 <+320>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a57d <+325>:\tmov    rdi,rax\n   0x000000000008a580 <+328>:\tmov    rsi,QWORD PTR [r15+0x1827]\n   0x000000000008a587 <+335>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a58b <+339>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a590 <+344>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a594 <+348>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a598 <+352>:\tcall   0x8ae04 <Zeckendorf.->\n   0x000000000008a59d <+357>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a5a1 <+361>:\tcall   0x8b14c <print>\n   0x000000000008a5a6 <+366>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a5ab <+371>:\tmov    rdi,rax\n   0x000000000008a5ae <+374>:\tmov    rsi,QWORD PTR [r15+0x182f]\n   0x000000000008a5b5 <+381>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a5b9 <+385>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a5be <+390>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a5c3 <+395>:\tmov    rdi,rax\n   0x000000000008a5c6 <+398>:\tmov    rsi,QWORD PTR [r15+0x1837]\n   0x000000000008a5cd <+405>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a5d1 <+409>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a5d6 <+414>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a5da <+418>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a5de <+422>:\tcall   0x8ae04 <Zeckendorf.->\n   0x000000000008a5e3 <+427>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a5e7 <+431>:\tcall   0x8b14c <print>\n   0x000000000008a5ec <+436>:\tmov    rdi,QWORD PTR [r15+0x183f]\n   0x000000000008a5f3 <+443>:\tcall   0x8b31c <printToConsole>\n   0x000000000008a5f8 <+448>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a5fd <+453>:\tmov    rdi,rax\n   0x000000000008a600 <+456>:\tmov    rsi,QWORD PTR [r15+0x1807]\n   0x000000000008a607 <+463>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a60b <+467>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a610 <+472>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a615 <+477>:\tmov    rdi,rax\n   0x000000000008a618 <+480>:\tmov    rsi,QWORD PTR [r15+0x1827]\n   0x000000000008a61f <+487>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a623 <+491>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a628 <+496>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a62c <+500>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a630 <+504>:\tcall   0x8a69c <Zeckendorf.*>\n   0x000000000008a635 <+509>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a639 <+513>:\tcall   0x8b14c <print>\n   0x000000000008a63e <+518>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a643 <+523>:\tmov    rdi,rax\n   0x000000000008a646 <+526>:\tmov    rsi,QWORD PTR [r15+0x1847]\n   0x000000000008a64d <+533>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a651 <+537>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a656 <+542>:\tcall   0x8b310 <new Zeckendorf>\n   0x000000000008a65b <+547>:\tmov    rdi,rax\n   0x000000000008a65e <+550>:\tmov    rsi,QWORD PTR [r15+0x1827]\n   0x000000000008a665 <+557>:\tmov    QWORD PTR [rbp-0x10],rax\n   0x000000000008a669 <+561>:\tcall   0x8b250 <new Zeckendorf>\n   0x000000000008a66e <+566>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a672 <+570>:\tmov    rsi,QWORD PTR [rbp-0x10]\n   0x000000000008a676 <+574>:\tcall   0x8b184 <Zeckendorf.+>\n   0x000000000008a67b <+579>:\tmov    rdi,QWORD PTR [rbp-0x8]\n   0x000000000008a67f <+583>:\tcall   0x8b14c <print>\n   0x000000000008a684 <+588>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a688 <+592>:\tmov    rsp,rbp\n   0x000000000008a68b <+595>:\tpop    rbp\n   0x000000000008a68c <+596>:\tret\n   0x000000000008a68d <+597>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a694 <+604>:\tjmp    0x8a44a <main+18>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "zero-to-the-zero-power.dart",
  "functions": [
    {
      "name": "main",
      "source": "void main() {\n  var resul = pow(0, 0);\n  print(\"0 ^ 0 = $resul\");\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a15c <+8>:\tjbe    0x8a177 <main+35>\n   0x000000000008a162 <+14>:\tmov    rdi,QWORD PTR [r15+0x17f7]\n   0x000000000008a169 <+21>:\tcall   0x8a180 <print>\n   0x000000000008a16e <+26>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a172 <+30>:\tmov    rsp,rbp\n   0x000000000008a175 <+33>:\tpop    rbp\n   0x000000000008a176 <+34>:\tret\n   0x000000000008a177 <+35>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a17e <+42>:\tjmp    0x8a162 <main+14>\nEnd of assembler dump.\n"
    }
  ]
}
{
  "file": "sudan-function.dart",
  "functions": [
    {
      "name": "F",
      "source": "int F(int n, int x, int y) {\n  if (n == 0) {\n    return x + y;\n  } else if (y == 0) {\n    return x;\n  }\n\n  return F(n - 1, F(n, x, y - 1), F(n, x, y - 1) + y);\n}",
      "assembly": "Dump of assembler code for function F:\n   0x000000000008a2a0 <+0>:\tpush   rbp\n   0x000000000008a2a1 <+1>:\tmov    rbp,rsp\n   0x000000000008a2a4 <+4>:\tsub    rsp,0x28\n   0x000000000008a2a8 <+8>:\tmov    rbx,rdi\n   0x000000000008a2ab <+11>:\tmov    rcx,rsi\n   0x000000000008a2ae <+14>:\tmov    rax,rdx\n   0x000000000008a2b1 <+17>:\tmov    QWORD PTR [rbp-0x18],rdi\n   0x000000000008a2b5 <+21>:\tmov    QWORD PTR [rbp-0x20],rsi\n   0x000000000008a2b9 <+25>:\tmov    QWORD PTR [rbp-0x28],rdx\n   0x000000000008a2bd <+29>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a2c1 <+33>:\tjbe    0x8a346 <F+166>\n   0x000000000008a2c7 <+39>:\tcmp    rbx,0x0\n   0x000000000008a2cb <+43>:\tjne    0x8a2dc <F+60>\n   0x000000000008a2d1 <+49>:\tadd    rcx,rax\n   0x000000000008a2d4 <+52>:\tmov    rax,rcx\n   0x000000000008a2d7 <+55>:\tmov    rsp,rbp\n   0x000000000008a2da <+58>:\tpop    rbp\n   0x000000000008a2db <+59>:\tret\n   0x000000000008a2dc <+60>:\tcmp    rax,0x0\n   0x000000000008a2e0 <+64>:\tjne    0x8a2ee <F+78>\n   0x000000000008a2e6 <+70>:\tmov    rax,rcx\n   0x000000000008a2e9 <+73>:\tmov    rsp,rbp\n   0x000000000008a2ec <+76>:\tpop    rbp\n   0x000000000008a2ed <+77>:\tret\n   0x000000000008a2ee <+78>:\tmov    r8,rbx\n   0x000000000008a2f1 <+81>:\tsub    r8,0x1\n   0x000000000008a2f5 <+85>:\tmov    QWORD PTR [rbp-0x10],r8\n   0x000000000008a2f9 <+89>:\tmov    r9,rax\n   0x000000000008a2fc <+92>:\tsub    r9,0x1\n   0x000000000008a300 <+96>:\tmov    rdi,rbx\n   0x000000000008a303 <+99>:\tmov    rsi,rcx\n   0x000000000008a306 <+102>:\tmov    rdx,r9\n   0x000000000008a309 <+105>:\tmov    QWORD PTR [rbp-0x8],r9\n   0x000000000008a30d <+109>:\tcall   0x8a2a0 <F>\n   0x000000000008a312 <+114>:\tmov    rdi,QWORD PTR [rbp-0x18]\n   0x000000000008a316 <+118>:\tmov    rsi,QWORD PTR [rbp-0x20]\n   0x000000000008a31a <+122>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a31e <+126>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a322 <+130>:\tcall   0x8a2a0 <F>\n   0x000000000008a327 <+135>:\tmov    rcx,rax\n   0x000000000008a32a <+138>:\tmov    rax,QWORD PTR [rbp-0x28]\n   0x000000000008a32e <+142>:\tadd    rcx,rax\n   0x000000000008a331 <+145>:\tmov    rdi,QWORD PTR [rbp-0x10]\n   0x000000000008a335 <+149>:\tmov    rsi,QWORD PTR [rbp-0x8]\n   0x000000000008a339 <+153>:\tmov    rdx,rcx\n   0x000000000008a33c <+156>:\tcall   0x8a2a0 <F>\n   0x000000000008a341 <+161>:\tmov    rsp,rbp\n   0x000000000008a344 <+164>:\tpop    rbp\n   0x000000000008a345 <+165>:\tret\n   0x000000000008a346 <+166>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a34d <+173>:\tjmp    0x8a2c7 <F+39>\nEnd of assembler dump.\n"
    },
    {
      "name": "main",
      "source": "void main() {\n  print('F(1,3,3) = ${F(1, 3, 3)}');\n}",
      "assembly": "Dump of assembler code for function main:\n   0x000000000008a154 <+0>:\tpush   rbp\n   0x000000000008a155 <+1>:\tmov    rbp,rsp\n   0x000000000008a158 <+4>:\tsub    rsp,0x10\n   0x000000000008a15c <+8>:\tcmp    rsp,QWORD PTR [r14+0x38]\n   0x000000000008a160 <+12>:\tjbe    0x8a1f5 <main+161>\n   0x000000000008a166 <+18>:\tmov    rbx,QWORD PTR [r14+0x70]\n   0x000000000008a16a <+22>:\tmov    r10d,0x4\n   0x000000000008a170 <+28>:\tcall   0x84c6c <stub _iso_stub_AllocateArrayStub>\n   0x000000000008a175 <+33>:\tmov    QWORD PTR [rbp-0x8],rax\n   0x000000000008a179 <+37>:\tmov    r11,QWORD PTR [r15+0x17f7]\n   0x000000000008a180 <+44>:\tmov    QWORD PTR [rax+0x17],r11\n   0x000000000008a184 <+48>:\tmov    edi,0x1\n   0x000000000008a189 <+53>:\tmov    esi,0x3\n   0x000000000008a18e <+58>:\tmov    edx,0x3\n   0x000000000008a193 <+63>:\tcall   0x8a2a0 <F>\n   0x000000000008a198 <+68>:\tmov    rcx,rax\n   0x000000000008a19b <+71>:\tmov    rax,rcx\n   0x000000000008a19e <+74>:\tadd    rax,rax\n   0x000000000008a1a1 <+77>:\tjno    0x8a1b0 <main+92>\n   0x000000000008a1a7 <+83>:\tcall   0x84ef0 <stub _iso_stub_AllocateMintSharedWithoutFPURegsStub>\n   0x000000000008a1ac <+88>:\tmov    QWORD PTR [rax+0x7],rcx\n   0x000000000008a1b0 <+92>:\tmov    rdx,QWORD PTR [rbp-0x8]\n   0x000000000008a1b4 <+96>:\tlea    r13,[rdx+0x1f]\n   0x000000000008a1b8 <+100>:\tmov    QWORD PTR [r13+0x0],rax\n   0x000000000008a1bc <+104>:\ttest   al,0x1\n   0x000000000008a1be <+106>:\tje     0x8a1d7 <main+131>\n   0x000000000008a1c0 <+108>:\tmov    r11b,BYTE PTR [rdx-0x1]\n   0x000000000008a1c4 <+112>:\tshr    r11d,0x2\n   0x000000000008a1c8 <+116>:\tand    r11d,DWORD PTR [r14+0x40]\n   0x000000000008a1cc <+120>:\ttest   BYTE PTR [rax-0x1],r11b\n   0x000000000008a1d0 <+124>:\tje     0x8a1d7 <main+131>\n   0x000000000008a1d2 <+126>:\tcall   0x83284 <stub _iso_stub_ArrayWriteBarrierStub>\n   0x000000000008a1d7 <+131>:\tmov    r11,QWORD PTR [rbp-0x8]\n   0x000000000008a1db <+135>:\tmov    QWORD PTR [rsp],r11\n   0x000000000008a1df <+139>:\tcall   0x587bc <_StringBase._interpolate>\n   0x000000000008a1e4 <+144>:\tmov    rdi,rax\n   0x000000000008a1e7 <+147>:\tcall   0x8a204 <print>\n   0x000000000008a1ec <+152>:\tmov    rax,QWORD PTR [r14+0x70]\n   0x000000000008a1f0 <+156>:\tmov    rsp,rbp\n   0x000000000008a1f3 <+159>:\tpop    rbp\n   0x000000000008a1f4 <+160>:\tret\n   0x000000000008a1f5 <+161>:\tcall   QWORD PTR [r14+0x230]\n   0x000000000008a1fc <+168>:\tjmp    0x8a166 <main+18>\nEnd of assembler dump.\n"
    }
  ]
}